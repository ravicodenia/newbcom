{"ast":null,"code":"import { genFocusStyle } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genGroupStyle from './group'; // ============================== Shared ==============================\n\nconst genSharedButtonStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    fontWeight\n  } = token;\n  return {\n    [componentCls]: {\n      outline: 'none',\n      position: 'relative',\n      display: 'inline-block',\n      fontWeight,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      backgroundImage: 'none',\n      backgroundColor: 'transparent',\n      border: `${token.lineWidth}px ${token.lineType} transparent`,\n      cursor: 'pointer',\n      transition: `all ${token.motionDurationMid} ${token.motionEaseInOut}`,\n      userSelect: 'none',\n      touchAction: 'manipulation',\n      lineHeight: token.lineHeight,\n      color: token.colorText,\n      '&:disabled > *': {\n        pointerEvents: 'none'\n      },\n      '> span': {\n        display: 'inline-block'\n      },\n      [`${componentCls}-icon`]: {\n        lineHeight: 0\n      },\n      // Leave a space between icon and text.\n      [`> ${iconCls} + span, > span + ${iconCls}`]: {\n        marginInlineStart: token.marginXS\n      },\n      [`&:not(${componentCls}-icon-only) > ${componentCls}-icon`]: {\n        [`&${componentCls}-loading-icon, &:not(:last-child)`]: {\n          marginInlineEnd: token.marginXS\n        }\n      },\n      '> a': {\n        color: 'currentColor'\n      },\n      '&:not(:disabled)': Object.assign({}, genFocusStyle(token)),\n      // make `btn-icon-only` not too narrow\n      [`&-icon-only${componentCls}-compact-item`]: {\n        flex: 'none'\n      },\n      // Special styles for Primary Button\n      [`&-compact-item${componentCls}-primary`]: {\n        [`&:not([disabled]) + ${componentCls}-compact-item${componentCls}-primary:not([disabled])`]: {\n          position: 'relative',\n          '&:before': {\n            position: 'absolute',\n            top: -token.lineWidth,\n            insetInlineStart: -token.lineWidth,\n            display: 'inline-block',\n            width: token.lineWidth,\n            height: `calc(100% + ${token.lineWidth * 2}px)`,\n            backgroundColor: token.colorPrimaryHover,\n            content: '\"\"'\n          }\n        }\n      },\n      // Special styles for Primary Button\n      '&-compact-vertical-item': {\n        [`&${componentCls}-primary`]: {\n          [`&:not([disabled]) + ${componentCls}-compact-vertical-item${componentCls}-primary:not([disabled])`]: {\n            position: 'relative',\n            '&:before': {\n              position: 'absolute',\n              top: -token.lineWidth,\n              insetInlineStart: -token.lineWidth,\n              display: 'inline-block',\n              width: `calc(100% + ${token.lineWidth * 2}px)`,\n              height: token.lineWidth,\n              backgroundColor: token.colorPrimaryHover,\n              content: '\"\"'\n            }\n          }\n        }\n      }\n    }\n  };\n};\n\nconst genHoverActiveButtonStyle = (btnCls, hoverStyle, activeStyle) => ({\n  [`&:not(:disabled):not(${btnCls}-disabled)`]: {\n    '&:hover': hoverStyle,\n    '&:active': activeStyle\n  }\n}); // ============================== Shape ===============================\n\n\nconst genCircleButtonStyle = token => ({\n  minWidth: token.controlHeight,\n  paddingInlineStart: 0,\n  paddingInlineEnd: 0,\n  borderRadius: '50%'\n});\n\nconst genRoundButtonStyle = token => ({\n  borderRadius: token.controlHeight,\n  paddingInlineStart: token.controlHeight / 2,\n  paddingInlineEnd: token.controlHeight / 2\n}); // =============================== Type ===============================\n\n\nconst genDisabledStyle = token => ({\n  cursor: 'not-allowed',\n  borderColor: token.borderColorDisabled,\n  color: token.colorTextDisabled,\n  backgroundColor: token.colorBgContainerDisabled,\n  boxShadow: 'none'\n});\n\nconst genGhostButtonStyle = (btnCls, background, textColor, borderColor, textColorDisabled, borderColorDisabled, hoverStyle, activeStyle) => ({\n  [`&${btnCls}-background-ghost`]: Object.assign(Object.assign({\n    color: textColor || undefined,\n    backgroundColor: background,\n    borderColor: borderColor || undefined,\n    boxShadow: 'none'\n  }, genHoverActiveButtonStyle(btnCls, Object.assign({\n    backgroundColor: background\n  }, hoverStyle), Object.assign({\n    backgroundColor: background\n  }, activeStyle))), {\n    '&:disabled': {\n      cursor: 'not-allowed',\n      color: textColorDisabled || undefined,\n      borderColor: borderColorDisabled || undefined\n    }\n  })\n});\n\nconst genSolidDisabledButtonStyle = token => ({\n  [`&:disabled, &${token.componentCls}-disabled`]: Object.assign({}, genDisabledStyle(token))\n});\n\nconst genSolidButtonStyle = token => Object.assign({}, genSolidDisabledButtonStyle(token));\n\nconst genPureDisabledButtonStyle = token => ({\n  [`&:disabled, &${token.componentCls}-disabled`]: {\n    cursor: 'not-allowed',\n    color: token.colorTextDisabled\n  }\n}); // Type: Default\n\n\nconst genDefaultButtonStyle = token => Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, genSolidButtonStyle(token)), {\n  backgroundColor: token.defaultBg,\n  borderColor: token.defaultBorderColor,\n  color: token.defaultColor,\n  boxShadow: token.defaultShadow\n}), genHoverActiveButtonStyle(token.componentCls, {\n  color: token.colorPrimaryHover,\n  borderColor: token.colorPrimaryHover\n}, {\n  color: token.colorPrimaryActive,\n  borderColor: token.colorPrimaryActive\n})), genGhostButtonStyle(token.componentCls, token.ghostBg, token.defaultGhostColor, token.defaultGhostBorderColor, token.colorTextDisabled, token.colorBorder)), {\n  [`&${token.componentCls}-dangerous`]: Object.assign(Object.assign(Object.assign({\n    color: token.colorError,\n    borderColor: token.colorError\n  }, genHoverActiveButtonStyle(token.componentCls, {\n    color: token.colorErrorHover,\n    borderColor: token.colorErrorBorderHover\n  }, {\n    color: token.colorErrorActive,\n    borderColor: token.colorErrorActive\n  })), genGhostButtonStyle(token.componentCls, token.ghostBg, token.colorError, token.colorError, token.colorTextDisabled, token.colorBorder)), genSolidDisabledButtonStyle(token))\n}); // Type: Primary\n\n\nconst genPrimaryButtonStyle = token => Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, genSolidButtonStyle(token)), {\n  color: token.primaryColor,\n  backgroundColor: token.colorPrimary,\n  boxShadow: token.primaryShadow\n}), genHoverActiveButtonStyle(token.componentCls, {\n  color: token.colorTextLightSolid,\n  backgroundColor: token.colorPrimaryHover\n}, {\n  color: token.colorTextLightSolid,\n  backgroundColor: token.colorPrimaryActive\n})), genGhostButtonStyle(token.componentCls, token.ghostBg, token.colorPrimary, token.colorPrimary, token.colorTextDisabled, token.colorBorder, {\n  color: token.colorPrimaryHover,\n  borderColor: token.colorPrimaryHover\n}, {\n  color: token.colorPrimaryActive,\n  borderColor: token.colorPrimaryActive\n})), {\n  [`&${token.componentCls}-dangerous`]: Object.assign(Object.assign(Object.assign({\n    backgroundColor: token.colorError,\n    boxShadow: token.dangerShadow,\n    color: token.dangerColor\n  }, genHoverActiveButtonStyle(token.componentCls, {\n    backgroundColor: token.colorErrorHover\n  }, {\n    backgroundColor: token.colorErrorActive\n  })), genGhostButtonStyle(token.componentCls, token.ghostBg, token.colorError, token.colorError, token.colorTextDisabled, token.colorBorder, {\n    color: token.colorErrorHover,\n    borderColor: token.colorErrorHover\n  }, {\n    color: token.colorErrorActive,\n    borderColor: token.colorErrorActive\n  })), genSolidDisabledButtonStyle(token))\n}); // Type: Dashed\n\n\nconst genDashedButtonStyle = token => Object.assign(Object.assign({}, genDefaultButtonStyle(token)), {\n  borderStyle: 'dashed'\n}); // Type: Link\n\n\nconst genLinkButtonStyle = token => Object.assign(Object.assign(Object.assign({\n  color: token.colorLink\n}, genHoverActiveButtonStyle(token.componentCls, {\n  color: token.colorLinkHover,\n  backgroundColor: token.linkHoverBg\n}, {\n  color: token.colorLinkActive\n})), genPureDisabledButtonStyle(token)), {\n  [`&${token.componentCls}-dangerous`]: Object.assign(Object.assign({\n    color: token.colorError\n  }, genHoverActiveButtonStyle(token.componentCls, {\n    color: token.colorErrorHover\n  }, {\n    color: token.colorErrorActive\n  })), genPureDisabledButtonStyle(token))\n}); // Type: Text\n\n\nconst genTextButtonStyle = token => Object.assign(Object.assign(Object.assign({}, genHoverActiveButtonStyle(token.componentCls, {\n  color: token.colorText,\n  backgroundColor: token.textHoverBg\n}, {\n  color: token.colorText,\n  backgroundColor: token.colorBgTextActive\n})), genPureDisabledButtonStyle(token)), {\n  [`&${token.componentCls}-dangerous`]: Object.assign(Object.assign({\n    color: token.colorError\n  }, genPureDisabledButtonStyle(token)), genHoverActiveButtonStyle(token.componentCls, {\n    color: token.colorErrorHover,\n    backgroundColor: token.colorErrorBg\n  }, {\n    color: token.colorErrorHover,\n    backgroundColor: token.colorErrorBg\n  }))\n});\n\nconst genTypeButtonStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-default`]: genDefaultButtonStyle(token),\n    [`${componentCls}-primary`]: genPrimaryButtonStyle(token),\n    [`${componentCls}-dashed`]: genDashedButtonStyle(token),\n    [`${componentCls}-link`]: genLinkButtonStyle(token),\n    [`${componentCls}-text`]: genTextButtonStyle(token),\n    [`${componentCls}-ghost`]: genGhostButtonStyle(token.componentCls, token.ghostBg, token.colorBgContainer, token.colorBgContainer, token.colorTextDisabled, token.colorBorder)\n  };\n}; // =============================== Size ===============================\n\n\nconst genSizeButtonStyle = function (token) {\n  let sizePrefixCls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  const {\n    componentCls,\n    controlHeight,\n    fontSize,\n    lineHeight,\n    lineWidth,\n    borderRadius,\n    buttonPaddingHorizontal,\n    iconCls\n  } = token;\n  const paddingVertical = Math.max(0, (controlHeight - fontSize * lineHeight) / 2 - lineWidth);\n  const iconOnlyCls = `${componentCls}-icon-only`;\n  return [// Size\n  {\n    [`${componentCls}${sizePrefixCls}`]: {\n      fontSize,\n      height: controlHeight,\n      padding: `${paddingVertical}px ${buttonPaddingHorizontal}px`,\n      borderRadius,\n      [`&${iconOnlyCls}`]: {\n        width: controlHeight,\n        paddingInlineStart: 0,\n        paddingInlineEnd: 0,\n        [`&${componentCls}-round`]: {\n          width: 'auto'\n        },\n        [iconCls]: {\n          fontSize: token.buttonIconOnlyFontSize\n        }\n      },\n      // Loading\n      [`&${componentCls}-loading`]: {\n        opacity: token.opacityLoading,\n        cursor: 'default'\n      },\n      [`${componentCls}-loading-icon`]: {\n        transition: `width ${token.motionDurationSlow} ${token.motionEaseInOut}, opacity ${token.motionDurationSlow} ${token.motionEaseInOut}`\n      }\n    }\n  }, // Shape - patch prefixCls again to override solid border radius style\n  {\n    [`${componentCls}${componentCls}-circle${sizePrefixCls}`]: genCircleButtonStyle(token)\n  }, {\n    [`${componentCls}${componentCls}-round${sizePrefixCls}`]: genRoundButtonStyle(token)\n  }];\n};\n\nconst genSizeBaseButtonStyle = token => genSizeButtonStyle(mergeToken(token, {\n  fontSize: token.contentFontSize\n}));\n\nconst genSizeSmallButtonStyle = token => {\n  const smallToken = mergeToken(token, {\n    controlHeight: token.controlHeightSM,\n    fontSize: token.contentFontSizeSM,\n    padding: token.paddingXS,\n    buttonPaddingHorizontal: token.paddingInlineSM,\n    borderRadius: token.borderRadiusSM,\n    buttonIconOnlyFontSize: token.onlyIconSizeSM\n  });\n  return genSizeButtonStyle(smallToken, `${token.componentCls}-sm`);\n};\n\nconst genSizeLargeButtonStyle = token => {\n  const largeToken = mergeToken(token, {\n    controlHeight: token.controlHeightLG,\n    fontSize: token.contentFontSizeLG,\n    buttonPaddingHorizontal: token.paddingInlineLG,\n    borderRadius: token.borderRadiusLG,\n    buttonIconOnlyFontSize: token.onlyIconSizeLG\n  });\n  return genSizeButtonStyle(largeToken, `${token.componentCls}-lg`);\n};\n\nconst genBlockButtonStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      [`&${componentCls}-block`]: {\n        width: '100%'\n      }\n    }\n  };\n}; // ============================== Export ==============================\n\n\nexport const prepareToken = token => {\n  const {\n    paddingInline,\n    onlyIconSize\n  } = token;\n  const buttonToken = mergeToken(token, {\n    buttonPaddingHorizontal: paddingInline,\n    buttonIconOnlyFontSize: onlyIconSize\n  });\n  return buttonToken;\n};\nexport const prepareComponentToken = token => ({\n  fontWeight: 400,\n  defaultShadow: `0 ${token.controlOutlineWidth}px 0 ${token.controlTmpOutline}`,\n  primaryShadow: `0 ${token.controlOutlineWidth}px 0 ${token.controlOutline}`,\n  dangerShadow: `0 ${token.controlOutlineWidth}px 0 ${token.colorErrorOutline}`,\n  primaryColor: token.colorTextLightSolid,\n  dangerColor: token.colorTextLightSolid,\n  borderColorDisabled: token.colorBorder,\n  defaultGhostColor: token.colorBgContainer,\n  ghostBg: 'transparent',\n  defaultGhostBorderColor: token.colorBgContainer,\n  paddingInline: token.paddingContentHorizontal - token.lineWidth,\n  paddingInlineLG: token.paddingContentHorizontal - token.lineWidth,\n  paddingInlineSM: 8 - token.lineWidth,\n  onlyIconSize: token.fontSizeLG,\n  onlyIconSizeSM: token.fontSizeLG - 2,\n  onlyIconSizeLG: token.fontSizeLG + 2,\n  groupBorderColor: token.colorPrimaryHover,\n  linkHoverBg: 'transparent',\n  textHoverBg: token.colorBgTextHover,\n  defaultColor: token.colorText,\n  defaultBg: token.colorBgContainer,\n  defaultBorderColor: token.colorBorder,\n  defaultBorderColorDisabled: token.colorBorder,\n  contentFontSize: token.fontSize,\n  contentFontSizeSM: token.fontSize,\n  contentFontSizeLG: token.fontSizeLG\n});\nexport default genComponentStyleHook('Button', token => {\n  const buttonToken = prepareToken(token);\n  return [// Shared\n  genSharedButtonStyle(buttonToken), // Size\n  genSizeSmallButtonStyle(buttonToken), genSizeBaseButtonStyle(buttonToken), genSizeLargeButtonStyle(buttonToken), // Block\n  genBlockButtonStyle(buttonToken), // Group (type, ghost, danger, loading)\n  genTypeButtonStyle(buttonToken), // Button Group\n  genGroupStyle(buttonToken)];\n}, prepareComponentToken);","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/button/style/index.js"],"names":["genFocusStyle","genComponentStyleHook","mergeToken","genGroupStyle","genSharedButtonStyle","token","componentCls","iconCls","fontWeight","outline","position","display","whiteSpace","textAlign","backgroundImage","backgroundColor","border","lineWidth","lineType","cursor","transition","motionDurationMid","motionEaseInOut","userSelect","touchAction","lineHeight","color","colorText","pointerEvents","marginInlineStart","marginXS","marginInlineEnd","Object","assign","flex","top","insetInlineStart","width","height","colorPrimaryHover","content","genHoverActiveButtonStyle","btnCls","hoverStyle","activeStyle","genCircleButtonStyle","minWidth","controlHeight","paddingInlineStart","paddingInlineEnd","borderRadius","genRoundButtonStyle","genDisabledStyle","borderColor","borderColorDisabled","colorTextDisabled","colorBgContainerDisabled","boxShadow","genGhostButtonStyle","background","textColor","textColorDisabled","undefined","genSolidDisabledButtonStyle","genSolidButtonStyle","genPureDisabledButtonStyle","genDefaultButtonStyle","defaultBg","defaultBorderColor","defaultColor","defaultShadow","colorPrimaryActive","ghostBg","defaultGhostColor","defaultGhostBorderColor","colorBorder","colorError","colorErrorHover","colorErrorBorderHover","colorErrorActive","genPrimaryButtonStyle","primaryColor","colorPrimary","primaryShadow","colorTextLightSolid","dangerShadow","dangerColor","genDashedButtonStyle","borderStyle","genLinkButtonStyle","colorLink","colorLinkHover","linkHoverBg","colorLinkActive","genTextButtonStyle","textHoverBg","colorBgTextActive","colorErrorBg","genTypeButtonStyle","colorBgContainer","genSizeButtonStyle","sizePrefixCls","arguments","length","fontSize","buttonPaddingHorizontal","paddingVertical","Math","max","iconOnlyCls","padding","buttonIconOnlyFontSize","opacity","opacityLoading","motionDurationSlow","genSizeBaseButtonStyle","contentFontSize","genSizeSmallButtonStyle","smallToken","controlHeightSM","contentFontSizeSM","paddingXS","paddingInlineSM","borderRadiusSM","onlyIconSizeSM","genSizeLargeButtonStyle","largeToken","controlHeightLG","contentFontSizeLG","paddingInlineLG","borderRadiusLG","onlyIconSizeLG","genBlockButtonStyle","prepareToken","paddingInline","onlyIconSize","buttonToken","prepareComponentToken","controlOutlineWidth","controlTmpOutline","controlOutline","colorErrorOutline","paddingContentHorizontal","fontSizeLG","groupBorderColor","colorBgTextHover","defaultBorderColorDisabled"],"mappings":"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","sourcesContent":["import { genFocusStyle } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genGroupStyle from './group';\n// ============================== Shared ==============================\nconst genSharedButtonStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    fontWeight\n  } = token;\n  return {\n    [componentCls]: {\n      outline: 'none',\n      position: 'relative',\n      display: 'inline-block',\n      fontWeight,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      backgroundImage: 'none',\n      backgroundColor: 'transparent',\n      border: `${token.lineWidth}px ${token.lineType} transparent`,\n      cursor: 'pointer',\n      transition: `all ${token.motionDurationMid} ${token.motionEaseInOut}`,\n      userSelect: 'none',\n      touchAction: 'manipulation',\n      lineHeight: token.lineHeight,\n      color: token.colorText,\n      '&:disabled > *': {\n        pointerEvents: 'none'\n      },\n      '> span': {\n        display: 'inline-block'\n      },\n      [`${componentCls}-icon`]: {\n        lineHeight: 0\n      },\n      // Leave a space between icon and text.\n      [`> ${iconCls} + span, > span + ${iconCls}`]: {\n        marginInlineStart: token.marginXS\n      },\n      [`&:not(${componentCls}-icon-only) > ${componentCls}-icon`]: {\n        [`&${componentCls}-loading-icon, &:not(:last-child)`]: {\n          marginInlineEnd: token.marginXS\n        }\n      },\n      '> a': {\n        color: 'currentColor'\n      },\n      '&:not(:disabled)': Object.assign({}, genFocusStyle(token)),\n      // make `btn-icon-only` not too narrow\n      [`&-icon-only${componentCls}-compact-item`]: {\n        flex: 'none'\n      },\n      // Special styles for Primary Button\n      [`&-compact-item${componentCls}-primary`]: {\n        [`&:not([disabled]) + ${componentCls}-compact-item${componentCls}-primary:not([disabled])`]: {\n          position: 'relative',\n          '&:before': {\n            position: 'absolute',\n            top: -token.lineWidth,\n            insetInlineStart: -token.lineWidth,\n            display: 'inline-block',\n            width: token.lineWidth,\n            height: `calc(100% + ${token.lineWidth * 2}px)`,\n            backgroundColor: token.colorPrimaryHover,\n            content: '\"\"'\n          }\n        }\n      },\n      // Special styles for Primary Button\n      '&-compact-vertical-item': {\n        [`&${componentCls}-primary`]: {\n          [`&:not([disabled]) + ${componentCls}-compact-vertical-item${componentCls}-primary:not([disabled])`]: {\n            position: 'relative',\n            '&:before': {\n              position: 'absolute',\n              top: -token.lineWidth,\n              insetInlineStart: -token.lineWidth,\n              display: 'inline-block',\n              width: `calc(100% + ${token.lineWidth * 2}px)`,\n              height: token.lineWidth,\n              backgroundColor: token.colorPrimaryHover,\n              content: '\"\"'\n            }\n          }\n        }\n      }\n    }\n  };\n};\nconst genHoverActiveButtonStyle = (btnCls, hoverStyle, activeStyle) => ({\n  [`&:not(:disabled):not(${btnCls}-disabled)`]: {\n    '&:hover': hoverStyle,\n    '&:active': activeStyle\n  }\n});\n// ============================== Shape ===============================\nconst genCircleButtonStyle = token => ({\n  minWidth: token.controlHeight,\n  paddingInlineStart: 0,\n  paddingInlineEnd: 0,\n  borderRadius: '50%'\n});\nconst genRoundButtonStyle = token => ({\n  borderRadius: token.controlHeight,\n  paddingInlineStart: token.controlHeight / 2,\n  paddingInlineEnd: token.controlHeight / 2\n});\n// =============================== Type ===============================\nconst genDisabledStyle = token => ({\n  cursor: 'not-allowed',\n  borderColor: token.borderColorDisabled,\n  color: token.colorTextDisabled,\n  backgroundColor: token.colorBgContainerDisabled,\n  boxShadow: 'none'\n});\nconst genGhostButtonStyle = (btnCls, background, textColor, borderColor, textColorDisabled, borderColorDisabled, hoverStyle, activeStyle) => ({\n  [`&${btnCls}-background-ghost`]: Object.assign(Object.assign({\n    color: textColor || undefined,\n    backgroundColor: background,\n    borderColor: borderColor || undefined,\n    boxShadow: 'none'\n  }, genHoverActiveButtonStyle(btnCls, Object.assign({\n    backgroundColor: background\n  }, hoverStyle), Object.assign({\n    backgroundColor: background\n  }, activeStyle))), {\n    '&:disabled': {\n      cursor: 'not-allowed',\n      color: textColorDisabled || undefined,\n      borderColor: borderColorDisabled || undefined\n    }\n  })\n});\nconst genSolidDisabledButtonStyle = token => ({\n  [`&:disabled, &${token.componentCls}-disabled`]: Object.assign({}, genDisabledStyle(token))\n});\nconst genSolidButtonStyle = token => Object.assign({}, genSolidDisabledButtonStyle(token));\nconst genPureDisabledButtonStyle = token => ({\n  [`&:disabled, &${token.componentCls}-disabled`]: {\n    cursor: 'not-allowed',\n    color: token.colorTextDisabled\n  }\n});\n// Type: Default\nconst genDefaultButtonStyle = token => Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, genSolidButtonStyle(token)), {\n  backgroundColor: token.defaultBg,\n  borderColor: token.defaultBorderColor,\n  color: token.defaultColor,\n  boxShadow: token.defaultShadow\n}), genHoverActiveButtonStyle(token.componentCls, {\n  color: token.colorPrimaryHover,\n  borderColor: token.colorPrimaryHover\n}, {\n  color: token.colorPrimaryActive,\n  borderColor: token.colorPrimaryActive\n})), genGhostButtonStyle(token.componentCls, token.ghostBg, token.defaultGhostColor, token.defaultGhostBorderColor, token.colorTextDisabled, token.colorBorder)), {\n  [`&${token.componentCls}-dangerous`]: Object.assign(Object.assign(Object.assign({\n    color: token.colorError,\n    borderColor: token.colorError\n  }, genHoverActiveButtonStyle(token.componentCls, {\n    color: token.colorErrorHover,\n    borderColor: token.colorErrorBorderHover\n  }, {\n    color: token.colorErrorActive,\n    borderColor: token.colorErrorActive\n  })), genGhostButtonStyle(token.componentCls, token.ghostBg, token.colorError, token.colorError, token.colorTextDisabled, token.colorBorder)), genSolidDisabledButtonStyle(token))\n});\n// Type: Primary\nconst genPrimaryButtonStyle = token => Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, genSolidButtonStyle(token)), {\n  color: token.primaryColor,\n  backgroundColor: token.colorPrimary,\n  boxShadow: token.primaryShadow\n}), genHoverActiveButtonStyle(token.componentCls, {\n  color: token.colorTextLightSolid,\n  backgroundColor: token.colorPrimaryHover\n}, {\n  color: token.colorTextLightSolid,\n  backgroundColor: token.colorPrimaryActive\n})), genGhostButtonStyle(token.componentCls, token.ghostBg, token.colorPrimary, token.colorPrimary, token.colorTextDisabled, token.colorBorder, {\n  color: token.colorPrimaryHover,\n  borderColor: token.colorPrimaryHover\n}, {\n  color: token.colorPrimaryActive,\n  borderColor: token.colorPrimaryActive\n})), {\n  [`&${token.componentCls}-dangerous`]: Object.assign(Object.assign(Object.assign({\n    backgroundColor: token.colorError,\n    boxShadow: token.dangerShadow,\n    color: token.dangerColor\n  }, genHoverActiveButtonStyle(token.componentCls, {\n    backgroundColor: token.colorErrorHover\n  }, {\n    backgroundColor: token.colorErrorActive\n  })), genGhostButtonStyle(token.componentCls, token.ghostBg, token.colorError, token.colorError, token.colorTextDisabled, token.colorBorder, {\n    color: token.colorErrorHover,\n    borderColor: token.colorErrorHover\n  }, {\n    color: token.colorErrorActive,\n    borderColor: token.colorErrorActive\n  })), genSolidDisabledButtonStyle(token))\n});\n// Type: Dashed\nconst genDashedButtonStyle = token => Object.assign(Object.assign({}, genDefaultButtonStyle(token)), {\n  borderStyle: 'dashed'\n});\n// Type: Link\nconst genLinkButtonStyle = token => Object.assign(Object.assign(Object.assign({\n  color: token.colorLink\n}, genHoverActiveButtonStyle(token.componentCls, {\n  color: token.colorLinkHover,\n  backgroundColor: token.linkHoverBg\n}, {\n  color: token.colorLinkActive\n})), genPureDisabledButtonStyle(token)), {\n  [`&${token.componentCls}-dangerous`]: Object.assign(Object.assign({\n    color: token.colorError\n  }, genHoverActiveButtonStyle(token.componentCls, {\n    color: token.colorErrorHover\n  }, {\n    color: token.colorErrorActive\n  })), genPureDisabledButtonStyle(token))\n});\n// Type: Text\nconst genTextButtonStyle = token => Object.assign(Object.assign(Object.assign({}, genHoverActiveButtonStyle(token.componentCls, {\n  color: token.colorText,\n  backgroundColor: token.textHoverBg\n}, {\n  color: token.colorText,\n  backgroundColor: token.colorBgTextActive\n})), genPureDisabledButtonStyle(token)), {\n  [`&${token.componentCls}-dangerous`]: Object.assign(Object.assign({\n    color: token.colorError\n  }, genPureDisabledButtonStyle(token)), genHoverActiveButtonStyle(token.componentCls, {\n    color: token.colorErrorHover,\n    backgroundColor: token.colorErrorBg\n  }, {\n    color: token.colorErrorHover,\n    backgroundColor: token.colorErrorBg\n  }))\n});\nconst genTypeButtonStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-default`]: genDefaultButtonStyle(token),\n    [`${componentCls}-primary`]: genPrimaryButtonStyle(token),\n    [`${componentCls}-dashed`]: genDashedButtonStyle(token),\n    [`${componentCls}-link`]: genLinkButtonStyle(token),\n    [`${componentCls}-text`]: genTextButtonStyle(token),\n    [`${componentCls}-ghost`]: genGhostButtonStyle(token.componentCls, token.ghostBg, token.colorBgContainer, token.colorBgContainer, token.colorTextDisabled, token.colorBorder)\n  };\n};\n// =============================== Size ===============================\nconst genSizeButtonStyle = function (token) {\n  let sizePrefixCls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  const {\n    componentCls,\n    controlHeight,\n    fontSize,\n    lineHeight,\n    lineWidth,\n    borderRadius,\n    buttonPaddingHorizontal,\n    iconCls\n  } = token;\n  const paddingVertical = Math.max(0, (controlHeight - fontSize * lineHeight) / 2 - lineWidth);\n  const iconOnlyCls = `${componentCls}-icon-only`;\n  return [\n  // Size\n  {\n    [`${componentCls}${sizePrefixCls}`]: {\n      fontSize,\n      height: controlHeight,\n      padding: `${paddingVertical}px ${buttonPaddingHorizontal}px`,\n      borderRadius,\n      [`&${iconOnlyCls}`]: {\n        width: controlHeight,\n        paddingInlineStart: 0,\n        paddingInlineEnd: 0,\n        [`&${componentCls}-round`]: {\n          width: 'auto'\n        },\n        [iconCls]: {\n          fontSize: token.buttonIconOnlyFontSize\n        }\n      },\n      // Loading\n      [`&${componentCls}-loading`]: {\n        opacity: token.opacityLoading,\n        cursor: 'default'\n      },\n      [`${componentCls}-loading-icon`]: {\n        transition: `width ${token.motionDurationSlow} ${token.motionEaseInOut}, opacity ${token.motionDurationSlow} ${token.motionEaseInOut}`\n      }\n    }\n  },\n  // Shape - patch prefixCls again to override solid border radius style\n  {\n    [`${componentCls}${componentCls}-circle${sizePrefixCls}`]: genCircleButtonStyle(token)\n  }, {\n    [`${componentCls}${componentCls}-round${sizePrefixCls}`]: genRoundButtonStyle(token)\n  }];\n};\nconst genSizeBaseButtonStyle = token => genSizeButtonStyle(mergeToken(token, {\n  fontSize: token.contentFontSize\n}));\nconst genSizeSmallButtonStyle = token => {\n  const smallToken = mergeToken(token, {\n    controlHeight: token.controlHeightSM,\n    fontSize: token.contentFontSizeSM,\n    padding: token.paddingXS,\n    buttonPaddingHorizontal: token.paddingInlineSM,\n    borderRadius: token.borderRadiusSM,\n    buttonIconOnlyFontSize: token.onlyIconSizeSM\n  });\n  return genSizeButtonStyle(smallToken, `${token.componentCls}-sm`);\n};\nconst genSizeLargeButtonStyle = token => {\n  const largeToken = mergeToken(token, {\n    controlHeight: token.controlHeightLG,\n    fontSize: token.contentFontSizeLG,\n    buttonPaddingHorizontal: token.paddingInlineLG,\n    borderRadius: token.borderRadiusLG,\n    buttonIconOnlyFontSize: token.onlyIconSizeLG\n  });\n  return genSizeButtonStyle(largeToken, `${token.componentCls}-lg`);\n};\nconst genBlockButtonStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      [`&${componentCls}-block`]: {\n        width: '100%'\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareToken = token => {\n  const {\n    paddingInline,\n    onlyIconSize\n  } = token;\n  const buttonToken = mergeToken(token, {\n    buttonPaddingHorizontal: paddingInline,\n    buttonIconOnlyFontSize: onlyIconSize\n  });\n  return buttonToken;\n};\nexport const prepareComponentToken = token => ({\n  fontWeight: 400,\n  defaultShadow: `0 ${token.controlOutlineWidth}px 0 ${token.controlTmpOutline}`,\n  primaryShadow: `0 ${token.controlOutlineWidth}px 0 ${token.controlOutline}`,\n  dangerShadow: `0 ${token.controlOutlineWidth}px 0 ${token.colorErrorOutline}`,\n  primaryColor: token.colorTextLightSolid,\n  dangerColor: token.colorTextLightSolid,\n  borderColorDisabled: token.colorBorder,\n  defaultGhostColor: token.colorBgContainer,\n  ghostBg: 'transparent',\n  defaultGhostBorderColor: token.colorBgContainer,\n  paddingInline: token.paddingContentHorizontal - token.lineWidth,\n  paddingInlineLG: token.paddingContentHorizontal - token.lineWidth,\n  paddingInlineSM: 8 - token.lineWidth,\n  onlyIconSize: token.fontSizeLG,\n  onlyIconSizeSM: token.fontSizeLG - 2,\n  onlyIconSizeLG: token.fontSizeLG + 2,\n  groupBorderColor: token.colorPrimaryHover,\n  linkHoverBg: 'transparent',\n  textHoverBg: token.colorBgTextHover,\n  defaultColor: token.colorText,\n  defaultBg: token.colorBgContainer,\n  defaultBorderColor: token.colorBorder,\n  defaultBorderColorDisabled: token.colorBorder,\n  contentFontSize: token.fontSize,\n  contentFontSizeSM: token.fontSize,\n  contentFontSizeLG: token.fontSizeLG\n});\nexport default genComponentStyleHook('Button', token => {\n  const buttonToken = prepareToken(token);\n  return [\n  // Shared\n  genSharedButtonStyle(buttonToken),\n  // Size\n  genSizeSmallButtonStyle(buttonToken), genSizeBaseButtonStyle(buttonToken), genSizeLargeButtonStyle(buttonToken),\n  // Block\n  genBlockButtonStyle(buttonToken),\n  // Group (type, ghost, danger, loading)\n  genTypeButtonStyle(buttonToken),\n  // Button Group\n  genGroupStyle(buttonToken)];\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}