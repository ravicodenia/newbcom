{"ast":null,"code":"\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport TransButton from '../../_util/transButton';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport Typography from '../Typography';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\n\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\n\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n\n  return dom || needDom && defaultNode;\n}\n\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n\n  return Array.isArray(val) ? val : [val];\n}\n\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    style,\n    type,\n    disabled,\n    children,\n    ellipsis,\n    editable,\n    copyable,\n    component,\n    title\n  } = props,\n        restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [textLocale] = useLocale('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null); // ============================ MISC ============================\n\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']); // ========================== Editable ==========================\n\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = useMergedState(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n\n  const triggerEdit = edit => {\n    var _a;\n\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n\n    setEditing(edit);\n  }; // Focus edit icon when back\n\n\n  useUpdatedEffect(() => {\n    var _a;\n\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n\n  const onEditChange = value => {\n    var _a;\n\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n\n  const onEditCancel = () => {\n    var _a;\n\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  }; // ========================== Copyable ==========================\n\n\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const [copied, setCopied] = React.useState(false);\n  const copyIdRef = React.useRef(null);\n  const copyOptions = {};\n\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n\n  const cleanCopyId = () => {\n    if (copyIdRef.current) {\n      clearTimeout(copyIdRef.current);\n    }\n  };\n\n  const onCopyClick = e => {\n    var _a;\n\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true); // Trigger tips update\n\n    cleanCopyId();\n    copyIdRef.current = setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n\n  React.useEffect(() => cleanCopyId, []); // ========================== Ellipsis ==========================\n\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded; // Shared prop to reduce bundle size\n\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() => // Disable ellipsis\n  !mergedEnableEllipsis || // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis || // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis; // >>>>> Expand\n\n  const onExpandClick = e => {\n    var _a;\n\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const [ellipsisFontSize, setEllipsisFontSize] = React.useState(0);\n\n  const onResize = (_ref2, element) => {\n    let {\n      offsetWidth\n    } = _ref2;\n\n    var _a;\n\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  }; // >>>>> JS Ellipsis\n\n\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n\n    setIsJsEllipsis(jsEllipsis); // Trigger if changed\n\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  }; // >>>>> Native ellipsis\n\n\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]); // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n\n\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]); // ========================== Tooltip ===========================\n\n  let tooltipProps = {};\n\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n\n    if (isValid(children)) {\n      return children;\n    }\n\n    if (isValid(title)) {\n      return title;\n    }\n\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]); // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  } // >>>>>>>>>>> Typography\n  // Expand\n\n\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  }; // Edit\n\n\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  }; // Copy\n\n\n  const renderCopy = () => {\n    if (!enableCopy) return;\n    const {\n      tooltips,\n      icon\n    } = copyConfig;\n    const tooltipNodes = toList(tooltips);\n    const iconNodes = toList(icon);\n    const copyTitle = copied ? getNode(tooltipNodes[1], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied) : getNode(tooltipNodes[0], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy);\n    const systemStr = copied ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied : textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy;\n    const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(`${prefixCls}-copy`, copied && `${prefixCls}-copy-success`),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n\n  const renderEllipsis = needEllipsis => [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, resizeRef => /*#__PURE__*/React.createElement(EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    className: classNames({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: composeRef(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    fontSize: ellipsisFontSize,\n    onEllipsis: onJsEllipsis\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  }))));\n});\nexport default Base;","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/typography/Base/index.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","CheckOutlined","CopyOutlined","EditOutlined","classNames","copy","ResizeObserver","toArray","useIsomorphicLayoutEffect","useMergedState","omit","composeRef","React","isStyleSupport","TransButton","ConfigContext","useLocale","Tooltip","Editable","Typography","useMergedConfig","useUpdatedEffect","Ellipsis","EllipsisTooltip","wrapperDecorations","_ref","content","mark","code","underline","delete","del","strong","keyboard","italic","currentContent","wrap","tag","needed","createElement","getNode","dom","defaultNode","needDom","undefined","toList","val","Array","isArray","ELLIPSIS_STR","Base","forwardRef","props","ref","_a","_b","_c","prefixCls","customizePrefixCls","className","style","type","disabled","children","ellipsis","editable","copyable","component","title","restProps","getPrefixCls","direction","useContext","textLocale","typographyRef","useRef","editIconRef","textProps","enableEdit","editConfig","editing","setEditing","value","triggerType","triggerEdit","edit","onStart","current","focus","onEditClick","preventDefault","onEditChange","onChange","onEditCancel","onCancel","enableCopy","copyConfig","copied","setCopied","useState","copyIdRef","copyOptions","format","cleanCopyId","clearTimeout","onCopyClick","stopPropagation","text","String","setTimeout","onCopy","useEffect","isLineClampSupport","setIsLineClampSupport","isTextOverflowSupport","setIsTextOverflowSupport","expanded","setExpanded","isJsEllipsis","setIsJsEllipsis","isNativeEllipsis","setIsNativeEllipsis","isNativeVisible","setIsNativeVisible","enableEllipsis","ellipsisConfig","expandable","mergedEnableEllipsis","rows","needMeasureEllipsis","useMemo","suffix","onEllipsis","cssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","onExpand","ellipsisWidth","setEllipsisWidth","ellipsisFontSize","setEllipsisFontSize","onResize","_ref2","element","offsetWidth","parseInt","window","getComputedStyle","fontSize","onJsEllipsis","jsEllipsis","textEle","currentEllipsis","offsetHeight","scrollHeight","scrollWidth","IntersectionObserver","observer","offsetParent","observe","disconnect","tooltipProps","tooltip","isValidElement","assign","topAriaLabel","isValid","includes","onSave","onEnd","maxLength","autoSize","enterIcon","renderExpand","symbol","expandContent","expand","key","onClick","renderEdit","icon","editTitle","ariaLabel","role","renderCopy","tooltips","tooltipNodes","iconNodes","copyTitle","systemStr","renderOperations","renderExpanded","renderEllipsis","needEllipsis","resizeRef","enabledEllipsis","isEllipsis","WebkitLineClamp","toString","enabledMeasure","width","node","renderNode","wrappedContext","Fragment"],"mappings":"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","sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport TransButton from '../../_util/transButton';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport Typography from '../Typography';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [textLocale] = useLocale('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = useMergedState(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  useUpdatedEffect(() => {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const [copied, setCopied] = React.useState(false);\n  const copyIdRef = React.useRef(null);\n  const copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  const cleanCopyId = () => {\n    if (copyIdRef.current) {\n      clearTimeout(copyIdRef.current);\n    }\n  };\n  const onCopyClick = e => {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true);\n    // Trigger tips update\n    cleanCopyId();\n    copyIdRef.current = setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n  React.useEffect(() => cleanCopyId, []);\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded;\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  !mergedEnableEllipsis ||\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = e => {\n    var _a;\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const [ellipsisFontSize, setEllipsisFontSize] = React.useState(0);\n  const onResize = (_ref2, element) => {\n    let {\n      offsetWidth\n    } = _ref2;\n    var _a;\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  let tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) return;\n    const {\n      tooltips,\n      icon\n    } = copyConfig;\n    const tooltipNodes = toList(tooltips);\n    const iconNodes = toList(icon);\n    const copyTitle = copied ? getNode(tooltipNodes[1], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied) : getNode(tooltipNodes[0], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy);\n    const systemStr = copied ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied : textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy;\n    const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(`${prefixCls}-copy`, copied && `${prefixCls}-copy-success`),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = needEllipsis => [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, resizeRef => /*#__PURE__*/React.createElement(EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    className: classNames({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: composeRef(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    fontSize: ellipsisFontSize,\n    onEllipsis: onJsEllipsis\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  }))));\n});\nexport default Base;"]},"metadata":{},"sourceType":"module"}