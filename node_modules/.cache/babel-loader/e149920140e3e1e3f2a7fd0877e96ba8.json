{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\n\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeShadowSize,\n    motionDurationSlow,\n    textFontSize,\n    textFontSizeSM,\n    statusSize,\n    dotSize,\n    textFontWeight,\n    indicatorHeight,\n    indicatorHeightSM,\n    marginXS\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const colorPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${componentCls} ${componentCls}-color-${colorKey}`]: {\n        background: darkColor,\n        [`&:not(${componentCls}-count)`]: {\n          color: darkColor\n        }\n      }\n    };\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.indicatorZIndex,\n        minWidth: indicatorHeight,\n        height: indicatorHeight,\n        color: token.badgeTextColor,\n        fontWeight: textFontWeight,\n        fontSize: textFontSize,\n        lineHeight: `${indicatorHeight}px`,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: indicatorHeight / 2,\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: indicatorHeightSM,\n        height: indicatorHeightSM,\n        fontSize: textFontSizeSM,\n        lineHeight: `${indicatorHeightSM}px`,\n        borderRadius: indicatorHeightSM / 2\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${token.paddingXS}px`,\n        bdi: {\n          unicodeBidi: 'plaintext'\n        }\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.indicatorZIndex,\n        width: dotSize,\n        minWidth: dotSize,\n        height: dotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: '1s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: {\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          display: 'inline-block',\n          width: statusSize,\n          height: statusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          overflow: 'visible',\n          color: token.colorPrimary,\n          backgroundColor: token.colorPrimary,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        },\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }\n    }), colorPreset), {\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: indicatorHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: indicatorHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    })\n  };\n}; // ============================== Export ==============================\n\n\nexport const prepareToken = token => {\n  const {\n    fontSize,\n    lineHeight,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = Math.round(fontSize * lineHeight);\n  const badgeShadowSize = lineWidth;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeTextColor,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return badgeToken;\n};\nexport const prepareComponentToken = token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth\n  } = token;\n  return {\n    indicatorZIndex: 'auto',\n    indicatorHeight: Math.round(fontSize * lineHeight) - 2 * lineWidth,\n    indicatorHeightSM: fontSize,\n    dotSize: fontSizeSM / 2,\n    textFontSize: fontSizeSM,\n    textFontSizeSM: fontSizeSM,\n    textFontWeight: 'normal',\n    statusSize: fontSizeSM / 2\n  };\n};\nexport default genComponentStyleHook('Badge', token => {\n  const badgeToken = prepareToken(token);\n  return [genSharedBadgeStyle(badgeToken)];\n}, prepareComponentToken);","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/badge/style/index.js"],"names":["Keyframes","resetComponent","genComponentStyleHook","genPresetColor","mergeToken","antStatusProcessing","transform","opacity","antZoomBadgeIn","antZoomBadgeOut","antNoWrapperZoomBadgeIn","antNoWrapperZoomBadgeOut","antBadgeLoadingCircle","transformOrigin","genSharedBadgeStyle","token","componentCls","iconCls","antCls","badgeShadowSize","motionDurationSlow","textFontSize","textFontSizeSM","statusSize","dotSize","textFontWeight","indicatorHeight","indicatorHeightSM","marginXS","numberPrefixCls","colorPreset","colorKey","_ref","darkColor","background","color","Object","assign","position","display","width","lineHeight","zIndex","indicatorZIndex","minWidth","height","badgeTextColor","fontWeight","fontSize","whiteSpace","textAlign","badgeColor","borderRadius","boxShadow","badgeShadowColor","transition","motionDurationMid","a","badgeColorHover","padding","paddingXS","bdi","unicodeBidi","top","insetInlineEnd","animationName","animationDuration","animationIterationCount","animationTimingFunction","verticalAlign","backgroundColor","colorSuccess","overflow","colorPrimary","insetInlineStart","borderWidth","borderStyle","borderColor","badgeProcessingDuration","content","colorTextPlaceholder","colorError","colorWarning","marginInlineStart","colorText","motionEaseOutBack","animationFillMode","WebkitTransformStyle","WebkitBackfaceVisibility","margin","direction","prepareToken","lineWidth","colorBorderBg","badgeFontHeight","Math","round","colorBgContainer","colorErrorHover","badgeToken","badgeRibbonOffset","badgeRibbonCornerTransform","badgeRibbonCornerFilter","prepareComponentToken","fontSizeSM"],"mappings":"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","sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeShadowSize,\n    motionDurationSlow,\n    textFontSize,\n    textFontSizeSM,\n    statusSize,\n    dotSize,\n    textFontWeight,\n    indicatorHeight,\n    indicatorHeightSM,\n    marginXS\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const colorPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${componentCls} ${componentCls}-color-${colorKey}`]: {\n        background: darkColor,\n        [`&:not(${componentCls}-count)`]: {\n          color: darkColor\n        }\n      }\n    };\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.indicatorZIndex,\n        minWidth: indicatorHeight,\n        height: indicatorHeight,\n        color: token.badgeTextColor,\n        fontWeight: textFontWeight,\n        fontSize: textFontSize,\n        lineHeight: `${indicatorHeight}px`,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: indicatorHeight / 2,\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: indicatorHeightSM,\n        height: indicatorHeightSM,\n        fontSize: textFontSizeSM,\n        lineHeight: `${indicatorHeightSM}px`,\n        borderRadius: indicatorHeightSM / 2\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${token.paddingXS}px`,\n        bdi: {\n          unicodeBidi: 'plaintext'\n        }\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.indicatorZIndex,\n        width: dotSize,\n        minWidth: dotSize,\n        height: dotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: '1s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: {\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          display: 'inline-block',\n          width: statusSize,\n          height: statusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          overflow: 'visible',\n          color: token.colorPrimary,\n          backgroundColor: token.colorPrimary,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        },\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }\n    }), colorPreset), {\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: indicatorHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: indicatorHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport const prepareToken = token => {\n  const {\n    fontSize,\n    lineHeight,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = Math.round(fontSize * lineHeight);\n  const badgeShadowSize = lineWidth;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeTextColor,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return badgeToken;\n};\nexport const prepareComponentToken = token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth\n  } = token;\n  return {\n    indicatorZIndex: 'auto',\n    indicatorHeight: Math.round(fontSize * lineHeight) - 2 * lineWidth,\n    indicatorHeightSM: fontSize,\n    dotSize: fontSizeSM / 2,\n    textFontSize: fontSizeSM,\n    textFontSizeSM: fontSizeSM,\n    textFontWeight: 'normal',\n    statusSize: fontSizeSM / 2\n  };\n};\nexport default genComponentStyleHook('Badge', token => {\n  const badgeToken = prepareToken(token);\n  return [genSharedBadgeStyle(badgeToken)];\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}