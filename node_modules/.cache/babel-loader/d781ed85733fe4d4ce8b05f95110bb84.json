{"ast":null,"code":"\"use client\";\n\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n\nconst genAntProgressActive = isRtl => {\n  const direction = isRtl ? '100%' : '-100%';\n  return new Keyframes(`antProgress${isRtl ? 'RTL' : 'LTR'}Active`, {\n    '0%': {\n      transform: `translateX(${direction}) scaleX(0)`,\n      opacity: 0.1\n    },\n    '20%': {\n      transform: `translateX(${direction}) scaleX(0)`,\n      opacity: 0.5\n    },\n    to: {\n      transform: 'translateX(0) scaleX(1)',\n      opacity: 0\n    }\n  });\n};\n\nconst genBaseStyle = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-line': {\n        position: 'relative',\n        width: '100%',\n        fontSize: token.fontSize,\n        marginInlineEnd: token.marginXS,\n        marginBottom: token.marginXS\n      },\n      [`${progressCls}-outer`]: {\n        display: 'inline-block',\n        width: '100%'\n      },\n      [`&${progressCls}-show-info`]: {\n        [`${progressCls}-outer`]: {\n          marginInlineEnd: `calc(-2em - ${token.marginXS}px)`,\n          paddingInlineEnd: `calc(2em + ${token.paddingXS}px)`\n        }\n      },\n      [`${progressCls}-inner`]: {\n        position: 'relative',\n        display: 'inline-block',\n        width: '100%',\n        overflow: 'hidden',\n        verticalAlign: 'middle',\n        backgroundColor: token.remainingColor,\n        borderRadius: token.lineBorderRadius\n      },\n      [`${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.defaultColor\n        }\n      },\n      [`${progressCls}-success-bg, ${progressCls}-bg`]: {\n        position: 'relative',\n        backgroundColor: token.defaultColor,\n        borderRadius: token.lineBorderRadius,\n        transition: `all ${token.motionDurationSlow} ${token.motionEaseInOutCirc}`\n      },\n      [`${progressCls}-success-bg`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        backgroundColor: token.colorSuccess\n      },\n      [`${progressCls}-text`]: {\n        display: 'inline-block',\n        width: '2em',\n        marginInlineStart: token.marginXS,\n        color: token.colorText,\n        lineHeight: 1,\n        whiteSpace: 'nowrap',\n        textAlign: 'start',\n        verticalAlign: 'middle',\n        wordBreak: 'normal',\n        [iconPrefixCls]: {\n          fontSize: token.fontSize\n        }\n      },\n      [`&${progressCls}-status-active`]: {\n        [`${progressCls}-bg::before`]: {\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: token.colorBgContainer,\n          borderRadius: token.lineBorderRadius,\n          opacity: 0,\n          animationName: genAntProgressActive(),\n          animationDuration: token.progressActiveMotionDuration,\n          animationTimingFunction: token.motionEaseOutQuint,\n          animationIterationCount: 'infinite',\n          content: '\"\"'\n        }\n      },\n      [`&${progressCls}-rtl${progressCls}-status-active`]: {\n        [`${progressCls}-bg::before`]: {\n          animationName: genAntProgressActive(true)\n        }\n      },\n      [`&${progressCls}-status-exception`]: {\n        [`${progressCls}-bg`]: {\n          backgroundColor: token.colorError\n        },\n        [`${progressCls}-text`]: {\n          color: token.colorError\n        }\n      },\n      [`&${progressCls}-status-exception ${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.colorError\n        }\n      },\n      [`&${progressCls}-status-success`]: {\n        [`${progressCls}-bg`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${progressCls}-text`]: {\n          color: token.colorSuccess\n        }\n      },\n      [`&${progressCls}-status-success ${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.colorSuccess\n        }\n      }\n    })\n  };\n};\n\nconst genCircleStyle = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-circle-trail`]: {\n        stroke: token.remainingColor\n      },\n      [`&${progressCls}-circle ${progressCls}-inner`]: {\n        position: 'relative',\n        lineHeight: 1,\n        backgroundColor: 'transparent'\n      },\n      [`&${progressCls}-circle ${progressCls}-text`]: {\n        position: 'absolute',\n        insetBlockStart: '50%',\n        insetInlineStart: 0,\n        width: '100%',\n        margin: 0,\n        padding: 0,\n        color: token.circleTextColor,\n        fontSize: token.circleTextFontSize,\n        lineHeight: 1,\n        whiteSpace: 'normal',\n        textAlign: 'center',\n        transform: 'translateY(-50%)',\n        [iconPrefixCls]: {\n          fontSize: `${token.fontSize / token.fontSizeSM}em`\n        }\n      },\n      [`${progressCls}-circle&-status-exception`]: {\n        [`${progressCls}-text`]: {\n          color: token.colorError\n        }\n      },\n      [`${progressCls}-circle&-status-success`]: {\n        [`${progressCls}-text`]: {\n          color: token.colorSuccess\n        }\n      }\n    },\n    [`${progressCls}-inline-circle`]: {\n      lineHeight: 1,\n      [`${progressCls}-inner`]: {\n        verticalAlign: 'bottom'\n      }\n    }\n  };\n};\n\nconst genStepStyle = token => {\n  const {\n    componentCls: progressCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-steps`]: {\n        display: 'inline-block',\n        '&-outer': {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        '&-item': {\n          flexShrink: 0,\n          minWidth: token.progressStepMinWidth,\n          marginInlineEnd: token.progressStepMarginInlineEnd,\n          backgroundColor: token.remainingColor,\n          transition: `all ${token.motionDurationSlow}`,\n          '&-active': {\n            backgroundColor: token.defaultColor\n          }\n        }\n      }\n    }\n  };\n};\n\nconst genSmallLine = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-small&-line, ${progressCls}-small&-line ${progressCls}-text ${iconPrefixCls}`]: {\n        fontSize: token.fontSizeSM\n      }\n    }\n  };\n};\n\nexport default genComponentStyleHook('Progress', token => {\n  const progressStepMarginInlineEnd = token.marginXXS / 2;\n  const progressToken = mergeToken(token, {\n    progressStepMarginInlineEnd,\n    progressStepMinWidth: progressStepMarginInlineEnd,\n    progressActiveMotionDuration: '2.4s'\n  });\n  return [genBaseStyle(progressToken), genCircleStyle(progressToken), genStepStyle(progressToken), genSmallLine(progressToken)];\n}, token => ({\n  circleTextColor: token.colorText,\n  defaultColor: token.colorInfo,\n  remainingColor: token.colorFillSecondary,\n  lineBorderRadius: 100,\n  circleTextFontSize: '1em'\n}));","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/progress/style/index.js"],"names":["Keyframes","resetComponent","genComponentStyleHook","mergeToken","genAntProgressActive","isRtl","direction","transform","opacity","to","genBaseStyle","token","componentCls","progressCls","iconCls","iconPrefixCls","Object","assign","display","position","width","fontSize","marginInlineEnd","marginXS","marginBottom","paddingInlineEnd","paddingXS","overflow","verticalAlign","backgroundColor","remainingColor","borderRadius","lineBorderRadius","stroke","defaultColor","transition","motionDurationSlow","motionEaseInOutCirc","insetBlockStart","insetInlineStart","colorSuccess","marginInlineStart","color","colorText","lineHeight","whiteSpace","textAlign","wordBreak","inset","colorBgContainer","animationName","animationDuration","progressActiveMotionDuration","animationTimingFunction","motionEaseOutQuint","animationIterationCount","content","colorError","genCircleStyle","margin","padding","circleTextColor","circleTextFontSize","fontSizeSM","genStepStyle","flexDirection","alignItems","flexShrink","minWidth","progressStepMinWidth","progressStepMarginInlineEnd","genSmallLine","marginXXS","progressToken","colorInfo","colorFillSecondary"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nconst genAntProgressActive = isRtl => {\n  const direction = isRtl ? '100%' : '-100%';\n  return new Keyframes(`antProgress${isRtl ? 'RTL' : 'LTR'}Active`, {\n    '0%': {\n      transform: `translateX(${direction}) scaleX(0)`,\n      opacity: 0.1\n    },\n    '20%': {\n      transform: `translateX(${direction}) scaleX(0)`,\n      opacity: 0.5\n    },\n    to: {\n      transform: 'translateX(0) scaleX(1)',\n      opacity: 0\n    }\n  });\n};\nconst genBaseStyle = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-line': {\n        position: 'relative',\n        width: '100%',\n        fontSize: token.fontSize,\n        marginInlineEnd: token.marginXS,\n        marginBottom: token.marginXS\n      },\n      [`${progressCls}-outer`]: {\n        display: 'inline-block',\n        width: '100%'\n      },\n      [`&${progressCls}-show-info`]: {\n        [`${progressCls}-outer`]: {\n          marginInlineEnd: `calc(-2em - ${token.marginXS}px)`,\n          paddingInlineEnd: `calc(2em + ${token.paddingXS}px)`\n        }\n      },\n      [`${progressCls}-inner`]: {\n        position: 'relative',\n        display: 'inline-block',\n        width: '100%',\n        overflow: 'hidden',\n        verticalAlign: 'middle',\n        backgroundColor: token.remainingColor,\n        borderRadius: token.lineBorderRadius\n      },\n      [`${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.defaultColor\n        }\n      },\n      [`${progressCls}-success-bg, ${progressCls}-bg`]: {\n        position: 'relative',\n        backgroundColor: token.defaultColor,\n        borderRadius: token.lineBorderRadius,\n        transition: `all ${token.motionDurationSlow} ${token.motionEaseInOutCirc}`\n      },\n      [`${progressCls}-success-bg`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        backgroundColor: token.colorSuccess\n      },\n      [`${progressCls}-text`]: {\n        display: 'inline-block',\n        width: '2em',\n        marginInlineStart: token.marginXS,\n        color: token.colorText,\n        lineHeight: 1,\n        whiteSpace: 'nowrap',\n        textAlign: 'start',\n        verticalAlign: 'middle',\n        wordBreak: 'normal',\n        [iconPrefixCls]: {\n          fontSize: token.fontSize\n        }\n      },\n      [`&${progressCls}-status-active`]: {\n        [`${progressCls}-bg::before`]: {\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: token.colorBgContainer,\n          borderRadius: token.lineBorderRadius,\n          opacity: 0,\n          animationName: genAntProgressActive(),\n          animationDuration: token.progressActiveMotionDuration,\n          animationTimingFunction: token.motionEaseOutQuint,\n          animationIterationCount: 'infinite',\n          content: '\"\"'\n        }\n      },\n      [`&${progressCls}-rtl${progressCls}-status-active`]: {\n        [`${progressCls}-bg::before`]: {\n          animationName: genAntProgressActive(true)\n        }\n      },\n      [`&${progressCls}-status-exception`]: {\n        [`${progressCls}-bg`]: {\n          backgroundColor: token.colorError\n        },\n        [`${progressCls}-text`]: {\n          color: token.colorError\n        }\n      },\n      [`&${progressCls}-status-exception ${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.colorError\n        }\n      },\n      [`&${progressCls}-status-success`]: {\n        [`${progressCls}-bg`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${progressCls}-text`]: {\n          color: token.colorSuccess\n        }\n      },\n      [`&${progressCls}-status-success ${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.colorSuccess\n        }\n      }\n    })\n  };\n};\nconst genCircleStyle = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-circle-trail`]: {\n        stroke: token.remainingColor\n      },\n      [`&${progressCls}-circle ${progressCls}-inner`]: {\n        position: 'relative',\n        lineHeight: 1,\n        backgroundColor: 'transparent'\n      },\n      [`&${progressCls}-circle ${progressCls}-text`]: {\n        position: 'absolute',\n        insetBlockStart: '50%',\n        insetInlineStart: 0,\n        width: '100%',\n        margin: 0,\n        padding: 0,\n        color: token.circleTextColor,\n        fontSize: token.circleTextFontSize,\n        lineHeight: 1,\n        whiteSpace: 'normal',\n        textAlign: 'center',\n        transform: 'translateY(-50%)',\n        [iconPrefixCls]: {\n          fontSize: `${token.fontSize / token.fontSizeSM}em`\n        }\n      },\n      [`${progressCls}-circle&-status-exception`]: {\n        [`${progressCls}-text`]: {\n          color: token.colorError\n        }\n      },\n      [`${progressCls}-circle&-status-success`]: {\n        [`${progressCls}-text`]: {\n          color: token.colorSuccess\n        }\n      }\n    },\n    [`${progressCls}-inline-circle`]: {\n      lineHeight: 1,\n      [`${progressCls}-inner`]: {\n        verticalAlign: 'bottom'\n      }\n    }\n  };\n};\nconst genStepStyle = token => {\n  const {\n    componentCls: progressCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-steps`]: {\n        display: 'inline-block',\n        '&-outer': {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        '&-item': {\n          flexShrink: 0,\n          minWidth: token.progressStepMinWidth,\n          marginInlineEnd: token.progressStepMarginInlineEnd,\n          backgroundColor: token.remainingColor,\n          transition: `all ${token.motionDurationSlow}`,\n          '&-active': {\n            backgroundColor: token.defaultColor\n          }\n        }\n      }\n    }\n  };\n};\nconst genSmallLine = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-small&-line, ${progressCls}-small&-line ${progressCls}-text ${iconPrefixCls}`]: {\n        fontSize: token.fontSizeSM\n      }\n    }\n  };\n};\nexport default genComponentStyleHook('Progress', token => {\n  const progressStepMarginInlineEnd = token.marginXXS / 2;\n  const progressToken = mergeToken(token, {\n    progressStepMarginInlineEnd,\n    progressStepMinWidth: progressStepMarginInlineEnd,\n    progressActiveMotionDuration: '2.4s'\n  });\n  return [genBaseStyle(progressToken), genCircleStyle(progressToken), genStepStyle(progressToken), genSmallLine(progressToken)];\n}, token => ({\n  circleTextColor: token.colorText,\n  defaultColor: token.colorInfo,\n  remainingColor: token.colorFillSecondary,\n  lineBorderRadius: 100,\n  circleTextFontSize: '1em'\n}));"]},"metadata":{},"sourceType":"module"}