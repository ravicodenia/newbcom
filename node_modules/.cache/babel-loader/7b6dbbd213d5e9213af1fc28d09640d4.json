{"ast":null,"code":"\"use client\";\n\nimport React, { useContext } from 'react';\nimport ReloadOutlined from \"@ant-design/icons/es/icons/ReloadOutlined\";\nimport classNames from 'classnames';\nimport { QRCodeCanvas, QRCodeSVG } from 'qrcode.react';\nimport { devUseWarning } from '../_util/warning';\nimport Button from '../button';\nimport { ConfigContext } from '../config-provider';\nimport { useLocale } from '../locale';\nimport Spin from '../spin';\nimport { useToken } from '../theme/internal';\nimport useStyle from './style/index';\n\nconst QRCode = props => {\n  const [, token] = useToken();\n  const {\n    value,\n    type = 'canvas',\n    icon = '',\n    size = 160,\n    iconSize = 40,\n    color = token.colorText,\n    errorLevel = 'M',\n    status = 'active',\n    bordered = true,\n    onRefresh,\n    style,\n    className,\n    rootClassName,\n    prefixCls: customizePrefixCls,\n    bgColor = 'transparent'\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('qrcode', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const imageSettings = {\n    src: icon,\n    x: undefined,\n    y: undefined,\n    height: iconSize,\n    width: iconSize,\n    excavate: true\n  };\n  const qrCodeProps = {\n    value,\n    size: size - (token.paddingSM + token.lineWidth) * 2,\n    level: errorLevel,\n    bgColor,\n    fgColor: color,\n    imageSettings: icon ? imageSettings : undefined\n  };\n  const [locale] = useLocale('QRCode');\n\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('QRCode');\n    process.env.NODE_ENV !== \"production\" ? warning(!!value, 'usage', 'need to receive `value` props') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(icon && errorLevel === 'L'), 'usage', 'ErrorLevel `L` is not recommended to be used with `icon`, for scanning result would be affected by low level.') : void 0;\n  }\n\n  if (!value) {\n    return null;\n  }\n\n  const cls = classNames(prefixCls, className, rootClassName, hashId, {\n    [`${prefixCls}-borderless`]: !bordered\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, style), {\n      width: size,\n      height: size,\n      backgroundColor: bgColor\n    }),\n    className: cls\n  }, status !== 'active' && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-mask`\n  }, status === 'loading' && /*#__PURE__*/React.createElement(Spin, null), status === 'expired' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-expired`\n  }, locale === null || locale === void 0 ? void 0 : locale.expired), onRefresh && /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale === null || locale === void 0 ? void 0 : locale.refresh))), type === 'canvas' ? /*#__PURE__*/React.createElement(QRCodeCanvas, Object.assign({}, qrCodeProps)) : /*#__PURE__*/React.createElement(QRCodeSVG, Object.assign({}, qrCodeProps))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  QRCode.displayName = 'QRCode';\n}\n\nexport default QRCode;","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/qr-code/index.js"],"names":["React","useContext","ReloadOutlined","classNames","QRCodeCanvas","QRCodeSVG","devUseWarning","Button","ConfigContext","useLocale","Spin","useToken","useStyle","QRCode","props","token","value","type","icon","size","iconSize","color","colorText","errorLevel","status","bordered","onRefresh","style","className","rootClassName","prefixCls","customizePrefixCls","bgColor","getPrefixCls","wrapSSR","hashId","imageSettings","src","x","undefined","y","height","width","excavate","qrCodeProps","paddingSM","lineWidth","level","fgColor","locale","process","env","NODE_ENV","warning","cls","createElement","Object","assign","backgroundColor","Fragment","expired","onClick","refresh","displayName"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { useContext } from 'react';\nimport ReloadOutlined from \"@ant-design/icons/es/icons/ReloadOutlined\";\nimport classNames from 'classnames';\nimport { QRCodeCanvas, QRCodeSVG } from 'qrcode.react';\nimport { devUseWarning } from '../_util/warning';\nimport Button from '../button';\nimport { ConfigContext } from '../config-provider';\nimport { useLocale } from '../locale';\nimport Spin from '../spin';\nimport { useToken } from '../theme/internal';\nimport useStyle from './style/index';\nconst QRCode = props => {\n  const [, token] = useToken();\n  const {\n    value,\n    type = 'canvas',\n    icon = '',\n    size = 160,\n    iconSize = 40,\n    color = token.colorText,\n    errorLevel = 'M',\n    status = 'active',\n    bordered = true,\n    onRefresh,\n    style,\n    className,\n    rootClassName,\n    prefixCls: customizePrefixCls,\n    bgColor = 'transparent'\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('qrcode', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const imageSettings = {\n    src: icon,\n    x: undefined,\n    y: undefined,\n    height: iconSize,\n    width: iconSize,\n    excavate: true\n  };\n  const qrCodeProps = {\n    value,\n    size: size - (token.paddingSM + token.lineWidth) * 2,\n    level: errorLevel,\n    bgColor,\n    fgColor: color,\n    imageSettings: icon ? imageSettings : undefined\n  };\n  const [locale] = useLocale('QRCode');\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('QRCode');\n    process.env.NODE_ENV !== \"production\" ? warning(!!value, 'usage', 'need to receive `value` props') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(icon && errorLevel === 'L'), 'usage', 'ErrorLevel `L` is not recommended to be used with `icon`, for scanning result would be affected by low level.') : void 0;\n  }\n  if (!value) {\n    return null;\n  }\n  const cls = classNames(prefixCls, className, rootClassName, hashId, {\n    [`${prefixCls}-borderless`]: !bordered\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, style), {\n      width: size,\n      height: size,\n      backgroundColor: bgColor\n    }),\n    className: cls\n  }, status !== 'active' && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-mask`\n  }, status === 'loading' && /*#__PURE__*/React.createElement(Spin, null), status === 'expired' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-expired`\n  }, locale === null || locale === void 0 ? void 0 : locale.expired), onRefresh && /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale === null || locale === void 0 ? void 0 : locale.refresh))), type === 'canvas' ? /*#__PURE__*/React.createElement(QRCodeCanvas, Object.assign({}, qrCodeProps)) : /*#__PURE__*/React.createElement(QRCodeSVG, Object.assign({}, qrCodeProps))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  QRCode.displayName = 'QRCode';\n}\nexport default QRCode;"]},"metadata":{},"sourceType":"module"}