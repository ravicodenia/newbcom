{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { useCacheToken } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { defaultTheme, DesignTokenContext } from './context';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nexport const getComputedToken = (originToken, overrideToken, theme) => {\n  const derivativeToken = theme.getDerivativeToken(originToken);\n\n  const {\n    override\n  } = overrideToken,\n        components = __rest(overrideToken, [\"override\"]); // Merge with override\n\n\n  let mergedDerivativeToken = Object.assign(Object.assign({}, derivativeToken), {\n    override\n  }); // Format if needed\n\n  mergedDerivativeToken = formatToken(mergedDerivativeToken);\n\n  if (components) {\n    Object.entries(components).forEach(_ref => {\n      let [key, value] = _ref;\n\n      const {\n        theme: componentTheme\n      } = value,\n            componentTokens = __rest(value, [\"theme\"]);\n\n      let mergedComponentToken = componentTokens;\n\n      if (componentTheme) {\n        mergedComponentToken = getComputedToken(Object.assign(Object.assign({}, mergedDerivativeToken), componentTokens), {\n          override: componentTokens\n        }, componentTheme);\n      }\n\n      mergedDerivativeToken[key] = mergedComponentToken;\n    });\n  }\n\n  return mergedDerivativeToken;\n}; // ================================== Hook ==================================\n\nexport default function useToken() {\n  const {\n    token: rootDesignToken,\n    hashed,\n    theme,\n    components\n  } = React.useContext(DesignTokenContext);\n  const salt = `${version}-${hashed || ''}`;\n  const mergedTheme = theme || defaultTheme;\n  const [token, hashId] = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n    salt,\n    override: Object.assign({\n      override: rootDesignToken\n    }, components),\n    getComputedToken,\n    // formatToken will not be consumed after 1.15.0 with getComputedToken.\n    // But token will break if @ant-design/cssinjs is under 1.15.0 without it\n    formatToken\n  });\n  return [mergedTheme, token, hashed ? hashId : ''];\n}","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/theme/useToken.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","useCacheToken","React","version","defaultTheme","DesignTokenContext","defaultSeedToken","formatToken","getComputedToken","originToken","overrideToken","theme","derivativeToken","getDerivativeToken","override","components","mergedDerivativeToken","assign","entries","forEach","_ref","key","value","componentTheme","componentTokens","mergedComponentToken","useToken","token","rootDesignToken","hashed","useContext","salt","mergedTheme","hashId"],"mappings":"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","sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useCacheToken } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { defaultTheme, DesignTokenContext } from './context';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nexport const getComputedToken = (originToken, overrideToken, theme) => {\n  const derivativeToken = theme.getDerivativeToken(originToken);\n  const {\n      override\n    } = overrideToken,\n    components = __rest(overrideToken, [\"override\"]);\n  // Merge with override\n  let mergedDerivativeToken = Object.assign(Object.assign({}, derivativeToken), {\n    override\n  });\n  // Format if needed\n  mergedDerivativeToken = formatToken(mergedDerivativeToken);\n  if (components) {\n    Object.entries(components).forEach(_ref => {\n      let [key, value] = _ref;\n      const {\n          theme: componentTheme\n        } = value,\n        componentTokens = __rest(value, [\"theme\"]);\n      let mergedComponentToken = componentTokens;\n      if (componentTheme) {\n        mergedComponentToken = getComputedToken(Object.assign(Object.assign({}, mergedDerivativeToken), componentTokens), {\n          override: componentTokens\n        }, componentTheme);\n      }\n      mergedDerivativeToken[key] = mergedComponentToken;\n    });\n  }\n  return mergedDerivativeToken;\n};\n// ================================== Hook ==================================\nexport default function useToken() {\n  const {\n    token: rootDesignToken,\n    hashed,\n    theme,\n    components\n  } = React.useContext(DesignTokenContext);\n  const salt = `${version}-${hashed || ''}`;\n  const mergedTheme = theme || defaultTheme;\n  const [token, hashId] = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n    salt,\n    override: Object.assign({\n      override: rootDesignToken\n    }, components),\n    getComputedToken,\n    // formatToken will not be consumed after 1.15.0 with getComputedToken.\n    // But token will break if @ant-design/cssinjs is under 1.15.0 without it\n    formatToken\n  });\n  return [mergedTheme, token, hashed ? hashId : ''];\n}"]},"metadata":{},"sourceType":"module"}