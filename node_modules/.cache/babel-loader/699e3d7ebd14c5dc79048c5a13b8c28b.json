{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"disabled\", \"visible\", \"children\", \"popupElement\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"direction\", \"placement\", \"builtinPlacements\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"getPopupContainer\", \"empty\", \"getTriggerDOMNode\", \"onPopupVisibleChange\", \"onPopupMouseEnter\"];\nimport Trigger from '@rc-component/trigger';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nvar getBuiltInPlacements = function getBuiltInPlacements(dropdownMatchSelectWidth) {\n  // Enable horizontal overflow auto-adjustment when a custom dropdown width is provided\n  var adjustX = dropdownMatchSelectWidth === true ? 0 : 1;\n  return {\n    bottomLeft: {\n      points: ['tl', 'bl'],\n      offset: [0, 4],\n      overflow: {\n        adjustX: adjustX,\n        adjustY: 1\n      },\n      htmlRegion: 'scroll'\n    },\n    bottomRight: {\n      points: ['tr', 'br'],\n      offset: [0, 4],\n      overflow: {\n        adjustX: adjustX,\n        adjustY: 1\n      },\n      htmlRegion: 'scroll'\n    },\n    topLeft: {\n      points: ['bl', 'tl'],\n      offset: [0, -4],\n      overflow: {\n        adjustX: adjustX,\n        adjustY: 1\n      },\n      htmlRegion: 'scroll'\n    },\n    topRight: {\n      points: ['br', 'tr'],\n      offset: [0, -4],\n      overflow: {\n        adjustX: adjustX,\n        adjustY: 1\n      },\n      htmlRegion: 'scroll'\n    }\n  };\n};\n\nvar SelectTrigger = function SelectTrigger(props, ref) {\n  var prefixCls = props.prefixCls,\n      disabled = props.disabled,\n      visible = props.visible,\n      children = props.children,\n      popupElement = props.popupElement,\n      animation = props.animation,\n      transitionName = props.transitionName,\n      dropdownStyle = props.dropdownStyle,\n      dropdownClassName = props.dropdownClassName,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'ltr' : _props$direction,\n      placement = props.placement,\n      builtinPlacements = props.builtinPlacements,\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n      dropdownRender = props.dropdownRender,\n      dropdownAlign = props.dropdownAlign,\n      getPopupContainer = props.getPopupContainer,\n      empty = props.empty,\n      getTriggerDOMNode = props.getTriggerDOMNode,\n      onPopupVisibleChange = props.onPopupVisibleChange,\n      onPopupMouseEnter = props.onPopupMouseEnter,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var dropdownPrefixCls = \"\".concat(prefixCls, \"-dropdown\");\n  var popupNode = popupElement;\n\n  if (dropdownRender) {\n    popupNode = dropdownRender(popupElement);\n  }\n\n  var mergedBuiltinPlacements = React.useMemo(function () {\n    return builtinPlacements || getBuiltInPlacements(dropdownMatchSelectWidth);\n  }, [builtinPlacements, dropdownMatchSelectWidth]); // ===================== Motion ======================\n\n  var mergedTransitionName = animation ? \"\".concat(dropdownPrefixCls, \"-\").concat(animation) : transitionName; // =================== Popup Width ===================\n\n  var isNumberPopupWidth = typeof dropdownMatchSelectWidth === 'number';\n  var stretch = React.useMemo(function () {\n    if (isNumberPopupWidth) {\n      return null;\n    }\n\n    return dropdownMatchSelectWidth === false ? 'minWidth' : 'width';\n  }, [dropdownMatchSelectWidth, isNumberPopupWidth]);\n  var popupStyle = dropdownStyle;\n\n  if (isNumberPopupWidth) {\n    popupStyle = _objectSpread(_objectSpread({}, popupStyle), {}, {\n      width: dropdownMatchSelectWidth\n    });\n  } // ======================= Ref =======================\n\n\n  var popupRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      getPopupElement: function getPopupElement() {\n        return popupRef.current;\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(Trigger, _extends({}, restProps, {\n    showAction: onPopupVisibleChange ? ['click'] : [],\n    hideAction: onPopupVisibleChange ? ['click'] : [],\n    popupPlacement: placement || (direction === 'rtl' ? 'bottomRight' : 'bottomLeft'),\n    builtinPlacements: mergedBuiltinPlacements,\n    prefixCls: dropdownPrefixCls,\n    popupTransitionName: mergedTransitionName,\n    popup: /*#__PURE__*/React.createElement(\"div\", {\n      ref: popupRef,\n      onMouseEnter: onPopupMouseEnter\n    }, popupNode),\n    stretch: stretch,\n    popupAlign: dropdownAlign,\n    popupVisible: visible,\n    getPopupContainer: getPopupContainer,\n    popupClassName: classNames(dropdownClassName, _defineProperty({}, \"\".concat(dropdownPrefixCls, \"-empty\"), empty)),\n    popupStyle: popupStyle,\n    getTriggerDOMNode: getTriggerDOMNode,\n    onPopupVisibleChange: onPopupVisibleChange\n  }), children);\n};\n\nvar RefSelectTrigger = /*#__PURE__*/React.forwardRef(SelectTrigger);\nRefSelectTrigger.displayName = 'SelectTrigger';\nexport default RefSelectTrigger;","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/rc-select/es/SelectTrigger.js"],"names":["_extends","_defineProperty","_objectSpread","_objectWithoutProperties","_excluded","Trigger","classNames","React","getBuiltInPlacements","dropdownMatchSelectWidth","adjustX","bottomLeft","points","offset","overflow","adjustY","htmlRegion","bottomRight","topLeft","topRight","SelectTrigger","props","ref","prefixCls","disabled","visible","children","popupElement","animation","transitionName","dropdownStyle","dropdownClassName","_props$direction","direction","placement","builtinPlacements","dropdownRender","dropdownAlign","getPopupContainer","empty","getTriggerDOMNode","onPopupVisibleChange","onPopupMouseEnter","restProps","dropdownPrefixCls","concat","popupNode","mergedBuiltinPlacements","useMemo","mergedTransitionName","isNumberPopupWidth","stretch","popupStyle","width","popupRef","useRef","useImperativeHandle","getPopupElement","current","createElement","showAction","hideAction","popupPlacement","popupTransitionName","popup","onMouseEnter","popupAlign","popupVisible","popupClassName","RefSelectTrigger","forwardRef","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"disabled\", \"visible\", \"children\", \"popupElement\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"direction\", \"placement\", \"builtinPlacements\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"getPopupContainer\", \"empty\", \"getTriggerDOMNode\", \"onPopupVisibleChange\", \"onPopupMouseEnter\"];\nimport Trigger from '@rc-component/trigger';\nimport classNames from 'classnames';\nimport * as React from 'react';\nvar getBuiltInPlacements = function getBuiltInPlacements(dropdownMatchSelectWidth) {\n  // Enable horizontal overflow auto-adjustment when a custom dropdown width is provided\n  var adjustX = dropdownMatchSelectWidth === true ? 0 : 1;\n  return {\n    bottomLeft: {\n      points: ['tl', 'bl'],\n      offset: [0, 4],\n      overflow: {\n        adjustX: adjustX,\n        adjustY: 1\n      },\n      htmlRegion: 'scroll'\n    },\n    bottomRight: {\n      points: ['tr', 'br'],\n      offset: [0, 4],\n      overflow: {\n        adjustX: adjustX,\n        adjustY: 1\n      },\n      htmlRegion: 'scroll'\n    },\n    topLeft: {\n      points: ['bl', 'tl'],\n      offset: [0, -4],\n      overflow: {\n        adjustX: adjustX,\n        adjustY: 1\n      },\n      htmlRegion: 'scroll'\n    },\n    topRight: {\n      points: ['br', 'tr'],\n      offset: [0, -4],\n      overflow: {\n        adjustX: adjustX,\n        adjustY: 1\n      },\n      htmlRegion: 'scroll'\n    }\n  };\n};\nvar SelectTrigger = function SelectTrigger(props, ref) {\n  var prefixCls = props.prefixCls,\n    disabled = props.disabled,\n    visible = props.visible,\n    children = props.children,\n    popupElement = props.popupElement,\n    animation = props.animation,\n    transitionName = props.transitionName,\n    dropdownStyle = props.dropdownStyle,\n    dropdownClassName = props.dropdownClassName,\n    _props$direction = props.direction,\n    direction = _props$direction === void 0 ? 'ltr' : _props$direction,\n    placement = props.placement,\n    builtinPlacements = props.builtinPlacements,\n    dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n    dropdownRender = props.dropdownRender,\n    dropdownAlign = props.dropdownAlign,\n    getPopupContainer = props.getPopupContainer,\n    empty = props.empty,\n    getTriggerDOMNode = props.getTriggerDOMNode,\n    onPopupVisibleChange = props.onPopupVisibleChange,\n    onPopupMouseEnter = props.onPopupMouseEnter,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var dropdownPrefixCls = \"\".concat(prefixCls, \"-dropdown\");\n  var popupNode = popupElement;\n  if (dropdownRender) {\n    popupNode = dropdownRender(popupElement);\n  }\n  var mergedBuiltinPlacements = React.useMemo(function () {\n    return builtinPlacements || getBuiltInPlacements(dropdownMatchSelectWidth);\n  }, [builtinPlacements, dropdownMatchSelectWidth]);\n\n  // ===================== Motion ======================\n  var mergedTransitionName = animation ? \"\".concat(dropdownPrefixCls, \"-\").concat(animation) : transitionName;\n\n  // =================== Popup Width ===================\n  var isNumberPopupWidth = typeof dropdownMatchSelectWidth === 'number';\n  var stretch = React.useMemo(function () {\n    if (isNumberPopupWidth) {\n      return null;\n    }\n    return dropdownMatchSelectWidth === false ? 'minWidth' : 'width';\n  }, [dropdownMatchSelectWidth, isNumberPopupWidth]);\n  var popupStyle = dropdownStyle;\n  if (isNumberPopupWidth) {\n    popupStyle = _objectSpread(_objectSpread({}, popupStyle), {}, {\n      width: dropdownMatchSelectWidth\n    });\n  }\n\n  // ======================= Ref =======================\n  var popupRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      getPopupElement: function getPopupElement() {\n        return popupRef.current;\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(Trigger, _extends({}, restProps, {\n    showAction: onPopupVisibleChange ? ['click'] : [],\n    hideAction: onPopupVisibleChange ? ['click'] : [],\n    popupPlacement: placement || (direction === 'rtl' ? 'bottomRight' : 'bottomLeft'),\n    builtinPlacements: mergedBuiltinPlacements,\n    prefixCls: dropdownPrefixCls,\n    popupTransitionName: mergedTransitionName,\n    popup: /*#__PURE__*/React.createElement(\"div\", {\n      ref: popupRef,\n      onMouseEnter: onPopupMouseEnter\n    }, popupNode),\n    stretch: stretch,\n    popupAlign: dropdownAlign,\n    popupVisible: visible,\n    getPopupContainer: getPopupContainer,\n    popupClassName: classNames(dropdownClassName, _defineProperty({}, \"\".concat(dropdownPrefixCls, \"-empty\"), empty)),\n    popupStyle: popupStyle,\n    getTriggerDOMNode: getTriggerDOMNode,\n    onPopupVisibleChange: onPopupVisibleChange\n  }), children);\n};\nvar RefSelectTrigger = /*#__PURE__*/React.forwardRef(SelectTrigger);\nRefSelectTrigger.displayName = 'SelectTrigger';\nexport default RefSelectTrigger;"]},"metadata":{},"sourceType":"module"}