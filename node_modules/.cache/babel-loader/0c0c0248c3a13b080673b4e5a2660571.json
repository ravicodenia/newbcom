{"ast":null,"code":"\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Pagination from '../pagination';\nimport ListItem from './ListItem';\nexport const OmitProps = ['handleFilter', 'handleClear', 'checkedKeys'];\n\nconst parsePagination = pagination => {\n  const defaultPagination = {\n    simple: true,\n    showSizeChanger: false,\n    showLessItems: false\n  };\n  return Object.assign(Object.assign({}, defaultPagination), pagination);\n};\n\nconst TransferListBody = (props, ref) => {\n  const {\n    prefixCls,\n    filteredRenderItems,\n    selectedKeys,\n    disabled: globalDisabled,\n    showRemove,\n    pagination,\n    onScroll,\n    onItemSelect,\n    onItemRemove\n  } = props;\n  const [current, setCurrent] = React.useState(1);\n  const mergedPagination = React.useMemo(() => {\n    if (!pagination) {\n      return null;\n    }\n\n    const convertPagination = typeof pagination === 'object' ? pagination : {};\n    return parsePagination(convertPagination);\n  }, [pagination]);\n  const [pageSize, setPageSize] = useMergedState(10, {\n    value: mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.pageSize\n  });\n  React.useEffect(() => {\n    if (mergedPagination) {\n      const maxPageCount = Math.ceil(filteredRenderItems.length / pageSize);\n      setCurrent(Math.min(current, maxPageCount));\n    }\n  }, [filteredRenderItems, mergedPagination, pageSize]);\n\n  const onClick = item => {\n    onItemSelect === null || onItemSelect === void 0 ? void 0 : onItemSelect(item.key, !selectedKeys.includes(item.key));\n  };\n\n  const onRemove = item => {\n    onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove([item.key]);\n  };\n\n  const onPageChange = cur => {\n    setCurrent(cur);\n  };\n\n  const onSizeChange = (cur, size) => {\n    setCurrent(cur);\n    setPageSize(size);\n  };\n\n  const memoizedItems = React.useMemo(() => {\n    const displayItems = mergedPagination ? filteredRenderItems.slice((current - 1) * pageSize, current * pageSize) : filteredRenderItems;\n    return displayItems;\n  }, [current, filteredRenderItems, mergedPagination, pageSize]);\n  React.useImperativeHandle(ref, () => ({\n    items: memoizedItems\n  }));\n  const paginationNode = mergedPagination ? /*#__PURE__*/React.createElement(Pagination, {\n    size: \"small\",\n    disabled: globalDisabled,\n    simple: mergedPagination.simple,\n    pageSize: pageSize,\n    showLessItems: mergedPagination.showLessItems,\n    showSizeChanger: mergedPagination.showSizeChanger,\n    className: `${prefixCls}-pagination`,\n    total: filteredRenderItems.length,\n    current: current,\n    onChange: onPageChange,\n    onShowSizeChange: onSizeChange\n  }) : null;\n  const cls = classNames(`${prefixCls}-content`, {\n    [`${prefixCls}-content-show-remove`]: showRemove\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    className: cls,\n    onScroll: onScroll\n  }, (memoizedItems || []).map(_ref => {\n    let {\n      renderedEl,\n      renderedText,\n      item\n    } = _ref;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: item.key,\n      item: item,\n      renderedText: renderedText,\n      renderedEl: renderedEl,\n      prefixCls: prefixCls,\n      showRemove: showRemove,\n      onClick: onClick,\n      onRemove: onRemove,\n      checked: selectedKeys.includes(item.key),\n      disabled: globalDisabled || item.disabled\n    });\n  })), paginationNode);\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  TransferListBody.displayName = 'TransferListBody';\n}\n\nexport default /*#__PURE__*/React.forwardRef(TransferListBody);","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/transfer/ListBody.js"],"names":["classNames","React","useMergedState","Pagination","ListItem","OmitProps","parsePagination","pagination","defaultPagination","simple","showSizeChanger","showLessItems","Object","assign","TransferListBody","props","ref","prefixCls","filteredRenderItems","selectedKeys","disabled","globalDisabled","showRemove","onScroll","onItemSelect","onItemRemove","current","setCurrent","useState","mergedPagination","useMemo","convertPagination","pageSize","setPageSize","value","useEffect","maxPageCount","Math","ceil","length","min","onClick","item","key","includes","onRemove","onPageChange","cur","onSizeChange","size","memoizedItems","displayItems","slice","useImperativeHandle","items","paginationNode","createElement","className","total","onChange","onShowSizeChange","cls","Fragment","map","_ref","renderedEl","renderedText","checked","process","env","NODE_ENV","displayName","forwardRef"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Pagination from '../pagination';\nimport ListItem from './ListItem';\nexport const OmitProps = ['handleFilter', 'handleClear', 'checkedKeys'];\nconst parsePagination = pagination => {\n  const defaultPagination = {\n    simple: true,\n    showSizeChanger: false,\n    showLessItems: false\n  };\n  return Object.assign(Object.assign({}, defaultPagination), pagination);\n};\nconst TransferListBody = (props, ref) => {\n  const {\n    prefixCls,\n    filteredRenderItems,\n    selectedKeys,\n    disabled: globalDisabled,\n    showRemove,\n    pagination,\n    onScroll,\n    onItemSelect,\n    onItemRemove\n  } = props;\n  const [current, setCurrent] = React.useState(1);\n  const mergedPagination = React.useMemo(() => {\n    if (!pagination) {\n      return null;\n    }\n    const convertPagination = typeof pagination === 'object' ? pagination : {};\n    return parsePagination(convertPagination);\n  }, [pagination]);\n  const [pageSize, setPageSize] = useMergedState(10, {\n    value: mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.pageSize\n  });\n  React.useEffect(() => {\n    if (mergedPagination) {\n      const maxPageCount = Math.ceil(filteredRenderItems.length / pageSize);\n      setCurrent(Math.min(current, maxPageCount));\n    }\n  }, [filteredRenderItems, mergedPagination, pageSize]);\n  const onClick = item => {\n    onItemSelect === null || onItemSelect === void 0 ? void 0 : onItemSelect(item.key, !selectedKeys.includes(item.key));\n  };\n  const onRemove = item => {\n    onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove([item.key]);\n  };\n  const onPageChange = cur => {\n    setCurrent(cur);\n  };\n  const onSizeChange = (cur, size) => {\n    setCurrent(cur);\n    setPageSize(size);\n  };\n  const memoizedItems = React.useMemo(() => {\n    const displayItems = mergedPagination ? filteredRenderItems.slice((current - 1) * pageSize, current * pageSize) : filteredRenderItems;\n    return displayItems;\n  }, [current, filteredRenderItems, mergedPagination, pageSize]);\n  React.useImperativeHandle(ref, () => ({\n    items: memoizedItems\n  }));\n  const paginationNode = mergedPagination ? /*#__PURE__*/React.createElement(Pagination, {\n    size: \"small\",\n    disabled: globalDisabled,\n    simple: mergedPagination.simple,\n    pageSize: pageSize,\n    showLessItems: mergedPagination.showLessItems,\n    showSizeChanger: mergedPagination.showSizeChanger,\n    className: `${prefixCls}-pagination`,\n    total: filteredRenderItems.length,\n    current: current,\n    onChange: onPageChange,\n    onShowSizeChange: onSizeChange\n  }) : null;\n  const cls = classNames(`${prefixCls}-content`, {\n    [`${prefixCls}-content-show-remove`]: showRemove\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    className: cls,\n    onScroll: onScroll\n  }, (memoizedItems || []).map(_ref => {\n    let {\n      renderedEl,\n      renderedText,\n      item\n    } = _ref;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: item.key,\n      item: item,\n      renderedText: renderedText,\n      renderedEl: renderedEl,\n      prefixCls: prefixCls,\n      showRemove: showRemove,\n      onClick: onClick,\n      onRemove: onRemove,\n      checked: selectedKeys.includes(item.key),\n      disabled: globalDisabled || item.disabled\n    });\n  })), paginationNode);\n};\nif (process.env.NODE_ENV !== 'production') {\n  TransferListBody.displayName = 'TransferListBody';\n}\nexport default /*#__PURE__*/React.forwardRef(TransferListBody);"]},"metadata":{},"sourceType":"module"}