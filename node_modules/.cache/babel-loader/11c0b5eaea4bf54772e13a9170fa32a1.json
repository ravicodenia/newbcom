{"ast":null,"code":"import { genFocusStyle, resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n\nconst genBreadcrumbStyle = token => {\n  const {\n    componentCls,\n    iconCls\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      color: token.itemColor,\n      fontSize: token.fontSize,\n      [iconCls]: {\n        fontSize: token.iconFontSize\n      },\n      ol: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: 0,\n        padding: 0,\n        listStyle: 'none'\n      },\n      a: Object.assign({\n        color: token.linkColor,\n        transition: `color ${token.motionDurationMid}`,\n        padding: `0 ${token.paddingXXS}px`,\n        borderRadius: token.borderRadiusSM,\n        height: token.lineHeight * token.fontSize,\n        display: 'inline-block',\n        marginInline: -token.marginXXS,\n        '&:hover': {\n          color: token.linkHoverColor,\n          backgroundColor: token.colorBgTextHover\n        }\n      }, genFocusStyle(token)),\n      [`li:last-child`]: {\n        color: token.lastItemColor\n      },\n      [`${componentCls}-separator`]: {\n        marginInline: token.separatorMargin,\n        color: token.separatorColor\n      },\n      [`${componentCls}-link`]: {\n        [`\n          > ${iconCls} + span,\n          > ${iconCls} + a\n        `]: {\n          marginInlineStart: token.marginXXS\n        }\n      },\n      [`${componentCls}-overlay-link`]: {\n        borderRadius: token.borderRadiusSM,\n        height: token.lineHeight * token.fontSize,\n        display: 'inline-block',\n        padding: `0 ${token.paddingXXS}px`,\n        marginInline: -token.marginXXS,\n        [`> ${iconCls}`]: {\n          marginInlineStart: token.marginXXS,\n          fontSize: token.fontSizeIcon\n        },\n        '&:hover': {\n          color: token.linkHoverColor,\n          backgroundColor: token.colorBgTextHover,\n          a: {\n            color: token.linkHoverColor\n          }\n        },\n        a: {\n          '&:hover': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      // rtl style\n      [`&${token.componentCls}-rtl`]: {\n        direction: 'rtl'\n      }\n    })\n  };\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Breadcrumb', token => {\n  const BreadcrumbToken = mergeToken(token, {});\n  return [genBreadcrumbStyle(BreadcrumbToken)];\n}, token => ({\n  itemColor: token.colorTextDescription,\n  lastItemColor: token.colorText,\n  iconFontSize: token.fontSize,\n  linkColor: token.colorTextDescription,\n  linkHoverColor: token.colorText,\n  separatorColor: token.colorTextDescription,\n  separatorMargin: token.marginXS\n}));","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/breadcrumb/style/index.js"],"names":["genFocusStyle","resetComponent","genComponentStyleHook","mergeToken","genBreadcrumbStyle","token","componentCls","iconCls","Object","assign","color","itemColor","fontSize","iconFontSize","ol","display","flexWrap","margin","padding","listStyle","a","linkColor","transition","motionDurationMid","paddingXXS","borderRadius","borderRadiusSM","height","lineHeight","marginInline","marginXXS","linkHoverColor","backgroundColor","colorBgTextHover","lastItemColor","separatorMargin","separatorColor","marginInlineStart","fontSizeIcon","direction","BreadcrumbToken","colorTextDescription","colorText","marginXS"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,cAAxB,QAA8C,aAA9C;AACA,SAASC,qBAAT,EAAgCC,UAAhC,QAAkD,sBAAlD;;AACA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAClC,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA;AAFI,MAGFF,KAHJ;AAIA,SAAO;AACL,KAACC,YAAD,GAAgBE,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,cAAc,CAACI,KAAD,CAAhC,CAAd,EAAwD;AACtEK,MAAAA,KAAK,EAAEL,KAAK,CAACM,SADyD;AAEtEC,MAAAA,QAAQ,EAAEP,KAAK,CAACO,QAFsD;AAGtE,OAACL,OAAD,GAAW;AACTK,QAAAA,QAAQ,EAAEP,KAAK,CAACQ;AADP,OAH2D;AAMtEC,MAAAA,EAAE,EAAE;AACFC,QAAAA,OAAO,EAAE,MADP;AAEFC,QAAAA,QAAQ,EAAE,MAFR;AAGFC,QAAAA,MAAM,EAAE,CAHN;AAIFC,QAAAA,OAAO,EAAE,CAJP;AAKFC,QAAAA,SAAS,EAAE;AALT,OANkE;AAatEC,MAAAA,CAAC,EAAEZ,MAAM,CAACC,MAAP,CAAc;AACfC,QAAAA,KAAK,EAAEL,KAAK,CAACgB,SADE;AAEfC,QAAAA,UAAU,EAAG,SAAQjB,KAAK,CAACkB,iBAAkB,EAF9B;AAGfL,QAAAA,OAAO,EAAG,KAAIb,KAAK,CAACmB,UAAW,IAHhB;AAIfC,QAAAA,YAAY,EAAEpB,KAAK,CAACqB,cAJL;AAKfC,QAAAA,MAAM,EAAEtB,KAAK,CAACuB,UAAN,GAAmBvB,KAAK,CAACO,QALlB;AAMfG,QAAAA,OAAO,EAAE,cANM;AAOfc,QAAAA,YAAY,EAAE,CAACxB,KAAK,CAACyB,SAPN;AAQf,mBAAW;AACTpB,UAAAA,KAAK,EAAEL,KAAK,CAAC0B,cADJ;AAETC,UAAAA,eAAe,EAAE3B,KAAK,CAAC4B;AAFd;AARI,OAAd,EAYAjC,aAAa,CAACK,KAAD,CAZb,CAbmE;AA0BtE,OAAE,eAAF,GAAmB;AACjBK,QAAAA,KAAK,EAAEL,KAAK,CAAC6B;AADI,OA1BmD;AA6BtE,OAAE,GAAE5B,YAAa,YAAjB,GAA+B;AAC7BuB,QAAAA,YAAY,EAAExB,KAAK,CAAC8B,eADS;AAE7BzB,QAAAA,KAAK,EAAEL,KAAK,CAAC+B;AAFgB,OA7BuC;AAiCtE,OAAE,GAAE9B,YAAa,OAAjB,GAA0B;AACxB,SAAE;AACV,cAAcC,OAAQ;AACtB,cAAcA,OAAQ;AACtB,SAHQ,GAGI;AACF8B,UAAAA,iBAAiB,EAAEhC,KAAK,CAACyB;AADvB;AAJoB,OAjC4C;AAyCtE,OAAE,GAAExB,YAAa,eAAjB,GAAkC;AAChCmB,QAAAA,YAAY,EAAEpB,KAAK,CAACqB,cADY;AAEhCC,QAAAA,MAAM,EAAEtB,KAAK,CAACuB,UAAN,GAAmBvB,KAAK,CAACO,QAFD;AAGhCG,QAAAA,OAAO,EAAE,cAHuB;AAIhCG,QAAAA,OAAO,EAAG,KAAIb,KAAK,CAACmB,UAAW,IAJC;AAKhCK,QAAAA,YAAY,EAAE,CAACxB,KAAK,CAACyB,SALW;AAMhC,SAAE,KAAIvB,OAAQ,EAAd,GAAkB;AAChB8B,UAAAA,iBAAiB,EAAEhC,KAAK,CAACyB,SADT;AAEhBlB,UAAAA,QAAQ,EAAEP,KAAK,CAACiC;AAFA,SANc;AAUhC,mBAAW;AACT5B,UAAAA,KAAK,EAAEL,KAAK,CAAC0B,cADJ;AAETC,UAAAA,eAAe,EAAE3B,KAAK,CAAC4B,gBAFd;AAGTb,UAAAA,CAAC,EAAE;AACDV,YAAAA,KAAK,EAAEL,KAAK,CAAC0B;AADZ;AAHM,SAVqB;AAiBhCX,QAAAA,CAAC,EAAE;AACD,qBAAW;AACTY,YAAAA,eAAe,EAAE;AADR;AADV;AAjB6B,OAzCoC;AAgEtE;AACA,OAAE,IAAG3B,KAAK,CAACC,YAAa,MAAxB,GAAgC;AAC9BiC,QAAAA,SAAS,EAAE;AADmB;AAjEsC,KAAxD;AADX,GAAP;AAuED,CA5ED,C,CA6EA;;;AACA,eAAerC,qBAAqB,CAAC,YAAD,EAAeG,KAAK,IAAI;AAC1D,QAAMmC,eAAe,GAAGrC,UAAU,CAACE,KAAD,EAAQ,EAAR,CAAlC;AACA,SAAO,CAACD,kBAAkB,CAACoC,eAAD,CAAnB,CAAP;AACD,CAHmC,EAGjCnC,KAAK,KAAK;AACXM,EAAAA,SAAS,EAAEN,KAAK,CAACoC,oBADN;AAEXP,EAAAA,aAAa,EAAE7B,KAAK,CAACqC,SAFV;AAGX7B,EAAAA,YAAY,EAAER,KAAK,CAACO,QAHT;AAIXS,EAAAA,SAAS,EAAEhB,KAAK,CAACoC,oBAJN;AAKXV,EAAAA,cAAc,EAAE1B,KAAK,CAACqC,SALX;AAMXN,EAAAA,cAAc,EAAE/B,KAAK,CAACoC,oBANX;AAOXN,EAAAA,eAAe,EAAE9B,KAAK,CAACsC;AAPZ,CAAL,CAH4B,CAApC","sourcesContent":["import { genFocusStyle, resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nconst genBreadcrumbStyle = token => {\n  const {\n    componentCls,\n    iconCls\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      color: token.itemColor,\n      fontSize: token.fontSize,\n      [iconCls]: {\n        fontSize: token.iconFontSize\n      },\n      ol: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: 0,\n        padding: 0,\n        listStyle: 'none'\n      },\n      a: Object.assign({\n        color: token.linkColor,\n        transition: `color ${token.motionDurationMid}`,\n        padding: `0 ${token.paddingXXS}px`,\n        borderRadius: token.borderRadiusSM,\n        height: token.lineHeight * token.fontSize,\n        display: 'inline-block',\n        marginInline: -token.marginXXS,\n        '&:hover': {\n          color: token.linkHoverColor,\n          backgroundColor: token.colorBgTextHover\n        }\n      }, genFocusStyle(token)),\n      [`li:last-child`]: {\n        color: token.lastItemColor\n      },\n      [`${componentCls}-separator`]: {\n        marginInline: token.separatorMargin,\n        color: token.separatorColor\n      },\n      [`${componentCls}-link`]: {\n        [`\n          > ${iconCls} + span,\n          > ${iconCls} + a\n        `]: {\n          marginInlineStart: token.marginXXS\n        }\n      },\n      [`${componentCls}-overlay-link`]: {\n        borderRadius: token.borderRadiusSM,\n        height: token.lineHeight * token.fontSize,\n        display: 'inline-block',\n        padding: `0 ${token.paddingXXS}px`,\n        marginInline: -token.marginXXS,\n        [`> ${iconCls}`]: {\n          marginInlineStart: token.marginXXS,\n          fontSize: token.fontSizeIcon\n        },\n        '&:hover': {\n          color: token.linkHoverColor,\n          backgroundColor: token.colorBgTextHover,\n          a: {\n            color: token.linkHoverColor\n          }\n        },\n        a: {\n          '&:hover': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      // rtl style\n      [`&${token.componentCls}-rtl`]: {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Breadcrumb', token => {\n  const BreadcrumbToken = mergeToken(token, {});\n  return [genBreadcrumbStyle(BreadcrumbToken)];\n}, token => ({\n  itemColor: token.colorTextDescription,\n  lastItemColor: token.colorText,\n  iconFontSize: token.fontSize,\n  linkColor: token.colorTextDescription,\n  linkHoverColor: token.colorText,\n  separatorColor: token.colorTextDescription,\n  separatorMargin: token.marginXS\n}));"]},"metadata":{},"sourceType":"module"}