{"ast":null,"code":"const genBorderedStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const tableBorder = `${token.lineWidth}px ${token.lineType} ${token.tableBorderColor}`;\n\n  const getSizeBorderStyle = (size, paddingVertical, paddingHorizontal) => ({\n    [`&${componentCls}-${size}`]: {\n      [`> ${componentCls}-container`]: {\n        [`> ${componentCls}-content, > ${componentCls}-body`]: {\n          [`\n            > table > tbody > tr > th,\n            > table > tbody > tr > td\n          `]: {\n            [`> ${componentCls}-expanded-row-fixed`]: {\n              margin: `-${paddingVertical}px -${paddingHorizontal + token.lineWidth}px`\n            }\n          }\n        }\n      }\n    }\n  });\n\n  return {\n    [`${componentCls}-wrapper`]: {\n      [`${componentCls}${componentCls}-bordered`]: Object.assign(Object.assign(Object.assign({\n        // ============================ Title =============================\n        [`> ${componentCls}-title`]: {\n          border: tableBorder,\n          borderBottom: 0\n        },\n        // ============================ Content ============================\n        [`> ${componentCls}-container`]: {\n          borderInlineStart: tableBorder,\n          borderTop: tableBorder,\n          [`\n            > ${componentCls}-content,\n            > ${componentCls}-header,\n            > ${componentCls}-body,\n            > ${componentCls}-summary\n          `]: {\n            '> table': {\n              // ============================= Cell =============================\n              [`\n                > thead > tr > th,\n                > thead > tr > td,\n                > tbody > tr > th,\n                > tbody > tr > td,\n                > tfoot > tr > th,\n                > tfoot > tr > td\n              `]: {\n                borderInlineEnd: tableBorder\n              },\n              // ============================ Header ============================\n              '> thead': {\n                '> tr:not(:last-child) > th': {\n                  borderBottom: tableBorder\n                },\n                '> tr > th::before': {\n                  backgroundColor: 'transparent !important'\n                }\n              },\n              // Fixed right should provides additional border\n              [`\n                > thead > tr,\n                > tbody > tr,\n                > tfoot > tr\n              `]: {\n                [`> ${componentCls}-cell-fix-right-first::after`]: {\n                  borderInlineEnd: tableBorder\n                }\n              },\n              // ========================== Expandable ==========================\n              [`\n                > tbody > tr > th,\n                > tbody > tr > td\n              `]: {\n                [`> ${componentCls}-expanded-row-fixed`]: {\n                  margin: `-${token.tablePaddingVertical}px -${token.tablePaddingHorizontal + token.lineWidth}px`,\n                  '&::after': {\n                    position: 'absolute',\n                    top: 0,\n                    insetInlineEnd: token.lineWidth,\n                    bottom: 0,\n                    borderInlineEnd: tableBorder,\n                    content: '\"\"'\n                  }\n                }\n              }\n            }\n          }\n        },\n        // ============================ Scroll ============================\n        [`&${componentCls}-scroll-horizontal`]: {\n          [`> ${componentCls}-container > ${componentCls}-body`]: {\n            '> table > tbody': {\n              [`\n                > tr${componentCls}-expanded-row,\n                > tr${componentCls}-placeholder\n              `]: {\n                [`> th, > td`]: {\n                  borderInlineEnd: 0\n                }\n              }\n            }\n          }\n        }\n      }, getSizeBorderStyle('middle', token.tablePaddingVerticalMiddle, token.tablePaddingHorizontalMiddle)), getSizeBorderStyle('small', token.tablePaddingVerticalSmall, token.tablePaddingHorizontalSmall)), {\n        // ============================ Footer ============================\n        [`> ${componentCls}-footer`]: {\n          border: tableBorder,\n          borderTop: 0\n        }\n      }),\n      // ============================ Nested ============================\n      [`${componentCls}-cell`]: {\n        [`${componentCls}-container:first-child`]: {\n          // :first-child to avoid the case when bordered and title is set\n          borderTop: 0\n        },\n        // https://github.com/ant-design/ant-design/issues/35577\n        '&-scrollbar:not([rowspan])': {\n          boxShadow: `0 ${token.lineWidth}px 0 ${token.lineWidth}px ${token.tableHeaderBg}`\n        }\n      },\n      [`${componentCls}-bordered ${componentCls}-cell-scrollbar`]: {\n        borderInlineEnd: tableBorder\n      }\n    }\n  };\n};\n\nexport default genBorderedStyle;","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/table/style/bordered.js"],"names":["genBorderedStyle","token","componentCls","tableBorder","lineWidth","lineType","tableBorderColor","getSizeBorderStyle","size","paddingVertical","paddingHorizontal","margin","Object","assign","border","borderBottom","borderInlineStart","borderTop","borderInlineEnd","backgroundColor","tablePaddingVertical","tablePaddingHorizontal","position","top","insetInlineEnd","bottom","content","tablePaddingVerticalMiddle","tablePaddingHorizontalMiddle","tablePaddingVerticalSmall","tablePaddingHorizontalSmall","boxShadow","tableHeaderBg"],"mappings":"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","sourcesContent":["const genBorderedStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const tableBorder = `${token.lineWidth}px ${token.lineType} ${token.tableBorderColor}`;\n  const getSizeBorderStyle = (size, paddingVertical, paddingHorizontal) => ({\n    [`&${componentCls}-${size}`]: {\n      [`> ${componentCls}-container`]: {\n        [`> ${componentCls}-content, > ${componentCls}-body`]: {\n          [`\n            > table > tbody > tr > th,\n            > table > tbody > tr > td\n          `]: {\n            [`> ${componentCls}-expanded-row-fixed`]: {\n              margin: `-${paddingVertical}px -${paddingHorizontal + token.lineWidth}px`\n            }\n          }\n        }\n      }\n    }\n  });\n  return {\n    [`${componentCls}-wrapper`]: {\n      [`${componentCls}${componentCls}-bordered`]: Object.assign(Object.assign(Object.assign({\n        // ============================ Title =============================\n        [`> ${componentCls}-title`]: {\n          border: tableBorder,\n          borderBottom: 0\n        },\n        // ============================ Content ============================\n        [`> ${componentCls}-container`]: {\n          borderInlineStart: tableBorder,\n          borderTop: tableBorder,\n          [`\n            > ${componentCls}-content,\n            > ${componentCls}-header,\n            > ${componentCls}-body,\n            > ${componentCls}-summary\n          `]: {\n            '> table': {\n              // ============================= Cell =============================\n              [`\n                > thead > tr > th,\n                > thead > tr > td,\n                > tbody > tr > th,\n                > tbody > tr > td,\n                > tfoot > tr > th,\n                > tfoot > tr > td\n              `]: {\n                borderInlineEnd: tableBorder\n              },\n              // ============================ Header ============================\n              '> thead': {\n                '> tr:not(:last-child) > th': {\n                  borderBottom: tableBorder\n                },\n                '> tr > th::before': {\n                  backgroundColor: 'transparent !important'\n                }\n              },\n              // Fixed right should provides additional border\n              [`\n                > thead > tr,\n                > tbody > tr,\n                > tfoot > tr\n              `]: {\n                [`> ${componentCls}-cell-fix-right-first::after`]: {\n                  borderInlineEnd: tableBorder\n                }\n              },\n              // ========================== Expandable ==========================\n              [`\n                > tbody > tr > th,\n                > tbody > tr > td\n              `]: {\n                [`> ${componentCls}-expanded-row-fixed`]: {\n                  margin: `-${token.tablePaddingVertical}px -${token.tablePaddingHorizontal + token.lineWidth}px`,\n                  '&::after': {\n                    position: 'absolute',\n                    top: 0,\n                    insetInlineEnd: token.lineWidth,\n                    bottom: 0,\n                    borderInlineEnd: tableBorder,\n                    content: '\"\"'\n                  }\n                }\n              }\n            }\n          }\n        },\n        // ============================ Scroll ============================\n        [`&${componentCls}-scroll-horizontal`]: {\n          [`> ${componentCls}-container > ${componentCls}-body`]: {\n            '> table > tbody': {\n              [`\n                > tr${componentCls}-expanded-row,\n                > tr${componentCls}-placeholder\n              `]: {\n                [`> th, > td`]: {\n                  borderInlineEnd: 0\n                }\n              }\n            }\n          }\n        }\n      }, getSizeBorderStyle('middle', token.tablePaddingVerticalMiddle, token.tablePaddingHorizontalMiddle)), getSizeBorderStyle('small', token.tablePaddingVerticalSmall, token.tablePaddingHorizontalSmall)), {\n        // ============================ Footer ============================\n        [`> ${componentCls}-footer`]: {\n          border: tableBorder,\n          borderTop: 0\n        }\n      }),\n      // ============================ Nested ============================\n      [`${componentCls}-cell`]: {\n        [`${componentCls}-container:first-child`]: {\n          // :first-child to avoid the case when bordered and title is set\n          borderTop: 0\n        },\n        // https://github.com/ant-design/ant-design/issues/35577\n        '&-scrollbar:not([rowspan])': {\n          boxShadow: `0 ${token.lineWidth}px 0 ${token.lineWidth}px ${token.tableHeaderBg}`\n        }\n      },\n      [`${componentCls}-bordered ${componentCls}-cell-scrollbar`]: {\n        borderInlineEnd: tableBorder\n      }\n    }\n  };\n};\nexport default genBorderedStyle;"]},"metadata":{},"sourceType":"module"}