{"ast":null,"code":"\"use client\";\n\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genNotificationPlacementStyle from './placement';\n\nconst genNotificationStyle = token => {\n  const {\n    iconCls,\n    componentCls,\n    // .ant-notification\n    boxShadow,\n    fontSizeLG,\n    notificationMarginBottom,\n    borderRadiusLG,\n    colorSuccess,\n    colorInfo,\n    colorWarning,\n    colorError,\n    colorTextHeading,\n    notificationBg,\n    notificationPadding,\n    notificationMarginEdge,\n    motionDurationMid,\n    motionEaseInOut,\n    fontSize,\n    lineHeight,\n    width,\n    notificationIconSize,\n    colorText\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  const notificationFadeIn = new Keyframes('antNotificationFadeIn', {\n    '0%': {\n      left: {\n        _skip_check_: true,\n        value: width\n      },\n      opacity: 0\n    },\n    '100%': {\n      left: {\n        _skip_check_: true,\n        value: 0\n      },\n      opacity: 1\n    }\n  });\n  const notificationFadeOut = new Keyframes('antNotificationFadeOut', {\n    '0%': {\n      maxHeight: token.animationMaxHeight,\n      marginBottom: notificationMarginBottom,\n      opacity: 1\n    },\n    '100%': {\n      maxHeight: 0,\n      marginBottom: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      opacity: 0\n    }\n  });\n  const noticeStyle = {\n    position: 'relative',\n    width,\n    maxWidth: `calc(100vw - ${notificationMarginEdge * 2}px)`,\n    marginBottom: notificationMarginBottom,\n    marginInlineStart: 'auto',\n    padding: notificationPadding,\n    overflow: 'hidden',\n    lineHeight,\n    wordWrap: 'break-word',\n    background: notificationBg,\n    borderRadius: borderRadiusLG,\n    boxShadow,\n    [`${componentCls}-close-icon`]: {\n      fontSize,\n      cursor: 'pointer'\n    },\n    [`${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      color: colorTextHeading,\n      fontSize: fontSizeLG,\n      lineHeight: token.lineHeightLG\n    },\n    [`${noticeCls}-description`]: {\n      fontSize,\n      color: colorText\n    },\n    [`&${noticeCls}-closable ${noticeCls}-message`]: {\n      paddingInlineEnd: token.paddingLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      marginInlineStart: token.marginSM + notificationIconSize,\n      fontSize: fontSizeLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-description`]: {\n      marginInlineStart: token.marginSM + notificationIconSize,\n      fontSize\n    },\n    // Icon & color style in different selector level\n    // https://github.com/ant-design/ant-design/issues/16503\n    // https://github.com/ant-design/ant-design/issues/15512\n    [`${noticeCls}-icon`]: {\n      position: 'absolute',\n      fontSize: notificationIconSize,\n      lineHeight: 0,\n      // icon-font\n      [`&-success${iconCls}`]: {\n        color: colorSuccess\n      },\n      [`&-info${iconCls}`]: {\n        color: colorInfo\n      },\n      [`&-warning${iconCls}`]: {\n        color: colorWarning\n      },\n      [`&-error${iconCls}`]: {\n        color: colorError\n      }\n    },\n    [`${noticeCls}-close`]: {\n      position: 'absolute',\n      top: token.notificationPaddingVertical,\n      insetInlineEnd: token.notificationPaddingHorizontal,\n      color: token.colorIcon,\n      outline: 'none',\n      width: token.notificationCloseButtonSize,\n      height: token.notificationCloseButtonSize,\n      borderRadius: token.borderRadiusSM,\n      transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&:hover': {\n        color: token.colorIconHover,\n        backgroundColor: token.wireframe ? 'transparent' : token.colorFillContent\n      }\n    },\n    [`${noticeCls}-btn`]: {\n      float: 'right',\n      marginTop: token.marginSM\n    }\n  };\n  return [// ============================ Holder ============================\n  {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'fixed',\n      zIndex: token.zIndexPopup,\n      marginInlineEnd: notificationMarginEdge,\n      [`${componentCls}-hook-holder`]: {\n        position: 'relative'\n      },\n      [`&${componentCls}-top, &${componentCls}-bottom`]: {\n        [noticeCls]: {\n          marginInline: 'auto auto'\n        }\n      },\n      [`&${componentCls}-topLeft, &${componentCls}-bottomLeft`]: {\n        [noticeCls]: {\n          marginInlineEnd: 'auto',\n          marginInlineStart: 0\n        }\n      },\n      //  animation\n      [`${componentCls}-fade-enter, ${componentCls}-fade-appear`]: {\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        opacity: 0,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-leave`]: {\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        animationDuration: motionDurationMid,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n        animationName: notificationFadeIn,\n        animationPlayState: 'running'\n      },\n      [`${componentCls}-fade-leave${componentCls}-fade-leave-active`]: {\n        animationName: notificationFadeOut,\n        animationPlayState: 'running'\n      }\n    }), genNotificationPlacementStyle(token)), {\n      // RTL\n      '&-rtl': {\n        direction: 'rtl',\n        [`${noticeCls}-btn`]: {\n          float: 'left'\n        }\n      }\n    })\n  }, // ============================ Notice ============================\n  {\n    [componentCls]: {\n      [noticeCls]: Object.assign({}, noticeStyle)\n    }\n  }, // ============================= Pure =============================\n  {\n    [`${noticeCls}-pure-panel`]: Object.assign(Object.assign({}, noticeStyle), {\n      margin: 0\n    })\n  }];\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Notification', token => {\n  const notificationPaddingVertical = token.paddingMD;\n  const notificationPaddingHorizontal = token.paddingLG;\n  const notificationToken = mergeToken(token, {\n    // index.less variables\n    notificationBg: token.colorBgElevated,\n    notificationPaddingVertical,\n    notificationPaddingHorizontal,\n    notificationIconSize: token.fontSizeLG * token.lineHeightLG,\n    notificationCloseButtonSize: token.controlHeightLG * 0.55,\n    notificationMarginBottom: token.margin,\n    notificationPadding: `${token.paddingMD}px ${token.paddingContentHorizontalLG}px`,\n    notificationMarginEdge: token.marginLG,\n    animationMaxHeight: 150\n  });\n  return [genNotificationStyle(notificationToken)];\n}, token => ({\n  zIndexPopup: token.zIndexPopupBase + 50,\n  width: 384\n}));","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/notification/style/index.js"],"names":["Keyframes","resetComponent","genComponentStyleHook","mergeToken","genNotificationPlacementStyle","genNotificationStyle","token","iconCls","componentCls","boxShadow","fontSizeLG","notificationMarginBottom","borderRadiusLG","colorSuccess","colorInfo","colorWarning","colorError","colorTextHeading","notificationBg","notificationPadding","notificationMarginEdge","motionDurationMid","motionEaseInOut","fontSize","lineHeight","width","notificationIconSize","colorText","noticeCls","notificationFadeIn","left","_skip_check_","value","opacity","notificationFadeOut","maxHeight","animationMaxHeight","marginBottom","paddingTop","paddingBottom","noticeStyle","position","maxWidth","marginInlineStart","padding","overflow","wordWrap","background","borderRadius","cursor","marginXS","color","lineHeightLG","paddingInlineEnd","paddingLG","marginSM","top","notificationPaddingVertical","insetInlineEnd","notificationPaddingHorizontal","colorIcon","outline","notificationCloseButtonSize","height","borderRadiusSM","transition","display","alignItems","justifyContent","colorIconHover","backgroundColor","wireframe","colorFillContent","float","marginTop","Object","assign","zIndex","zIndexPopup","marginInlineEnd","marginInline","animationDuration","animationTimingFunction","animationFillMode","animationPlayState","animationName","direction","margin","paddingMD","notificationToken","colorBgElevated","controlHeightLG","paddingContentHorizontalLG","marginLG","zIndexPopupBase"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genNotificationPlacementStyle from './placement';\nconst genNotificationStyle = token => {\n  const {\n    iconCls,\n    componentCls,\n    // .ant-notification\n    boxShadow,\n    fontSizeLG,\n    notificationMarginBottom,\n    borderRadiusLG,\n    colorSuccess,\n    colorInfo,\n    colorWarning,\n    colorError,\n    colorTextHeading,\n    notificationBg,\n    notificationPadding,\n    notificationMarginEdge,\n    motionDurationMid,\n    motionEaseInOut,\n    fontSize,\n    lineHeight,\n    width,\n    notificationIconSize,\n    colorText\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  const notificationFadeIn = new Keyframes('antNotificationFadeIn', {\n    '0%': {\n      left: {\n        _skip_check_: true,\n        value: width\n      },\n      opacity: 0\n    },\n    '100%': {\n      left: {\n        _skip_check_: true,\n        value: 0\n      },\n      opacity: 1\n    }\n  });\n  const notificationFadeOut = new Keyframes('antNotificationFadeOut', {\n    '0%': {\n      maxHeight: token.animationMaxHeight,\n      marginBottom: notificationMarginBottom,\n      opacity: 1\n    },\n    '100%': {\n      maxHeight: 0,\n      marginBottom: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      opacity: 0\n    }\n  });\n  const noticeStyle = {\n    position: 'relative',\n    width,\n    maxWidth: `calc(100vw - ${notificationMarginEdge * 2}px)`,\n    marginBottom: notificationMarginBottom,\n    marginInlineStart: 'auto',\n    padding: notificationPadding,\n    overflow: 'hidden',\n    lineHeight,\n    wordWrap: 'break-word',\n    background: notificationBg,\n    borderRadius: borderRadiusLG,\n    boxShadow,\n    [`${componentCls}-close-icon`]: {\n      fontSize,\n      cursor: 'pointer'\n    },\n    [`${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      color: colorTextHeading,\n      fontSize: fontSizeLG,\n      lineHeight: token.lineHeightLG\n    },\n    [`${noticeCls}-description`]: {\n      fontSize,\n      color: colorText\n    },\n    [`&${noticeCls}-closable ${noticeCls}-message`]: {\n      paddingInlineEnd: token.paddingLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      marginInlineStart: token.marginSM + notificationIconSize,\n      fontSize: fontSizeLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-description`]: {\n      marginInlineStart: token.marginSM + notificationIconSize,\n      fontSize\n    },\n    // Icon & color style in different selector level\n    // https://github.com/ant-design/ant-design/issues/16503\n    // https://github.com/ant-design/ant-design/issues/15512\n    [`${noticeCls}-icon`]: {\n      position: 'absolute',\n      fontSize: notificationIconSize,\n      lineHeight: 0,\n      // icon-font\n      [`&-success${iconCls}`]: {\n        color: colorSuccess\n      },\n      [`&-info${iconCls}`]: {\n        color: colorInfo\n      },\n      [`&-warning${iconCls}`]: {\n        color: colorWarning\n      },\n      [`&-error${iconCls}`]: {\n        color: colorError\n      }\n    },\n    [`${noticeCls}-close`]: {\n      position: 'absolute',\n      top: token.notificationPaddingVertical,\n      insetInlineEnd: token.notificationPaddingHorizontal,\n      color: token.colorIcon,\n      outline: 'none',\n      width: token.notificationCloseButtonSize,\n      height: token.notificationCloseButtonSize,\n      borderRadius: token.borderRadiusSM,\n      transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&:hover': {\n        color: token.colorIconHover,\n        backgroundColor: token.wireframe ? 'transparent' : token.colorFillContent\n      }\n    },\n    [`${noticeCls}-btn`]: {\n      float: 'right',\n      marginTop: token.marginSM\n    }\n  };\n  return [\n  // ============================ Holder ============================\n  {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'fixed',\n      zIndex: token.zIndexPopup,\n      marginInlineEnd: notificationMarginEdge,\n      [`${componentCls}-hook-holder`]: {\n        position: 'relative'\n      },\n      [`&${componentCls}-top, &${componentCls}-bottom`]: {\n        [noticeCls]: {\n          marginInline: 'auto auto'\n        }\n      },\n      [`&${componentCls}-topLeft, &${componentCls}-bottomLeft`]: {\n        [noticeCls]: {\n          marginInlineEnd: 'auto',\n          marginInlineStart: 0\n        }\n      },\n      //  animation\n      [`${componentCls}-fade-enter, ${componentCls}-fade-appear`]: {\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        opacity: 0,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-leave`]: {\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        animationDuration: motionDurationMid,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n        animationName: notificationFadeIn,\n        animationPlayState: 'running'\n      },\n      [`${componentCls}-fade-leave${componentCls}-fade-leave-active`]: {\n        animationName: notificationFadeOut,\n        animationPlayState: 'running'\n      }\n    }), genNotificationPlacementStyle(token)), {\n      // RTL\n      '&-rtl': {\n        direction: 'rtl',\n        [`${noticeCls}-btn`]: {\n          float: 'left'\n        }\n      }\n    })\n  },\n  // ============================ Notice ============================\n  {\n    [componentCls]: {\n      [noticeCls]: Object.assign({}, noticeStyle)\n    }\n  },\n  // ============================= Pure =============================\n  {\n    [`${noticeCls}-pure-panel`]: Object.assign(Object.assign({}, noticeStyle), {\n      margin: 0\n    })\n  }];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Notification', token => {\n  const notificationPaddingVertical = token.paddingMD;\n  const notificationPaddingHorizontal = token.paddingLG;\n  const notificationToken = mergeToken(token, {\n    // index.less variables\n    notificationBg: token.colorBgElevated,\n    notificationPaddingVertical,\n    notificationPaddingHorizontal,\n    notificationIconSize: token.fontSizeLG * token.lineHeightLG,\n    notificationCloseButtonSize: token.controlHeightLG * 0.55,\n    notificationMarginBottom: token.margin,\n    notificationPadding: `${token.paddingMD}px ${token.paddingContentHorizontalLG}px`,\n    notificationMarginEdge: token.marginLG,\n    animationMaxHeight: 150\n  });\n  return [genNotificationStyle(notificationToken)];\n}, token => ({\n  zIndexPopup: token.zIndexPopupBase + 50,\n  width: 384\n}));"]},"metadata":{},"sourceType":"module"}