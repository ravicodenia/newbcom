{"ast":null,"code":"\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport FilterFilled from \"@ant-design/icons/es/icons/FilterFilled\";\nimport classNames from 'classnames';\nimport isEqual from \"rc-util/es/isEqual\";\nimport useSyncState from '../../../_util/hooks/useSyncState';\nimport { devUseWarning } from '../../../_util/warning';\nimport Button from '../../../button';\nimport Checkbox from '../../../checkbox';\nimport { ConfigContext } from '../../../config-provider/context';\nimport Dropdown from '../../../dropdown';\nimport Empty from '../../../empty';\nimport Menu from '../../../menu';\nimport { OverrideProvider } from '../../../menu/OverrideContext';\nimport Radio from '../../../radio';\nimport Tree from '../../../tree';\nimport FilterSearch from './FilterSearch';\nimport FilterDropdownMenuWrapper from './FilterWrapper';\nexport function flattenKeys(filters) {\n  let keys = [];\n  (filters || []).forEach(_ref => {\n    let {\n      value,\n      children\n    } = _ref;\n    keys.push(value);\n\n    if (children) {\n      keys = [].concat(_toConsumableArray(keys), _toConsumableArray(flattenKeys(children)));\n    }\n  });\n  return keys;\n}\n\nfunction hasSubMenu(filters) {\n  return filters.some(_ref2 => {\n    let {\n      children\n    } = _ref2;\n    return children;\n  });\n}\n\nfunction searchValueMatched(searchValue, text) {\n  if (typeof text === 'string' || typeof text === 'number') {\n    return text === null || text === void 0 ? void 0 : text.toString().toLowerCase().includes(searchValue.trim().toLowerCase());\n  }\n\n  return false;\n}\n\nfunction renderFilterItems(_ref3) {\n  let {\n    filters,\n    prefixCls,\n    filteredKeys,\n    filterMultiple,\n    searchValue,\n    filterSearch\n  } = _ref3;\n  return filters.map((filter, index) => {\n    const key = String(filter.value);\n\n    if (filter.children) {\n      return {\n        key: key || index,\n        label: filter.text,\n        popupClassName: `${prefixCls}-dropdown-submenu`,\n        children: renderFilterItems({\n          filters: filter.children,\n          prefixCls,\n          filteredKeys,\n          filterMultiple,\n          searchValue,\n          filterSearch\n        })\n      };\n    }\n\n    const Component = filterMultiple ? Checkbox : Radio;\n    const item = {\n      key: filter.value !== undefined ? key : index,\n      label: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Component, {\n        checked: filteredKeys.includes(key)\n      }), /*#__PURE__*/React.createElement(\"span\", null, filter.text))\n    };\n\n    if (searchValue.trim()) {\n      if (typeof filterSearch === 'function') {\n        return filterSearch(searchValue, filter) ? item : null;\n      }\n\n      return searchValueMatched(searchValue, filter.text) ? item : null;\n    }\n\n    return item;\n  });\n}\n\nfunction FilterDropdown(props) {\n  var _a, _b;\n\n  const {\n    tablePrefixCls,\n    prefixCls,\n    column,\n    dropdownPrefixCls,\n    columnKey,\n    filterMultiple,\n    filterMode = 'menu',\n    filterSearch = false,\n    filterState,\n    triggerFilter,\n    locale,\n    children,\n    getPopupContainer\n  } = props;\n  const {\n    filterDropdownOpen,\n    onFilterDropdownOpenChange,\n    filterResetToDefaultFilteredValue,\n    defaultFilteredValue,\n    // Deprecated\n    filterDropdownVisible,\n    onFilterDropdownVisibleChange\n  } = column;\n  const [visible, setVisible] = React.useState(false);\n  const filtered = !!(filterState && (((_a = filterState.filteredKeys) === null || _a === void 0 ? void 0 : _a.length) || filterState.forceFiltered));\n\n  const triggerVisible = newVisible => {\n    setVisible(newVisible);\n    onFilterDropdownOpenChange === null || onFilterDropdownOpenChange === void 0 ? void 0 : onFilterDropdownOpenChange(newVisible);\n    onFilterDropdownVisibleChange === null || onFilterDropdownVisibleChange === void 0 ? void 0 : onFilterDropdownVisibleChange(newVisible);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Table');\n    [['filterDropdownVisible', 'filterDropdownOpen', filterDropdownVisible], ['onFilterDropdownVisibleChange', 'onFilterDropdownOpenChange', onFilterDropdownVisibleChange]].forEach(_ref4 => {\n      let [deprecatedName, newName, prop] = _ref4;\n      warning.deprecated(prop === undefined || prop === null, deprecatedName, newName);\n    });\n  }\n\n  const mergedVisible = (_b = filterDropdownOpen !== null && filterDropdownOpen !== void 0 ? filterDropdownOpen : filterDropdownVisible) !== null && _b !== void 0 ? _b : visible; // ===================== Select Keys =====================\n\n  const propFilteredKeys = filterState === null || filterState === void 0 ? void 0 : filterState.filteredKeys;\n  const [getFilteredKeysSync, setFilteredKeysSync] = useSyncState(propFilteredKeys || []);\n\n  const onSelectKeys = _ref5 => {\n    let {\n      selectedKeys\n    } = _ref5;\n    setFilteredKeysSync(selectedKeys);\n  };\n\n  const onCheck = (keys, _ref6) => {\n    let {\n      node,\n      checked\n    } = _ref6;\n\n    if (!filterMultiple) {\n      onSelectKeys({\n        selectedKeys: checked && node.key ? [node.key] : []\n      });\n    } else {\n      onSelectKeys({\n        selectedKeys: keys\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    onSelectKeys({\n      selectedKeys: propFilteredKeys || []\n    });\n  }, [propFilteredKeys]); // ====================== Open Keys ======================\n\n  const [openKeys, setOpenKeys] = React.useState([]);\n\n  const onOpenChange = keys => {\n    setOpenKeys(keys);\n  }; // search in tree mode column filter\n\n\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const onSearch = e => {\n    const {\n      value\n    } = e.target;\n    setSearchValue(value);\n  }; // clear search value after close filter dropdown\n\n\n  React.useEffect(() => {\n    if (!visible) {\n      setSearchValue('');\n    }\n  }, [visible]); // ======================= Submit ========================\n\n  const internalTriggerFilter = keys => {\n    const mergedKeys = keys && keys.length ? keys : null;\n\n    if (mergedKeys === null && (!filterState || !filterState.filteredKeys)) {\n      return null;\n    }\n\n    if (isEqual(mergedKeys, filterState === null || filterState === void 0 ? void 0 : filterState.filteredKeys, true)) {\n      return null;\n    }\n\n    triggerFilter({\n      column,\n      key: columnKey,\n      filteredKeys: mergedKeys\n    });\n  };\n\n  const onConfirm = () => {\n    triggerVisible(false);\n    internalTriggerFilter(getFilteredKeysSync());\n  };\n\n  const onReset = function () {\n    let {\n      confirm,\n      closeDropdown\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      confirm: false,\n      closeDropdown: false\n    };\n\n    if (confirm) {\n      internalTriggerFilter([]);\n    }\n\n    if (closeDropdown) {\n      triggerVisible(false);\n    }\n\n    setSearchValue('');\n\n    if (filterResetToDefaultFilteredValue) {\n      setFilteredKeysSync((defaultFilteredValue || []).map(key => String(key)));\n    } else {\n      setFilteredKeysSync([]);\n    }\n  };\n\n  const doFilter = function () {\n    let {\n      closeDropdown\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      closeDropdown: true\n    };\n\n    if (closeDropdown) {\n      triggerVisible(false);\n    }\n\n    internalTriggerFilter(getFilteredKeysSync());\n  };\n\n  const onVisibleChange = newVisible => {\n    if (newVisible && propFilteredKeys !== undefined) {\n      // Sync filteredKeys on appear in controlled mode (propFilteredKeys !== undefined)\n      setFilteredKeysSync(propFilteredKeys || []);\n    }\n\n    triggerVisible(newVisible); // Default will filter when closed\n\n    if (!newVisible && !column.filterDropdown) {\n      onConfirm();\n    }\n  }; // ======================== Style ========================\n\n\n  const dropdownMenuClass = classNames({\n    [`${dropdownPrefixCls}-menu-without-submenu`]: !hasSubMenu(column.filters || [])\n  });\n\n  const onCheckAll = e => {\n    if (e.target.checked) {\n      const allFilterKeys = flattenKeys(column === null || column === void 0 ? void 0 : column.filters).map(key => String(key));\n      setFilteredKeysSync(allFilterKeys);\n    } else {\n      setFilteredKeysSync([]);\n    }\n  };\n\n  const getTreeData = _ref7 => {\n    let {\n      filters\n    } = _ref7;\n    return (filters || []).map((filter, index) => {\n      const key = String(filter.value);\n      const item = {\n        title: filter.text,\n        key: filter.value !== undefined ? key : index\n      };\n\n      if (filter.children) {\n        item.children = getTreeData({\n          filters: filter.children\n        });\n      }\n\n      return item;\n    });\n  };\n\n  const getFilterData = node => {\n    var _a;\n\n    return Object.assign(Object.assign({}, node), {\n      text: node.title,\n      value: node.key,\n      children: ((_a = node.children) === null || _a === void 0 ? void 0 : _a.map(item => getFilterData(item))) || []\n    });\n  };\n\n  let dropdownContent;\n\n  if (typeof column.filterDropdown === 'function') {\n    dropdownContent = column.filterDropdown({\n      prefixCls: `${dropdownPrefixCls}-custom`,\n      setSelectedKeys: selectedKeys => onSelectKeys({\n        selectedKeys\n      }),\n      selectedKeys: getFilteredKeysSync(),\n      confirm: doFilter,\n      clearFilters: onReset,\n      filters: column.filters,\n      visible: mergedVisible,\n      close: () => {\n        triggerVisible(false);\n      }\n    });\n  } else if (column.filterDropdown) {\n    dropdownContent = column.filterDropdown;\n  } else {\n    const selectedKeys = getFilteredKeysSync() || [];\n\n    const getFilterComponent = () => {\n      if ((column.filters || []).length === 0) {\n        return /*#__PURE__*/React.createElement(Empty, {\n          image: Empty.PRESENTED_IMAGE_SIMPLE,\n          description: locale.filterEmptyText,\n          imageStyle: {\n            height: 24\n          },\n          style: {\n            margin: 0,\n            padding: '16px 0'\n          }\n        });\n      }\n\n      if (filterMode === 'tree') {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FilterSearch, {\n          filterSearch: filterSearch,\n          value: searchValue,\n          onChange: onSearch,\n          tablePrefixCls: tablePrefixCls,\n          locale: locale\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: `${tablePrefixCls}-filter-dropdown-tree`\n        }, filterMultiple ? /*#__PURE__*/React.createElement(Checkbox, {\n          checked: selectedKeys.length === flattenKeys(column.filters).length,\n          indeterminate: selectedKeys.length > 0 && selectedKeys.length < flattenKeys(column.filters).length,\n          className: `${tablePrefixCls}-filter-dropdown-checkall`,\n          onChange: onCheckAll\n        }, locale.filterCheckall) : null, /*#__PURE__*/React.createElement(Tree, {\n          checkable: true,\n          selectable: false,\n          blockNode: true,\n          multiple: filterMultiple,\n          checkStrictly: !filterMultiple,\n          className: `${dropdownPrefixCls}-menu`,\n          onCheck: onCheck,\n          checkedKeys: selectedKeys,\n          selectedKeys: selectedKeys,\n          showIcon: false,\n          treeData: getTreeData({\n            filters: column.filters\n          }),\n          autoExpandParent: true,\n          defaultExpandAll: true,\n          filterTreeNode: searchValue.trim() ? node => {\n            if (typeof filterSearch === 'function') {\n              return filterSearch(searchValue, getFilterData(node));\n            }\n\n            return searchValueMatched(searchValue, node.title);\n          } : undefined\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FilterSearch, {\n        filterSearch: filterSearch,\n        value: searchValue,\n        onChange: onSearch,\n        tablePrefixCls: tablePrefixCls,\n        locale: locale\n      }), /*#__PURE__*/React.createElement(Menu, {\n        selectable: true,\n        multiple: filterMultiple,\n        prefixCls: `${dropdownPrefixCls}-menu`,\n        className: dropdownMenuClass,\n        onSelect: onSelectKeys,\n        onDeselect: onSelectKeys,\n        selectedKeys: selectedKeys,\n        getPopupContainer: getPopupContainer,\n        openKeys: openKeys,\n        onOpenChange: onOpenChange,\n        items: renderFilterItems({\n          filters: column.filters || [],\n          filterSearch,\n          prefixCls,\n          filteredKeys: getFilteredKeysSync(),\n          filterMultiple,\n          searchValue\n        })\n      }));\n    };\n\n    const getResetDisabled = () => {\n      if (filterResetToDefaultFilteredValue) {\n        return isEqual((defaultFilteredValue || []).map(key => String(key)), selectedKeys, true);\n      }\n\n      return selectedKeys.length === 0;\n    };\n\n    dropdownContent = /*#__PURE__*/React.createElement(React.Fragment, null, getFilterComponent(), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-dropdown-btns`\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      size: \"small\",\n      disabled: getResetDisabled(),\n      onClick: () => onReset()\n    }, locale.filterReset), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: onConfirm\n    }, locale.filterConfirm)));\n  } // We should not block customize Menu with additional props\n\n\n  if (column.filterDropdown) {\n    dropdownContent = /*#__PURE__*/React.createElement(OverrideProvider, {\n      selectable: undefined\n    }, dropdownContent);\n  }\n\n  const menu = () => /*#__PURE__*/React.createElement(FilterDropdownMenuWrapper, {\n    className: `${prefixCls}-dropdown`\n  }, dropdownContent);\n\n  let filterIcon;\n\n  if (typeof column.filterIcon === 'function') {\n    filterIcon = column.filterIcon(filtered);\n  } else if (column.filterIcon) {\n    filterIcon = column.filterIcon;\n  } else {\n    filterIcon = /*#__PURE__*/React.createElement(FilterFilled, null);\n  }\n\n  const {\n    direction\n  } = React.useContext(ConfigContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-column`\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${tablePrefixCls}-column-title`\n  }, children), /*#__PURE__*/React.createElement(Dropdown, {\n    dropdownRender: menu,\n    trigger: ['click'],\n    open: mergedVisible,\n    onOpenChange: onVisibleChange,\n    getPopupContainer: getPopupContainer,\n    placement: direction === 'rtl' ? 'bottomLeft' : 'bottomRight'\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"button\",\n    tabIndex: -1,\n    className: classNames(`${prefixCls}-trigger`, {\n      active: filtered\n    }),\n    onClick: e => {\n      e.stopPropagation();\n    }\n  }, filterIcon)));\n}\n\nexport default FilterDropdown;","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/table/hooks/useFilter/FilterDropdown.js"],"names":["_toConsumableArray","React","FilterFilled","classNames","isEqual","useSyncState","devUseWarning","Button","Checkbox","ConfigContext","Dropdown","Empty","Menu","OverrideProvider","Radio","Tree","FilterSearch","FilterDropdownMenuWrapper","flattenKeys","filters","keys","forEach","_ref","value","children","push","concat","hasSubMenu","some","_ref2","searchValueMatched","searchValue","text","toString","toLowerCase","includes","trim","renderFilterItems","_ref3","prefixCls","filteredKeys","filterMultiple","filterSearch","map","filter","index","key","String","label","popupClassName","Component","item","undefined","createElement","Fragment","checked","FilterDropdown","props","_a","_b","tablePrefixCls","column","dropdownPrefixCls","columnKey","filterMode","filterState","triggerFilter","locale","getPopupContainer","filterDropdownOpen","onFilterDropdownOpenChange","filterResetToDefaultFilteredValue","defaultFilteredValue","filterDropdownVisible","onFilterDropdownVisibleChange","visible","setVisible","useState","filtered","length","forceFiltered","triggerVisible","newVisible","process","env","NODE_ENV","warning","_ref4","deprecatedName","newName","prop","deprecated","mergedVisible","propFilteredKeys","getFilteredKeysSync","setFilteredKeysSync","onSelectKeys","_ref5","selectedKeys","onCheck","_ref6","node","useEffect","openKeys","setOpenKeys","onOpenChange","setSearchValue","onSearch","e","target","internalTriggerFilter","mergedKeys","onConfirm","onReset","confirm","closeDropdown","arguments","doFilter","onVisibleChange","filterDropdown","dropdownMenuClass","onCheckAll","allFilterKeys","getTreeData","_ref7","title","getFilterData","Object","assign","dropdownContent","setSelectedKeys","clearFilters","close","getFilterComponent","image","PRESENTED_IMAGE_SIMPLE","description","filterEmptyText","imageStyle","height","style","margin","padding","onChange","className","indeterminate","filterCheckall","checkable","selectable","blockNode","multiple","checkStrictly","checkedKeys","showIcon","treeData","autoExpandParent","defaultExpandAll","filterTreeNode","onSelect","onDeselect","items","getResetDisabled","type","size","disabled","onClick","filterReset","filterConfirm","menu","filterIcon","direction","useContext","dropdownRender","trigger","open","placement","role","tabIndex","active","stopPropagation"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport FilterFilled from \"@ant-design/icons/es/icons/FilterFilled\";\nimport classNames from 'classnames';\nimport isEqual from \"rc-util/es/isEqual\";\nimport useSyncState from '../../../_util/hooks/useSyncState';\nimport { devUseWarning } from '../../../_util/warning';\nimport Button from '../../../button';\nimport Checkbox from '../../../checkbox';\nimport { ConfigContext } from '../../../config-provider/context';\nimport Dropdown from '../../../dropdown';\nimport Empty from '../../../empty';\nimport Menu from '../../../menu';\nimport { OverrideProvider } from '../../../menu/OverrideContext';\nimport Radio from '../../../radio';\nimport Tree from '../../../tree';\nimport FilterSearch from './FilterSearch';\nimport FilterDropdownMenuWrapper from './FilterWrapper';\nexport function flattenKeys(filters) {\n  let keys = [];\n  (filters || []).forEach(_ref => {\n    let {\n      value,\n      children\n    } = _ref;\n    keys.push(value);\n    if (children) {\n      keys = [].concat(_toConsumableArray(keys), _toConsumableArray(flattenKeys(children)));\n    }\n  });\n  return keys;\n}\nfunction hasSubMenu(filters) {\n  return filters.some(_ref2 => {\n    let {\n      children\n    } = _ref2;\n    return children;\n  });\n}\nfunction searchValueMatched(searchValue, text) {\n  if (typeof text === 'string' || typeof text === 'number') {\n    return text === null || text === void 0 ? void 0 : text.toString().toLowerCase().includes(searchValue.trim().toLowerCase());\n  }\n  return false;\n}\nfunction renderFilterItems(_ref3) {\n  let {\n    filters,\n    prefixCls,\n    filteredKeys,\n    filterMultiple,\n    searchValue,\n    filterSearch\n  } = _ref3;\n  return filters.map((filter, index) => {\n    const key = String(filter.value);\n    if (filter.children) {\n      return {\n        key: key || index,\n        label: filter.text,\n        popupClassName: `${prefixCls}-dropdown-submenu`,\n        children: renderFilterItems({\n          filters: filter.children,\n          prefixCls,\n          filteredKeys,\n          filterMultiple,\n          searchValue,\n          filterSearch\n        })\n      };\n    }\n    const Component = filterMultiple ? Checkbox : Radio;\n    const item = {\n      key: filter.value !== undefined ? key : index,\n      label: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Component, {\n        checked: filteredKeys.includes(key)\n      }), /*#__PURE__*/React.createElement(\"span\", null, filter.text))\n    };\n    if (searchValue.trim()) {\n      if (typeof filterSearch === 'function') {\n        return filterSearch(searchValue, filter) ? item : null;\n      }\n      return searchValueMatched(searchValue, filter.text) ? item : null;\n    }\n    return item;\n  });\n}\nfunction FilterDropdown(props) {\n  var _a, _b;\n  const {\n    tablePrefixCls,\n    prefixCls,\n    column,\n    dropdownPrefixCls,\n    columnKey,\n    filterMultiple,\n    filterMode = 'menu',\n    filterSearch = false,\n    filterState,\n    triggerFilter,\n    locale,\n    children,\n    getPopupContainer\n  } = props;\n  const {\n    filterDropdownOpen,\n    onFilterDropdownOpenChange,\n    filterResetToDefaultFilteredValue,\n    defaultFilteredValue,\n    // Deprecated\n    filterDropdownVisible,\n    onFilterDropdownVisibleChange\n  } = column;\n  const [visible, setVisible] = React.useState(false);\n  const filtered = !!(filterState && (((_a = filterState.filteredKeys) === null || _a === void 0 ? void 0 : _a.length) || filterState.forceFiltered));\n  const triggerVisible = newVisible => {\n    setVisible(newVisible);\n    onFilterDropdownOpenChange === null || onFilterDropdownOpenChange === void 0 ? void 0 : onFilterDropdownOpenChange(newVisible);\n    onFilterDropdownVisibleChange === null || onFilterDropdownVisibleChange === void 0 ? void 0 : onFilterDropdownVisibleChange(newVisible);\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Table');\n    [['filterDropdownVisible', 'filterDropdownOpen', filterDropdownVisible], ['onFilterDropdownVisibleChange', 'onFilterDropdownOpenChange', onFilterDropdownVisibleChange]].forEach(_ref4 => {\n      let [deprecatedName, newName, prop] = _ref4;\n      warning.deprecated(prop === undefined || prop === null, deprecatedName, newName);\n    });\n  }\n  const mergedVisible = (_b = filterDropdownOpen !== null && filterDropdownOpen !== void 0 ? filterDropdownOpen : filterDropdownVisible) !== null && _b !== void 0 ? _b : visible;\n  // ===================== Select Keys =====================\n  const propFilteredKeys = filterState === null || filterState === void 0 ? void 0 : filterState.filteredKeys;\n  const [getFilteredKeysSync, setFilteredKeysSync] = useSyncState(propFilteredKeys || []);\n  const onSelectKeys = _ref5 => {\n    let {\n      selectedKeys\n    } = _ref5;\n    setFilteredKeysSync(selectedKeys);\n  };\n  const onCheck = (keys, _ref6) => {\n    let {\n      node,\n      checked\n    } = _ref6;\n    if (!filterMultiple) {\n      onSelectKeys({\n        selectedKeys: checked && node.key ? [node.key] : []\n      });\n    } else {\n      onSelectKeys({\n        selectedKeys: keys\n      });\n    }\n  };\n  React.useEffect(() => {\n    if (!visible) {\n      return;\n    }\n    onSelectKeys({\n      selectedKeys: propFilteredKeys || []\n    });\n  }, [propFilteredKeys]);\n  // ====================== Open Keys ======================\n  const [openKeys, setOpenKeys] = React.useState([]);\n  const onOpenChange = keys => {\n    setOpenKeys(keys);\n  };\n  // search in tree mode column filter\n  const [searchValue, setSearchValue] = React.useState('');\n  const onSearch = e => {\n    const {\n      value\n    } = e.target;\n    setSearchValue(value);\n  };\n  // clear search value after close filter dropdown\n  React.useEffect(() => {\n    if (!visible) {\n      setSearchValue('');\n    }\n  }, [visible]);\n  // ======================= Submit ========================\n  const internalTriggerFilter = keys => {\n    const mergedKeys = keys && keys.length ? keys : null;\n    if (mergedKeys === null && (!filterState || !filterState.filteredKeys)) {\n      return null;\n    }\n    if (isEqual(mergedKeys, filterState === null || filterState === void 0 ? void 0 : filterState.filteredKeys, true)) {\n      return null;\n    }\n    triggerFilter({\n      column,\n      key: columnKey,\n      filteredKeys: mergedKeys\n    });\n  };\n  const onConfirm = () => {\n    triggerVisible(false);\n    internalTriggerFilter(getFilteredKeysSync());\n  };\n  const onReset = function () {\n    let {\n      confirm,\n      closeDropdown\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      confirm: false,\n      closeDropdown: false\n    };\n    if (confirm) {\n      internalTriggerFilter([]);\n    }\n    if (closeDropdown) {\n      triggerVisible(false);\n    }\n    setSearchValue('');\n    if (filterResetToDefaultFilteredValue) {\n      setFilteredKeysSync((defaultFilteredValue || []).map(key => String(key)));\n    } else {\n      setFilteredKeysSync([]);\n    }\n  };\n  const doFilter = function () {\n    let {\n      closeDropdown\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      closeDropdown: true\n    };\n    if (closeDropdown) {\n      triggerVisible(false);\n    }\n    internalTriggerFilter(getFilteredKeysSync());\n  };\n  const onVisibleChange = newVisible => {\n    if (newVisible && propFilteredKeys !== undefined) {\n      // Sync filteredKeys on appear in controlled mode (propFilteredKeys !== undefined)\n      setFilteredKeysSync(propFilteredKeys || []);\n    }\n    triggerVisible(newVisible);\n    // Default will filter when closed\n    if (!newVisible && !column.filterDropdown) {\n      onConfirm();\n    }\n  };\n  // ======================== Style ========================\n  const dropdownMenuClass = classNames({\n    [`${dropdownPrefixCls}-menu-without-submenu`]: !hasSubMenu(column.filters || [])\n  });\n  const onCheckAll = e => {\n    if (e.target.checked) {\n      const allFilterKeys = flattenKeys(column === null || column === void 0 ? void 0 : column.filters).map(key => String(key));\n      setFilteredKeysSync(allFilterKeys);\n    } else {\n      setFilteredKeysSync([]);\n    }\n  };\n  const getTreeData = _ref7 => {\n    let {\n      filters\n    } = _ref7;\n    return (filters || []).map((filter, index) => {\n      const key = String(filter.value);\n      const item = {\n        title: filter.text,\n        key: filter.value !== undefined ? key : index\n      };\n      if (filter.children) {\n        item.children = getTreeData({\n          filters: filter.children\n        });\n      }\n      return item;\n    });\n  };\n  const getFilterData = node => {\n    var _a;\n    return Object.assign(Object.assign({}, node), {\n      text: node.title,\n      value: node.key,\n      children: ((_a = node.children) === null || _a === void 0 ? void 0 : _a.map(item => getFilterData(item))) || []\n    });\n  };\n  let dropdownContent;\n  if (typeof column.filterDropdown === 'function') {\n    dropdownContent = column.filterDropdown({\n      prefixCls: `${dropdownPrefixCls}-custom`,\n      setSelectedKeys: selectedKeys => onSelectKeys({\n        selectedKeys\n      }),\n      selectedKeys: getFilteredKeysSync(),\n      confirm: doFilter,\n      clearFilters: onReset,\n      filters: column.filters,\n      visible: mergedVisible,\n      close: () => {\n        triggerVisible(false);\n      }\n    });\n  } else if (column.filterDropdown) {\n    dropdownContent = column.filterDropdown;\n  } else {\n    const selectedKeys = getFilteredKeysSync() || [];\n    const getFilterComponent = () => {\n      if ((column.filters || []).length === 0) {\n        return /*#__PURE__*/React.createElement(Empty, {\n          image: Empty.PRESENTED_IMAGE_SIMPLE,\n          description: locale.filterEmptyText,\n          imageStyle: {\n            height: 24\n          },\n          style: {\n            margin: 0,\n            padding: '16px 0'\n          }\n        });\n      }\n      if (filterMode === 'tree') {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FilterSearch, {\n          filterSearch: filterSearch,\n          value: searchValue,\n          onChange: onSearch,\n          tablePrefixCls: tablePrefixCls,\n          locale: locale\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: `${tablePrefixCls}-filter-dropdown-tree`\n        }, filterMultiple ? /*#__PURE__*/React.createElement(Checkbox, {\n          checked: selectedKeys.length === flattenKeys(column.filters).length,\n          indeterminate: selectedKeys.length > 0 && selectedKeys.length < flattenKeys(column.filters).length,\n          className: `${tablePrefixCls}-filter-dropdown-checkall`,\n          onChange: onCheckAll\n        }, locale.filterCheckall) : null, /*#__PURE__*/React.createElement(Tree, {\n          checkable: true,\n          selectable: false,\n          blockNode: true,\n          multiple: filterMultiple,\n          checkStrictly: !filterMultiple,\n          className: `${dropdownPrefixCls}-menu`,\n          onCheck: onCheck,\n          checkedKeys: selectedKeys,\n          selectedKeys: selectedKeys,\n          showIcon: false,\n          treeData: getTreeData({\n            filters: column.filters\n          }),\n          autoExpandParent: true,\n          defaultExpandAll: true,\n          filterTreeNode: searchValue.trim() ? node => {\n            if (typeof filterSearch === 'function') {\n              return filterSearch(searchValue, getFilterData(node));\n            }\n            return searchValueMatched(searchValue, node.title);\n          } : undefined\n        })));\n      }\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FilterSearch, {\n        filterSearch: filterSearch,\n        value: searchValue,\n        onChange: onSearch,\n        tablePrefixCls: tablePrefixCls,\n        locale: locale\n      }), /*#__PURE__*/React.createElement(Menu, {\n        selectable: true,\n        multiple: filterMultiple,\n        prefixCls: `${dropdownPrefixCls}-menu`,\n        className: dropdownMenuClass,\n        onSelect: onSelectKeys,\n        onDeselect: onSelectKeys,\n        selectedKeys: selectedKeys,\n        getPopupContainer: getPopupContainer,\n        openKeys: openKeys,\n        onOpenChange: onOpenChange,\n        items: renderFilterItems({\n          filters: column.filters || [],\n          filterSearch,\n          prefixCls,\n          filteredKeys: getFilteredKeysSync(),\n          filterMultiple,\n          searchValue\n        })\n      }));\n    };\n    const getResetDisabled = () => {\n      if (filterResetToDefaultFilteredValue) {\n        return isEqual((defaultFilteredValue || []).map(key => String(key)), selectedKeys, true);\n      }\n      return selectedKeys.length === 0;\n    };\n    dropdownContent = /*#__PURE__*/React.createElement(React.Fragment, null, getFilterComponent(), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-dropdown-btns`\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      size: \"small\",\n      disabled: getResetDisabled(),\n      onClick: () => onReset()\n    }, locale.filterReset), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: onConfirm\n    }, locale.filterConfirm)));\n  }\n  // We should not block customize Menu with additional props\n  if (column.filterDropdown) {\n    dropdownContent = /*#__PURE__*/React.createElement(OverrideProvider, {\n      selectable: undefined\n    }, dropdownContent);\n  }\n  const menu = () => /*#__PURE__*/React.createElement(FilterDropdownMenuWrapper, {\n    className: `${prefixCls}-dropdown`\n  }, dropdownContent);\n  let filterIcon;\n  if (typeof column.filterIcon === 'function') {\n    filterIcon = column.filterIcon(filtered);\n  } else if (column.filterIcon) {\n    filterIcon = column.filterIcon;\n  } else {\n    filterIcon = /*#__PURE__*/React.createElement(FilterFilled, null);\n  }\n  const {\n    direction\n  } = React.useContext(ConfigContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-column`\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${tablePrefixCls}-column-title`\n  }, children), /*#__PURE__*/React.createElement(Dropdown, {\n    dropdownRender: menu,\n    trigger: ['click'],\n    open: mergedVisible,\n    onOpenChange: onVisibleChange,\n    getPopupContainer: getPopupContainer,\n    placement: direction === 'rtl' ? 'bottomLeft' : 'bottomRight'\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"button\",\n    tabIndex: -1,\n    className: classNames(`${prefixCls}-trigger`, {\n      active: filtered\n    }),\n    onClick: e => {\n      e.stopPropagation();\n    }\n  }, filterIcon)));\n}\nexport default FilterDropdown;"]},"metadata":{},"sourceType":"module"}