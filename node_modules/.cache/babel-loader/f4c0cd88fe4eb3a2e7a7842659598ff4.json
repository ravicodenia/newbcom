{"ast":null,"code":"\"use client\";\n\nimport React from 'react';\nimport HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport initCollapseMotion from '../_util/motion';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport SwitcherIconCom from './utils/iconUtil';\nconst Tree = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    getPrefixCls,\n    direction,\n    virtual,\n    tree\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    showIcon = false,\n    showLine,\n    switcherIcon,\n    blockNode = false,\n    children,\n    checkable = false,\n    selectable = true,\n    draggable,\n    motion: customMotion,\n    style\n  } = props;\n  const prefixCls = getPrefixCls('tree', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const motion = customMotion !== null && customMotion !== void 0 ? customMotion : Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n  const newProps = Object.assign(Object.assign({}, props), {\n    checkable,\n    selectable,\n    showIcon,\n    motion,\n    blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender\n  });\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const draggableConfig = React.useMemo(() => {\n    if (!draggable) {\n      return false;\n    }\n\n    let mergedDraggable = {};\n\n    switch (typeof draggable) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n\n      case 'object':\n        mergedDraggable = Object.assign({}, draggable);\n        break;\n\n      default:\n        break;\n      // Do nothing\n    }\n\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n\n    return mergedDraggable;\n  }, [draggable]);\n\n  const renderSwitcherIcon = nodeProps => /*#__PURE__*/React.createElement(SwitcherIconCom, {\n    prefixCls: prefixCls,\n    switcherIcon: switcherIcon,\n    treeNodeProps: nodeProps,\n    showLine: showLine\n  });\n\n  return wrapSSR( /*#__PURE__*/React.createElement(RcTree, Object.assign({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    // newProps may contain style so declare style below it\n    style: Object.assign(Object.assign({}, tree === null || tree === void 0 ? void 0 : tree.style), style),\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-icon-hide`]: !showIcon,\n      [`${prefixCls}-block-node`]: blockNode,\n      [`${prefixCls}-unselectable`]: !selectable,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, tree === null || tree === void 0 ? void 0 : tree.className, className, hashId),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-checkbox-inner`\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: renderSwitcherIcon,\n    draggable: draggableConfig\n  }), children));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Tree.displayName = 'Tree';\n}\n\nexport default Tree;","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/tree/Tree.js"],"names":["React","HolderOutlined","classNames","RcTree","initCollapseMotion","ConfigContext","useStyle","dropIndicatorRender","SwitcherIconCom","Tree","forwardRef","props","ref","getPrefixCls","direction","virtual","tree","useContext","prefixCls","customizePrefixCls","className","showIcon","showLine","switcherIcon","blockNode","children","checkable","selectable","draggable","motion","customMotion","style","rootPrefixCls","Object","assign","motionAppear","newProps","Boolean","wrapSSR","hashId","draggableConfig","useMemo","mergedDraggable","nodeDraggable","icon","createElement","renderSwitcherIcon","nodeProps","treeNodeProps","itemHeight","process","env","NODE_ENV","displayName"],"mappings":"AAAA;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,kBAAP,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,MAAMC,IAAI,GAAG,aAAaT,KAAK,CAACU,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzD,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA;AAJI,MAKFhB,KAAK,CAACiB,UAAN,CAAiBZ,aAAjB,CALJ;AAMA,QAAM;AACJa,IAAAA,SAAS,EAAEC,kBADP;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,QAAQ,GAAG,KAHP;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,SAAS,GAAG,KANR;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,SAAS,GAAG,KARR;AASJC,IAAAA,UAAU,GAAG,IATT;AAUJC,IAAAA,SAVI;AAWJC,IAAAA,MAAM,EAAEC,YAXJ;AAYJC,IAAAA;AAZI,MAaFpB,KAbJ;AAcA,QAAMO,SAAS,GAAGL,YAAY,CAAC,MAAD,EAASM,kBAAT,CAA9B;AACA,QAAMa,aAAa,GAAGnB,YAAY,EAAlC;AACA,QAAMgB,MAAM,GAAGC,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmDA,YAAnD,GAAkEG,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB9B,kBAAkB,CAAC4B,aAAD,CAApC,CAAd,EAAoE;AACnJG,IAAAA,YAAY,EAAE;AADqI,GAApE,CAAjF;AAGA,QAAMC,QAAQ,GAAGH,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvB,KAAlB,CAAd,EAAwC;AACvDe,IAAAA,SADuD;AAEvDC,IAAAA,UAFuD;AAGvDN,IAAAA,QAHuD;AAIvDQ,IAAAA,MAJuD;AAKvDL,IAAAA,SALuD;AAMvDF,IAAAA,QAAQ,EAAEe,OAAO,CAACf,QAAD,CANsC;AAOvDf,IAAAA;AAPuD,GAAxC,CAAjB;AASA,QAAM,CAAC+B,OAAD,EAAUC,MAAV,IAAoBjC,QAAQ,CAACY,SAAD,CAAlC;AACA,QAAMsB,eAAe,GAAGxC,KAAK,CAACyC,OAAN,CAAc,MAAM;AAC1C,QAAI,CAACb,SAAL,EAAgB;AACd,aAAO,KAAP;AACD;;AACD,QAAIc,eAAe,GAAG,EAAtB;;AACA,YAAQ,OAAOd,SAAf;AACE,WAAK,UAAL;AACEc,QAAAA,eAAe,CAACC,aAAhB,GAAgCf,SAAhC;AACA;;AACF,WAAK,QAAL;AACEc,QAAAA,eAAe,GAAGT,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,SAAlB,CAAlB;AACA;;AACF;AACE;AACF;AATF;;AAYA,QAAIc,eAAe,CAACE,IAAhB,KAAyB,KAA7B,EAAoC;AAClCF,MAAAA,eAAe,CAACE,IAAhB,GAAuBF,eAAe,CAACE,IAAhB,IAAwB,aAAa5C,KAAK,CAAC6C,aAAN,CAAoB5C,cAApB,EAAoC,IAApC,CAA5D;AACD;;AACD,WAAOyC,eAAP;AACD,GArBuB,EAqBrB,CAACd,SAAD,CArBqB,CAAxB;;AAsBA,QAAMkB,kBAAkB,GAAGC,SAAS,IAAI,aAAa/C,KAAK,CAAC6C,aAAN,CAAoBrC,eAApB,EAAqC;AACxFU,IAAAA,SAAS,EAAEA,SAD6E;AAExFK,IAAAA,YAAY,EAAEA,YAF0E;AAGxFyB,IAAAA,aAAa,EAAED,SAHyE;AAIxFzB,IAAAA,QAAQ,EAAEA;AAJ8E,GAArC,CAArD;;AAMA,SAAOgB,OAAO,EAAE,aAAatC,KAAK,CAAC6C,aAAN,CAAoB1C,MAApB,EAA4B8B,MAAM,CAACC,MAAP,CAAc;AACrEe,IAAAA,UAAU,EAAE,EADyD;AAErErC,IAAAA,GAAG,EAAEA,GAFgE;AAGrEG,IAAAA,OAAO,EAAEA;AAH4D,GAAd,EAItDqB,QAJsD,EAI5C;AACX;AACAL,IAAAA,KAAK,EAAEE,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBlB,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACe,KAAnE,CAAd,EAAyFA,KAAzF,CAFI;AAGXb,IAAAA,SAAS,EAAEA,SAHA;AAIXE,IAAAA,SAAS,EAAElB,UAAU,CAAC;AACpB,OAAE,GAAEgB,SAAU,YAAd,GAA4B,CAACG,QADT;AAEpB,OAAE,GAAEH,SAAU,aAAd,GAA6BM,SAFT;AAGpB,OAAE,GAAEN,SAAU,eAAd,GAA+B,CAACS,UAHZ;AAIpB,OAAE,GAAET,SAAU,MAAd,GAAsBJ,SAAS,KAAK;AAJhB,KAAD,EAKlBE,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACI,SAL/B,EAK0CA,SAL1C,EAKqDmB,MALrD,CAJV;AAUXzB,IAAAA,SAAS,EAAEA,SAVA;AAWXY,IAAAA,SAAS,EAAEA,SAAS,GAAG,aAAa1B,KAAK,CAAC6C,aAAN,CAAoB,MAApB,EAA4B;AAC9DzB,MAAAA,SAAS,EAAG,GAAEF,SAAU;AADsC,KAA5B,CAAhB,GAEfQ,SAbM;AAcXC,IAAAA,UAAU,EAAEA,UAdD;AAeXJ,IAAAA,YAAY,EAAEuB,kBAfH;AAgBXlB,IAAAA,SAAS,EAAEY;AAhBA,GAJ4C,CAA5B,EAqBzBf,QArByB,CAAf,CAAd;AAsBD,CAtFyB,CAA1B;;AAuFA,IAAIyB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC3C,EAAAA,IAAI,CAAC4C,WAAL,GAAmB,MAAnB;AACD;;AACD,eAAe5C,IAAf","sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport initCollapseMotion from '../_util/motion';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport SwitcherIconCom from './utils/iconUtil';\nconst Tree = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    getPrefixCls,\n    direction,\n    virtual,\n    tree\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    showIcon = false,\n    showLine,\n    switcherIcon,\n    blockNode = false,\n    children,\n    checkable = false,\n    selectable = true,\n    draggable,\n    motion: customMotion,\n    style\n  } = props;\n  const prefixCls = getPrefixCls('tree', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const motion = customMotion !== null && customMotion !== void 0 ? customMotion : Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n  const newProps = Object.assign(Object.assign({}, props), {\n    checkable,\n    selectable,\n    showIcon,\n    motion,\n    blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender\n  });\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const draggableConfig = React.useMemo(() => {\n    if (!draggable) {\n      return false;\n    }\n    let mergedDraggable = {};\n    switch (typeof draggable) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n      case 'object':\n        mergedDraggable = Object.assign({}, draggable);\n        break;\n      default:\n        break;\n      // Do nothing\n    }\n\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n    return mergedDraggable;\n  }, [draggable]);\n  const renderSwitcherIcon = nodeProps => /*#__PURE__*/React.createElement(SwitcherIconCom, {\n    prefixCls: prefixCls,\n    switcherIcon: switcherIcon,\n    treeNodeProps: nodeProps,\n    showLine: showLine\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(RcTree, Object.assign({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    // newProps may contain style so declare style below it\n    style: Object.assign(Object.assign({}, tree === null || tree === void 0 ? void 0 : tree.style), style),\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-icon-hide`]: !showIcon,\n      [`${prefixCls}-block-node`]: blockNode,\n      [`${prefixCls}-unselectable`]: !selectable,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, tree === null || tree === void 0 ? void 0 : tree.className, className, hashId),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-checkbox-inner`\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: renderSwitcherIcon,\n    draggable: draggableConfig\n  }), children));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Tree.displayName = 'Tree';\n}\nexport default Tree;"]},"metadata":{},"sourceType":"module"}