{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport classNames from 'classnames';\nimport { useComposeRef } from 'rc-util';\nimport * as React from 'react';\nimport { RefContext } from \"./context\";\n\nvar DrawerPanel = function DrawerPanel(props) {\n  var prefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      containerRef = props.containerRef,\n      id = props.id,\n      onMouseEnter = props.onMouseEnter,\n      onMouseOver = props.onMouseOver,\n      onMouseLeave = props.onMouseLeave,\n      onClick = props.onClick,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp;\n  var eventHandlers = {\n    onMouseEnter: onMouseEnter,\n    onMouseOver: onMouseOver,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp\n  };\n\n  var _React$useContext = React.useContext(RefContext),\n      panelRef = _React$useContext.panel;\n\n  var mergedRef = useComposeRef(panelRef, containerRef); // =============================== Render ===============================\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    className: classNames(\"\".concat(prefixCls, \"-content\"), className),\n    style: _objectSpread({}, style),\n    \"aria-modal\": \"true\",\n    role: \"dialog\",\n    ref: mergedRef\n  }, eventHandlers), children));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  DrawerPanel.displayName = 'DrawerPanel';\n}\n\nexport default DrawerPanel;","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/rc-drawer/es/DrawerPanel.js"],"names":["_extends","_objectSpread","classNames","useComposeRef","React","RefContext","DrawerPanel","props","prefixCls","className","style","children","containerRef","id","onMouseEnter","onMouseOver","onMouseLeave","onClick","onKeyDown","onKeyUp","eventHandlers","_React$useContext","useContext","panelRef","panel","mergedRef","createElement","Fragment","concat","role","ref","process","env","NODE_ENV","displayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,WAA3B;;AACA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC5C,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAAA,MACEC,SAAS,GAAGF,KAAK,CAACE,SADpB;AAAA,MAEEC,KAAK,GAAGH,KAAK,CAACG,KAFhB;AAAA,MAGEC,QAAQ,GAAGJ,KAAK,CAACI,QAHnB;AAAA,MAIEC,YAAY,GAAGL,KAAK,CAACK,YAJvB;AAAA,MAKEC,EAAE,GAAGN,KAAK,CAACM,EALb;AAAA,MAMEC,YAAY,GAAGP,KAAK,CAACO,YANvB;AAAA,MAOEC,WAAW,GAAGR,KAAK,CAACQ,WAPtB;AAAA,MAQEC,YAAY,GAAGT,KAAK,CAACS,YARvB;AAAA,MASEC,OAAO,GAAGV,KAAK,CAACU,OATlB;AAAA,MAUEC,SAAS,GAAGX,KAAK,CAACW,SAVpB;AAAA,MAWEC,OAAO,GAAGZ,KAAK,CAACY,OAXlB;AAYA,MAAIC,aAAa,GAAG;AAClBN,IAAAA,YAAY,EAAEA,YADI;AAElBC,IAAAA,WAAW,EAAEA,WAFK;AAGlBC,IAAAA,YAAY,EAAEA,YAHI;AAIlBC,IAAAA,OAAO,EAAEA,OAJS;AAKlBC,IAAAA,SAAS,EAAEA,SALO;AAMlBC,IAAAA,OAAO,EAAEA;AANS,GAApB;;AAQA,MAAIE,iBAAiB,GAAGjB,KAAK,CAACkB,UAAN,CAAiBjB,UAAjB,CAAxB;AAAA,MACEkB,QAAQ,GAAGF,iBAAiB,CAACG,KAD/B;;AAEA,MAAIC,SAAS,GAAGtB,aAAa,CAACoB,QAAD,EAAWX,YAAX,CAA7B,CAvB4C,CAyB5C;;AAEA,SAAO,aAAaR,KAAK,CAACsB,aAAN,CAAoBtB,KAAK,CAACuB,QAA1B,EAAoC,IAApC,EAA0C,aAAavB,KAAK,CAACsB,aAAN,CAAoB,KAApB,EAA2B1B,QAAQ,CAAC;AAC7Ga,IAAAA,EAAE,EAAEA,EADyG;AAE7GJ,IAAAA,SAAS,EAAEP,UAAU,CAAC,GAAG0B,MAAH,CAAUpB,SAAV,EAAqB,UAArB,CAAD,EAAmCC,SAAnC,CAFwF;AAG7GC,IAAAA,KAAK,EAAET,aAAa,CAAC,EAAD,EAAKS,KAAL,CAHyF;AAI7G,kBAAc,MAJ+F;AAK7GmB,IAAAA,IAAI,EAAE,QALuG;AAM7GC,IAAAA,GAAG,EAAEL;AANwG,GAAD,EAO3GL,aAP2G,CAAnC,EAOxDT,QAPwD,CAAvD,CAApB;AAQD,CAnCD;;AAoCA,IAAIoB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC3B,EAAAA,WAAW,CAAC4B,WAAZ,GAA0B,aAA1B;AACD;;AACD,eAAe5B,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport classNames from 'classnames';\nimport { useComposeRef } from 'rc-util';\nimport * as React from 'react';\nimport { RefContext } from \"./context\";\nvar DrawerPanel = function DrawerPanel(props) {\n  var prefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    children = props.children,\n    containerRef = props.containerRef,\n    id = props.id,\n    onMouseEnter = props.onMouseEnter,\n    onMouseOver = props.onMouseOver,\n    onMouseLeave = props.onMouseLeave,\n    onClick = props.onClick,\n    onKeyDown = props.onKeyDown,\n    onKeyUp = props.onKeyUp;\n  var eventHandlers = {\n    onMouseEnter: onMouseEnter,\n    onMouseOver: onMouseOver,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp\n  };\n  var _React$useContext = React.useContext(RefContext),\n    panelRef = _React$useContext.panel;\n  var mergedRef = useComposeRef(panelRef, containerRef);\n\n  // =============================== Render ===============================\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    className: classNames(\"\".concat(prefixCls, \"-content\"), className),\n    style: _objectSpread({}, style),\n    \"aria-modal\": \"true\",\n    role: \"dialog\",\n    ref: mergedRef\n  }, eventHandlers), children));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DrawerPanel.displayName = 'DrawerPanel';\n}\nexport default DrawerPanel;"]},"metadata":{},"sourceType":"module"}