{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport toArray from 'rc-util/es/Children/toArray';\nimport React from 'react';\nimport CollapsePanel from '../Panel';\nvar _excluded = ['children', 'label', 'key', 'collapsible', 'onItemClick', 'destroyInactivePanel'];\n\nvar convertItemsToNodes = function convertItemsToNodes(items, props) {\n  var prefixCls = props.prefixCls,\n      accordion = props.accordion,\n      collapsible = props.collapsible,\n      destroyInactivePanel = props.destroyInactivePanel,\n      onItemClick = props.onItemClick,\n      activeKey = props.activeKey,\n      openMotion = props.openMotion,\n      expandIcon = props.expandIcon;\n  return items.map(function (item, index) {\n    var children = item.children,\n        label = item.label,\n        rawKey = item.key,\n        rawCollapsible = item.collapsible,\n        rawOnItemClick = item.onItemClick,\n        rawDestroyInactivePanel = item.destroyInactivePanel,\n        restProps = _objectWithoutProperties(item, _excluded); // You may be puzzled why you want to convert them all into strings, me too.\n    // Maybe: https://github.com/react-component/collapse/blob/aac303a8b6ff30e35060b4f8fecde6f4556fcbe2/src/Collapse.tsx#L15\n\n\n    var key = String(rawKey !== null && rawKey !== void 0 ? rawKey : index);\n    var mergeCollapsible = rawCollapsible !== null && rawCollapsible !== void 0 ? rawCollapsible : collapsible;\n    var mergeDestroyInactivePanel = rawDestroyInactivePanel !== null && rawDestroyInactivePanel !== void 0 ? rawDestroyInactivePanel : destroyInactivePanel;\n\n    var handleItemClick = function handleItemClick(value) {\n      if (mergeCollapsible === 'disabled') return;\n      onItemClick(value);\n      rawOnItemClick === null || rawOnItemClick === void 0 ? void 0 : rawOnItemClick(value);\n    };\n\n    var isActive = false;\n\n    if (accordion) {\n      isActive = activeKey[0] === key;\n    } else {\n      isActive = activeKey.indexOf(key) > -1;\n    }\n\n    return /*#__PURE__*/React.createElement(CollapsePanel, _extends({}, restProps, {\n      prefixCls: prefixCls,\n      key: key,\n      panelKey: key,\n      isActive: isActive,\n      accordion: accordion,\n      openMotion: openMotion,\n      expandIcon: expandIcon,\n      header: label,\n      collapsible: mergeCollapsible,\n      onItemClick: handleItemClick,\n      destroyInactivePanel: mergeDestroyInactivePanel\n    }), children);\n  });\n};\n/**\n * @deprecated The next major version will be removed\n */\n\n\nvar getNewChild = function getNewChild(child, index, props) {\n  if (!child) return null;\n  var prefixCls = props.prefixCls,\n      accordion = props.accordion,\n      collapsible = props.collapsible,\n      destroyInactivePanel = props.destroyInactivePanel,\n      onItemClick = props.onItemClick,\n      activeKey = props.activeKey,\n      openMotion = props.openMotion,\n      expandIcon = props.expandIcon;\n  var key = child.key || String(index);\n  var _child$props = child.props,\n      header = _child$props.header,\n      headerClass = _child$props.headerClass,\n      childDestroyInactivePanel = _child$props.destroyInactivePanel,\n      childCollapsible = _child$props.collapsible,\n      childOnItemClick = _child$props.onItemClick;\n  var isActive = false;\n\n  if (accordion) {\n    isActive = activeKey[0] === key;\n  } else {\n    isActive = activeKey.indexOf(key) > -1;\n  }\n\n  var mergeCollapsible = childCollapsible !== null && childCollapsible !== void 0 ? childCollapsible : collapsible;\n\n  var handleItemClick = function handleItemClick(value) {\n    if (mergeCollapsible === 'disabled') return;\n    onItemClick(value);\n    childOnItemClick === null || childOnItemClick === void 0 ? void 0 : childOnItemClick(value);\n  };\n\n  var childProps = {\n    key: key,\n    panelKey: key,\n    header: header,\n    headerClass: headerClass,\n    isActive: isActive,\n    prefixCls: prefixCls,\n    destroyInactivePanel: childDestroyInactivePanel !== null && childDestroyInactivePanel !== void 0 ? childDestroyInactivePanel : destroyInactivePanel,\n    openMotion: openMotion,\n    accordion: accordion,\n    children: child.props.children,\n    onItemClick: handleItemClick,\n    expandIcon: expandIcon,\n    collapsible: mergeCollapsible\n  }; // https://github.com/ant-design/ant-design/issues/20479\n\n  if (typeof child.type === 'string') {\n    return child;\n  }\n\n  Object.keys(childProps).forEach(function (propName) {\n    if (typeof childProps[propName] === 'undefined') {\n      delete childProps[propName];\n    }\n  });\n  return /*#__PURE__*/React.cloneElement(child, childProps);\n};\n\nfunction useItems(items, rawChildren, props) {\n  if (Array.isArray(items)) {\n    return convertItemsToNodes(items, props);\n  }\n\n  return toArray(rawChildren).map(function (child, index) {\n    return getNewChild(child, index, props);\n  });\n}\n\nexport default useItems;","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/rc-collapse/es/hooks/useItems.js"],"names":["_extends","_objectWithoutProperties","toArray","React","CollapsePanel","_excluded","convertItemsToNodes","items","props","prefixCls","accordion","collapsible","destroyInactivePanel","onItemClick","activeKey","openMotion","expandIcon","map","item","index","children","label","rawKey","key","rawCollapsible","rawOnItemClick","rawDestroyInactivePanel","restProps","String","mergeCollapsible","mergeDestroyInactivePanel","handleItemClick","value","isActive","indexOf","createElement","panelKey","header","getNewChild","child","_child$props","headerClass","childDestroyInactivePanel","childCollapsible","childOnItemClick","childProps","type","Object","keys","forEach","propName","cloneElement","useItems","rawChildren","Array","isArray"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport toArray from 'rc-util/es/Children/toArray';\nimport React from 'react';\nimport CollapsePanel from '../Panel';\nvar _excluded = ['children', 'label', 'key', 'collapsible', 'onItemClick', 'destroyInactivePanel'];\nvar convertItemsToNodes = function convertItemsToNodes(items, props) {\n  var prefixCls = props.prefixCls,\n    accordion = props.accordion,\n    collapsible = props.collapsible,\n    destroyInactivePanel = props.destroyInactivePanel,\n    onItemClick = props.onItemClick,\n    activeKey = props.activeKey,\n    openMotion = props.openMotion,\n    expandIcon = props.expandIcon;\n  return items.map(function (item, index) {\n    var children = item.children,\n      label = item.label,\n      rawKey = item.key,\n      rawCollapsible = item.collapsible,\n      rawOnItemClick = item.onItemClick,\n      rawDestroyInactivePanel = item.destroyInactivePanel,\n      restProps = _objectWithoutProperties(item, _excluded);\n\n    // You may be puzzled why you want to convert them all into strings, me too.\n    // Maybe: https://github.com/react-component/collapse/blob/aac303a8b6ff30e35060b4f8fecde6f4556fcbe2/src/Collapse.tsx#L15\n    var key = String(rawKey !== null && rawKey !== void 0 ? rawKey : index);\n    var mergeCollapsible =\n      rawCollapsible !== null && rawCollapsible !== void 0 ? rawCollapsible : collapsible;\n    var mergeDestroyInactivePanel =\n      rawDestroyInactivePanel !== null && rawDestroyInactivePanel !== void 0\n        ? rawDestroyInactivePanel\n        : destroyInactivePanel;\n    var handleItemClick = function handleItemClick(value) {\n      if (mergeCollapsible === 'disabled') return;\n      onItemClick(value);\n      rawOnItemClick === null || rawOnItemClick === void 0 ? void 0 : rawOnItemClick(value);\n    };\n    var isActive = false;\n    if (accordion) {\n      isActive = activeKey[0] === key;\n    } else {\n      isActive = activeKey.indexOf(key) > -1;\n    }\n    return /*#__PURE__*/ React.createElement(\n      CollapsePanel,\n      _extends({}, restProps, {\n        prefixCls: prefixCls,\n        key: key,\n        panelKey: key,\n        isActive: isActive,\n        accordion: accordion,\n        openMotion: openMotion,\n        expandIcon: expandIcon,\n        header: label,\n        collapsible: mergeCollapsible,\n        onItemClick: handleItemClick,\n        destroyInactivePanel: mergeDestroyInactivePanel,\n      }),\n      children,\n    );\n  });\n};\n\n/**\n * @deprecated The next major version will be removed\n */\nvar getNewChild = function getNewChild(child, index, props) {\n  if (!child) return null;\n  var prefixCls = props.prefixCls,\n    accordion = props.accordion,\n    collapsible = props.collapsible,\n    destroyInactivePanel = props.destroyInactivePanel,\n    onItemClick = props.onItemClick,\n    activeKey = props.activeKey,\n    openMotion = props.openMotion,\n    expandIcon = props.expandIcon;\n  var key = child.key || String(index);\n  var _child$props = child.props,\n    header = _child$props.header,\n    headerClass = _child$props.headerClass,\n    childDestroyInactivePanel = _child$props.destroyInactivePanel,\n    childCollapsible = _child$props.collapsible,\n    childOnItemClick = _child$props.onItemClick;\n  var isActive = false;\n  if (accordion) {\n    isActive = activeKey[0] === key;\n  } else {\n    isActive = activeKey.indexOf(key) > -1;\n  }\n  var mergeCollapsible =\n    childCollapsible !== null && childCollapsible !== void 0 ? childCollapsible : collapsible;\n  var handleItemClick = function handleItemClick(value) {\n    if (mergeCollapsible === 'disabled') return;\n    onItemClick(value);\n    childOnItemClick === null || childOnItemClick === void 0 ? void 0 : childOnItemClick(value);\n  };\n  var childProps = {\n    key: key,\n    panelKey: key,\n    header: header,\n    headerClass: headerClass,\n    isActive: isActive,\n    prefixCls: prefixCls,\n    destroyInactivePanel:\n      childDestroyInactivePanel !== null && childDestroyInactivePanel !== void 0\n        ? childDestroyInactivePanel\n        : destroyInactivePanel,\n    openMotion: openMotion,\n    accordion: accordion,\n    children: child.props.children,\n    onItemClick: handleItemClick,\n    expandIcon: expandIcon,\n    collapsible: mergeCollapsible,\n  };\n\n  // https://github.com/ant-design/ant-design/issues/20479\n  if (typeof child.type === 'string') {\n    return child;\n  }\n  Object.keys(childProps).forEach(function (propName) {\n    if (typeof childProps[propName] === 'undefined') {\n      delete childProps[propName];\n    }\n  });\n  return /*#__PURE__*/ React.cloneElement(child, childProps);\n};\nfunction useItems(items, rawChildren, props) {\n  if (Array.isArray(items)) {\n    return convertItemsToNodes(items, props);\n  }\n  return toArray(rawChildren).map(function (child, index) {\n    return getNewChild(child, index, props);\n  });\n}\nexport default useItems;\n"]},"metadata":{},"sourceType":"module"}