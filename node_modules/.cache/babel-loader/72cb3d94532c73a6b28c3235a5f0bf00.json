{"ast":null,"code":"import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genSpaceCompactStyle from './compact';\n\nconst genSpaceStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'inline-flex',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-vertical': {\n        flexDirection: 'column'\n      },\n      '&-align': {\n        flexDirection: 'column',\n        '&-center': {\n          alignItems: 'center'\n        },\n        '&-start': {\n          alignItems: 'flex-start'\n        },\n        '&-end': {\n          alignItems: 'flex-end'\n        },\n        '&-baseline': {\n          alignItems: 'baseline'\n        }\n      },\n      [`${componentCls}-item:empty`]: {\n        display: 'none'\n      }\n    }\n  };\n};\n\nconst genSpaceGapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      '&-gap-row-small': {\n        rowGap: token.spaceGapSmallSize\n      },\n      '&-gap-row-middle': {\n        rowGap: token.spaceGapMiddleSize\n      },\n      '&-gap-row-large': {\n        rowGap: token.spaceGapLargeSize\n      },\n      '&-gap-col-small': {\n        columnGap: token.spaceGapSmallSize\n      },\n      '&-gap-col-middle': {\n        columnGap: token.spaceGapMiddleSize\n      },\n      '&-gap-col-large': {\n        columnGap: token.spaceGapLargeSize\n      }\n    }\n  };\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Space', token => {\n  const spaceToken = mergeToken(token, {\n    spaceGapSmallSize: token.paddingXS,\n    spaceGapMiddleSize: token.padding,\n    spaceGapLargeSize: token.paddingLG\n  });\n  return [genSpaceStyle(spaceToken), genSpaceGapStyle(spaceToken), genSpaceCompactStyle(spaceToken)];\n}, () => ({}), {\n  // Space component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/40315\n  resetStyle: false\n});","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/space/style/index.js"],"names":["genComponentStyleHook","mergeToken","genSpaceCompactStyle","genSpaceStyle","token","componentCls","display","direction","flexDirection","alignItems","genSpaceGapStyle","rowGap","spaceGapSmallSize","spaceGapMiddleSize","spaceGapLargeSize","columnGap","spaceToken","paddingXS","padding","paddingLG","resetStyle"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,UAAhC,QAAkD,sBAAlD;AACA,OAAOC,oBAAP,MAAiC,WAAjC;;AACA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAM;AACJC,IAAAA;AADI,MAEFD,KAFJ;AAGA,SAAO;AACL,KAACC,YAAD,GAAgB;AACdC,MAAAA,OAAO,EAAE,aADK;AAEd,eAAS;AACPC,QAAAA,SAAS,EAAE;AADJ,OAFK;AAKd,oBAAc;AACZC,QAAAA,aAAa,EAAE;AADH,OALA;AAQd,iBAAW;AACTA,QAAAA,aAAa,EAAE,QADN;AAET,oBAAY;AACVC,UAAAA,UAAU,EAAE;AADF,SAFH;AAKT,mBAAW;AACTA,UAAAA,UAAU,EAAE;AADH,SALF;AAQT,iBAAS;AACPA,UAAAA,UAAU,EAAE;AADL,SARA;AAWT,sBAAc;AACZA,UAAAA,UAAU,EAAE;AADA;AAXL,OARG;AAuBd,OAAE,GAAEJ,YAAa,aAAjB,GAAgC;AAC9BC,QAAAA,OAAO,EAAE;AADqB;AAvBlB;AADX,GAAP;AA6BD,CAjCD;;AAkCA,MAAMI,gBAAgB,GAAGN,KAAK,IAAI;AAChC,QAAM;AACJC,IAAAA;AADI,MAEFD,KAFJ;AAGA,SAAO;AACL,KAACC,YAAD,GAAgB;AACd,yBAAmB;AACjBM,QAAAA,MAAM,EAAEP,KAAK,CAACQ;AADG,OADL;AAId,0BAAoB;AAClBD,QAAAA,MAAM,EAAEP,KAAK,CAACS;AADI,OAJN;AAOd,yBAAmB;AACjBF,QAAAA,MAAM,EAAEP,KAAK,CAACU;AADG,OAPL;AAUd,yBAAmB;AACjBC,QAAAA,SAAS,EAAEX,KAAK,CAACQ;AADA,OAVL;AAad,0BAAoB;AAClBG,QAAAA,SAAS,EAAEX,KAAK,CAACS;AADC,OAbN;AAgBd,yBAAmB;AACjBE,QAAAA,SAAS,EAAEX,KAAK,CAACU;AADA;AAhBL;AADX,GAAP;AAsBD,CA1BD,C,CA2BA;;;AACA,eAAed,qBAAqB,CAAC,OAAD,EAAUI,KAAK,IAAI;AACrD,QAAMY,UAAU,GAAGf,UAAU,CAACG,KAAD,EAAQ;AACnCQ,IAAAA,iBAAiB,EAAER,KAAK,CAACa,SADU;AAEnCJ,IAAAA,kBAAkB,EAAET,KAAK,CAACc,OAFS;AAGnCJ,IAAAA,iBAAiB,EAAEV,KAAK,CAACe;AAHU,GAAR,CAA7B;AAKA,SAAO,CAAChB,aAAa,CAACa,UAAD,CAAd,EAA4BN,gBAAgB,CAACM,UAAD,CAA5C,EAA0Dd,oBAAoB,CAACc,UAAD,CAA9E,CAAP;AACD,CAPmC,EAOjC,OAAO,EAAP,CAPiC,EAOrB;AACb;AACA;AACAI,EAAAA,UAAU,EAAE;AAHC,CAPqB,CAApC","sourcesContent":["import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genSpaceCompactStyle from './compact';\nconst genSpaceStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'inline-flex',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-vertical': {\n        flexDirection: 'column'\n      },\n      '&-align': {\n        flexDirection: 'column',\n        '&-center': {\n          alignItems: 'center'\n        },\n        '&-start': {\n          alignItems: 'flex-start'\n        },\n        '&-end': {\n          alignItems: 'flex-end'\n        },\n        '&-baseline': {\n          alignItems: 'baseline'\n        }\n      },\n      [`${componentCls}-item:empty`]: {\n        display: 'none'\n      }\n    }\n  };\n};\nconst genSpaceGapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      '&-gap-row-small': {\n        rowGap: token.spaceGapSmallSize\n      },\n      '&-gap-row-middle': {\n        rowGap: token.spaceGapMiddleSize\n      },\n      '&-gap-row-large': {\n        rowGap: token.spaceGapLargeSize\n      },\n      '&-gap-col-small': {\n        columnGap: token.spaceGapSmallSize\n      },\n      '&-gap-col-middle': {\n        columnGap: token.spaceGapMiddleSize\n      },\n      '&-gap-col-large': {\n        columnGap: token.spaceGapLargeSize\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Space', token => {\n  const spaceToken = mergeToken(token, {\n    spaceGapSmallSize: token.paddingXS,\n    spaceGapMiddleSize: token.padding,\n    spaceGapLargeSize: token.paddingLG\n  });\n  return [genSpaceStyle(spaceToken), genSpaceGapStyle(spaceToken), genSpaceCompactStyle(spaceToken)];\n}, () => ({}), {\n  // Space component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/40315\n  resetStyle: false\n});"]},"metadata":{},"sourceType":"module"}