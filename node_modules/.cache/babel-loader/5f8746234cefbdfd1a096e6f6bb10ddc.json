{"ast":null,"code":"import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal'; // ============================== Styles ==============================\n\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: token.tagLineHeight,\n      whiteSpace: 'nowrap',\n      background: token.defaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      position: 'relative',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.defaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n}; // ============================== Export ==============================\n\n\nexport const prepareToken = token => {\n  const {\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = `${token.lineHeightSM * tagFontSize}px`;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8,\n    tagBorderlessBg: token.colorFillTertiary\n  });\n  return tagToken;\n};\nexport const prepareCommonToken = token => ({\n  defaultBg: token.colorFillQuaternary,\n  defaultColor: token.colorText\n});\nexport default genComponentStyleHook('Tag', token => {\n  const tagToken = prepareToken(token);\n  return genBaseStyle(tagToken);\n}, prepareCommonToken);","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/tag/style/index.js"],"names":["resetComponent","genComponentStyleHook","mergeToken","genBaseStyle","token","paddingXXS","lineWidth","tagPaddingHorizontal","componentCls","paddingInline","iconMarginInline","Object","assign","display","height","marginInlineEnd","marginXS","fontSize","tagFontSize","lineHeight","tagLineHeight","whiteSpace","background","defaultBg","border","lineType","colorBorder","borderRadius","borderRadiusSM","opacity","transition","motionDurationMid","textAlign","position","direction","color","defaultColor","marginInlineStart","colorTextDescription","tagIconSize","cursor","colorTextHeading","borderColor","iconCls","colorTextLightSolid","backgroundColor","colorPrimary","colorFillSecondary","colorPrimaryHover","colorPrimaryActive","tagBorderlessBg","prepareToken","fontSizeIcon","fontSizeSM","lineHeightSM","tagToken","colorFillTertiary","prepareCommonToken","colorFillQuaternary","colorText"],"mappings":"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","sourcesContent":["import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// ============================== Styles ==============================\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: token.tagLineHeight,\n      whiteSpace: 'nowrap',\n      background: token.defaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      position: 'relative',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.defaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareToken = token => {\n  const {\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = `${token.lineHeightSM * tagFontSize}px`;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8,\n    tagBorderlessBg: token.colorFillTertiary\n  });\n  return tagToken;\n};\nexport const prepareCommonToken = token => ({\n  defaultBg: token.colorFillQuaternary,\n  defaultColor: token.colorText\n});\nexport default genComponentStyleHook('Tag', token => {\n  const tagToken = prepareToken(token);\n  return genBaseStyle(tagToken);\n}, prepareCommonToken);"]},"metadata":{},"sourceType":"module"}