{"ast":null,"code":"const genVirtualStyle = token => {\n  const {\n    componentCls,\n    motionDurationMid\n  } = token;\n  const tableBorder = `${token.lineWidth}px ${token.lineType} ${token.tableBorderColor}`;\n  const rowCellCls = `${componentCls}-expanded-row-cell`;\n  return {\n    [`${componentCls}-wrapper`]: {\n      // ========================== Row ==========================\n      [`${componentCls}-tbody-virtual`]: {\n        [`${componentCls}-row`]: {\n          display: 'flex',\n          boxSizing: 'border-box',\n          width: '100%'\n        },\n        [`${componentCls}-cell`]: {\n          borderBottom: tableBorder,\n          transition: `background ${motionDurationMid}`\n        },\n        [`${componentCls}-expanded-row`]: {\n          [`${rowCellCls}${rowCellCls}-fixed`]: {\n            position: 'sticky',\n            insetInlineStart: 0,\n            overflow: 'hidden',\n            width: `calc(var(--virtual-width) - ${token.lineWidth}px)`,\n            borderInlineEnd: 'none'\n          }\n        }\n      },\n      // ======================== Border =========================\n      [`${componentCls}-bordered`]: {\n        [`${componentCls}-tbody-virtual`]: {\n          '&:after': {\n            content: '\"\"',\n            insetInline: 0,\n            bottom: 0,\n            borderBottom: tableBorder,\n            position: 'absolute'\n          },\n          [`${componentCls}-cell`]: {\n            borderInlineEnd: tableBorder,\n            [`&${componentCls}-cell-fix-right-first:before`]: {\n              content: '\"\"',\n              position: 'absolute',\n              insetBlock: 0,\n              insetInlineStart: -token.lineWidth,\n              borderInlineStart: tableBorder\n            }\n          }\n        },\n        // Empty placeholder\n        [`&${componentCls}-virtual`]: {\n          [`${componentCls}-placeholder ${componentCls}-cell`]: {\n            borderInlineEnd: tableBorder,\n            borderBottom: tableBorder\n          }\n        }\n      }\n    }\n  };\n};\n\nexport default genVirtualStyle;","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/table/style/virtual.js"],"names":["genVirtualStyle","token","componentCls","motionDurationMid","tableBorder","lineWidth","lineType","tableBorderColor","rowCellCls","display","boxSizing","width","borderBottom","transition","position","insetInlineStart","overflow","borderInlineEnd","content","insetInline","bottom","insetBlock","borderInlineStart"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA;AAFI,MAGFF,KAHJ;AAIA,QAAMG,WAAW,GAAI,GAAEH,KAAK,CAACI,SAAU,MAAKJ,KAAK,CAACK,QAAS,IAAGL,KAAK,CAACM,gBAAiB,EAArF;AACA,QAAMC,UAAU,GAAI,GAAEN,YAAa,oBAAnC;AACA,SAAO;AACL,KAAE,GAAEA,YAAa,UAAjB,GAA6B;AAC3B;AACA,OAAE,GAAEA,YAAa,gBAAjB,GAAmC;AACjC,SAAE,GAAEA,YAAa,MAAjB,GAAyB;AACvBO,UAAAA,OAAO,EAAE,MADc;AAEvBC,UAAAA,SAAS,EAAE,YAFY;AAGvBC,UAAAA,KAAK,EAAE;AAHgB,SADQ;AAMjC,SAAE,GAAET,YAAa,OAAjB,GAA0B;AACxBU,UAAAA,YAAY,EAAER,WADU;AAExBS,UAAAA,UAAU,EAAG,cAAaV,iBAAkB;AAFpB,SANO;AAUjC,SAAE,GAAED,YAAa,eAAjB,GAAkC;AAChC,WAAE,GAAEM,UAAW,GAAEA,UAAW,QAA5B,GAAsC;AACpCM,YAAAA,QAAQ,EAAE,QAD0B;AAEpCC,YAAAA,gBAAgB,EAAE,CAFkB;AAGpCC,YAAAA,QAAQ,EAAE,QAH0B;AAIpCL,YAAAA,KAAK,EAAG,+BAA8BV,KAAK,CAACI,SAAU,KAJlB;AAKpCY,YAAAA,eAAe,EAAE;AALmB;AADN;AAVD,OAFR;AAsB3B;AACA,OAAE,GAAEf,YAAa,WAAjB,GAA8B;AAC5B,SAAE,GAAEA,YAAa,gBAAjB,GAAmC;AACjC,qBAAW;AACTgB,YAAAA,OAAO,EAAE,IADA;AAETC,YAAAA,WAAW,EAAE,CAFJ;AAGTC,YAAAA,MAAM,EAAE,CAHC;AAITR,YAAAA,YAAY,EAAER,WAJL;AAKTU,YAAAA,QAAQ,EAAE;AALD,WADsB;AAQjC,WAAE,GAAEZ,YAAa,OAAjB,GAA0B;AACxBe,YAAAA,eAAe,EAAEb,WADO;AAExB,aAAE,IAAGF,YAAa,8BAAlB,GAAkD;AAChDgB,cAAAA,OAAO,EAAE,IADuC;AAEhDJ,cAAAA,QAAQ,EAAE,UAFsC;AAGhDO,cAAAA,UAAU,EAAE,CAHoC;AAIhDN,cAAAA,gBAAgB,EAAE,CAACd,KAAK,CAACI,SAJuB;AAKhDiB,cAAAA,iBAAiB,EAAElB;AAL6B;AAF1B;AARO,SADP;AAoB5B;AACA,SAAE,IAAGF,YAAa,UAAlB,GAA8B;AAC5B,WAAE,GAAEA,YAAa,gBAAeA,YAAa,OAA7C,GAAsD;AACpDe,YAAAA,eAAe,EAAEb,WADmC;AAEpDQ,YAAAA,YAAY,EAAER;AAFsC;AAD1B;AArBF;AAvBH;AADxB,GAAP;AAsDD,CA7DD;;AA8DA,eAAeJ,eAAf","sourcesContent":["const genVirtualStyle = token => {\n  const {\n    componentCls,\n    motionDurationMid\n  } = token;\n  const tableBorder = `${token.lineWidth}px ${token.lineType} ${token.tableBorderColor}`;\n  const rowCellCls = `${componentCls}-expanded-row-cell`;\n  return {\n    [`${componentCls}-wrapper`]: {\n      // ========================== Row ==========================\n      [`${componentCls}-tbody-virtual`]: {\n        [`${componentCls}-row`]: {\n          display: 'flex',\n          boxSizing: 'border-box',\n          width: '100%'\n        },\n        [`${componentCls}-cell`]: {\n          borderBottom: tableBorder,\n          transition: `background ${motionDurationMid}`\n        },\n        [`${componentCls}-expanded-row`]: {\n          [`${rowCellCls}${rowCellCls}-fixed`]: {\n            position: 'sticky',\n            insetInlineStart: 0,\n            overflow: 'hidden',\n            width: `calc(var(--virtual-width) - ${token.lineWidth}px)`,\n            borderInlineEnd: 'none'\n          }\n        }\n      },\n      // ======================== Border =========================\n      [`${componentCls}-bordered`]: {\n        [`${componentCls}-tbody-virtual`]: {\n          '&:after': {\n            content: '\"\"',\n            insetInline: 0,\n            bottom: 0,\n            borderBottom: tableBorder,\n            position: 'absolute'\n          },\n          [`${componentCls}-cell`]: {\n            borderInlineEnd: tableBorder,\n            [`&${componentCls}-cell-fix-right-first:before`]: {\n              content: '\"\"',\n              position: 'absolute',\n              insetBlock: 0,\n              insetInlineStart: -token.lineWidth,\n              borderInlineStart: tableBorder\n            }\n          }\n        },\n        // Empty placeholder\n        [`&${componentCls}-virtual`]: {\n          [`${componentCls}-placeholder ${componentCls}-cell`]: {\n            borderInlineEnd: tableBorder,\n            borderBottom: tableBorder\n          }\n        }\n      }\n    }\n  };\n};\nexport default genVirtualStyle;"]},"metadata":{},"sourceType":"module"}