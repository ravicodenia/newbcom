{"ast":null,"code":"import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal'; // ============================== Shared ==============================\n\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth,\n    textPaddingInline,\n    orientationMargin,\n    verticalMarginInline\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${lineWidth}px solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        marginInline: verticalMarginInline,\n        marginBlock: 0,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${lineWidth}px solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        margin: `${token.dividerHorizontalGutterMargin}px 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${token.dividerHorizontalWithTextGutterMargin}px 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${lineWidth}px solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: `${orientationMargin * 100}%`\n        },\n        '&::after': {\n          width: `${100 - orientationMargin * 100}%`\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: `${100 - orientationMargin * 100}%`\n        },\n        '&::after': {\n          width: `${orientationMargin * 100}%`\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        paddingBlock: 0,\n        paddingInline: textPaddingInline\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${lineWidth}px 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG,\n    sizePaddingEdgeHorizontal: 0\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, token => ({\n  textPaddingInline: '1em',\n  orientationMargin: 0.05,\n  verticalMarginInline: token.marginXS\n}));","map":{"version":3,"sources":["/Users/ravisrivastava/Downloads/newbcom/node_modules/antd/es/divider/style/index.js"],"names":["resetComponent","genComponentStyleHook","mergeToken","genSharedDividerStyle","token","componentCls","sizePaddingEdgeHorizontal","colorSplit","lineWidth","textPaddingInline","orientationMargin","verticalMarginInline","Object","assign","borderBlockStart","position","top","display","height","marginInline","marginBlock","verticalAlign","borderTop","borderInlineStart","clear","width","minWidth","margin","dividerHorizontalGutterMargin","alignItems","dividerHorizontalWithTextGutterMargin","color","colorTextHeading","fontWeight","fontSize","fontSizeLG","whiteSpace","textAlign","borderBlockStartColor","borderBlockEnd","transform","content","paddingBlock","paddingInline","background","borderColor","borderStyle","borderWidth","borderInlineStartWidth","borderInlineEnd","colorText","paddingInlineStart","paddingInlineEnd","dividerToken","marginLG","marginXS"],"mappings":"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","sourcesContent":["import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// ============================== Shared ==============================\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth,\n    textPaddingInline,\n    orientationMargin,\n    verticalMarginInline\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${lineWidth}px solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        marginInline: verticalMarginInline,\n        marginBlock: 0,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${lineWidth}px solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        margin: `${token.dividerHorizontalGutterMargin}px 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${token.dividerHorizontalWithTextGutterMargin}px 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${lineWidth}px solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: `${orientationMargin * 100}%`\n        },\n        '&::after': {\n          width: `${100 - orientationMargin * 100}%`\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: `${100 - orientationMargin * 100}%`\n        },\n        '&::after': {\n          width: `${orientationMargin * 100}%`\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        paddingBlock: 0,\n        paddingInline: textPaddingInline\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${lineWidth}px 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG,\n    sizePaddingEdgeHorizontal: 0\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, token => ({\n  textPaddingInline: '1em',\n  orientationMargin: 0.05,\n  verticalMarginInline: token.marginXS\n}));"]},"metadata":{},"sourceType":"module"}